{"version":3,"file":"bundle.js","mappings":"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GAAIA,QACF,OAAO,GAGT,GAAoB,iBAATA,EACT,OAuDgBogC,EAvDMpgC,EA8D5B,SAAiBuE,GACf,OAAO,GAAQA,IAASA,EAAKgC,UAAY65B,CAC3C,EATF,IAAwBA,EApDlB,GAAoB,iBAATpgC,EACT,OAeR,SAAoBqF,GAElB,MAAMC,EAAS,GACf,IAAI1I,GAAS,EAEb,OAASA,EAAQyI,EAAMnI,QACrBoI,EAAO1I,GAAS6nC,GAAep/B,EAAMzI,IAGvC,OAAO,IAOP,YAAgB6a,GACd,IAAI7a,GAAS,EAEb,OAASA,EAAQ0I,EAAOpI,QACtB,GAAIoI,EAAO1I,GAAOmB,KAAKyH,QAASiS,GAC9B,OAAO,EAIX,OAAO,CACT,GACF,CA1Ce,CAAWzX,GAGpB,GAAoB,mBAATA,EACT,OAAO,GAAYA,GAGrB,MAAM,IAAIhD,MAAM,8CAEpB,EA0DF,SAAS,GAAYojC,GACnB,OAQA,SAAmB77B,KAASkT,GAE1B,OAAO,GAAQlT,IAASY,QAAQi7B,EAAMriC,KAAKyH,KAAMjB,KAASkT,GAC5D,CACF,CAOA,SAAS,GAAQlT,GACf,OAAOY,QACLZ,GACkB,iBAATA,GAEO,YAAdA,EAAKC,MAEmB,iBAAjBD,EAAKgC,QAElB,CCzOO,MAAMo+B,GAAWF,GAAe,CACrC,QACA,SACA,QACA,SACA,MACA,OACA,SACA,UACA,MACA,UCrBWG,GAAS,CACpB,UACA,UACA,QACA,aACA,OACA,KACA,UACA,SACA,MACA,WACA,KACA,SACA,MACA,MACA,KACA,KACA,aACA,SACA,SACA,OACA,KACA,KACA,KACA,KACA,KACA,KACA,OACA,SACA,SACA,KACA,OACA,SACA,KACA,KACA,UACA,OACA,OACA,MACA,KACA,WACA,SACA,IACA,YACA,MACA,UACA,UACA,QACA,QACA,KACA,KACA,QACA,KACA,KACA,QACA,KACA,KACA,MACA,OC3DWjwB,GAAU,CAErB,SACA,QACA,SACA,YCLWkwB,GAAY,CACvB,OACA,OACA,WACA,SACA,WACA,OACA,OACA,OACA,UACA,WACA,QACA,KACA,SACA,SACA,QACA,WA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","sources":["webpack://google-docs-to-markdown/./node_modules/ccount/index.js","webpack://google-docs-to-markdown/./node_modules/extend/index.js","webpack://google-docs-to-markdown/./node_modules/inherits/inherits_browser.js","webpack://google-docs-to-markdown/./node_modules/is-alphabetical/index.js","webpack://google-docs-to-markdown/./node_modules/is-alphanumeric/index.js","webpack://google-docs-to-markdown/./node_modules/is-alphanumerical/index.js","webpack://google-docs-to-markdown/./node_modules/is-buffer/index.js","webpack://google-docs-to-markdown/./node_modules/is-decimal/index.js","webpack://google-docs-to-markdown/./node_modules/is-hexadecimal/index.js","webpack://google-docs-to-markdown/./node_modules/is-whitespace-character/index.js","webpack://google-docs-to-markdown/./node_modules/longest-streak/index.js","webpack://google-docs-to-markdown/./node_modules/markdown-escapes/index.js","webpack://google-docs-to-markdown/./node_modules/markdown-table/index.js","webpack://google-docs-to-markdown/./node_modules/mdast-util-compact/index.js","webpack://google-docs-to-markdown/./node_modules/mdast-util-compact/node_modules/unist-util-is/convert.js","webpack://google-docs-to-markdown/./node_modules/mdast-util-compact/node_modules/unist-util-visit-parents/color.browser.js","webpack://google-docs-to-markdown/./node_modules/mdast-util-compact/node_modules/unist-util-visit-parents/index.js","webpack://google-docs-to-markdown/./node_modules/mdast-util-compact/node_modules/unist-util-visit/index.js","webpack://google-docs-to-markdown/./node_modules/parse-entities/decode-entity.browser.js","webpack://google-docs-to-markdown/./node_modules/parse-entities/index.js","webpack://google-docs-to-markdown/./node_modules/remark-stringify/index.js","webpack://google-docs-to-markdown/./node_modules/remark-stringify/lib/compiler.js","webpack://google-docs-to-markdown/./node_modules/remark-stringify/lib/defaults.js","webpack://google-docs-to-markdown/./node_modules/remark-stringify/lib/escape.js","webpack://google-docs-to-markdown/./node_modules/remark-stringify/lib/macro/all.js","webpack://google-docs-to-markdown/./node_modules/remark-stringify/lib/macro/block.js","webpack://google-docs-to-markdown/./node_modules/remark-stringify/lib/macro/compile.js","webpack://google-docs-to-markdown/./node_modules/remark-stringify/lib/macro/one.js","webpack://google-docs-to-markdown/./node_modules/remark-stringify/lib/macro/ordered-items.js","webpack://google-docs-to-markdown/./node_modules/remark-stringify/lib/macro/unordered-items.js","webpack://google-docs-to-markdown/./node_modules/remark-stringify/lib/set-options.js","webpack://google-docs-to-markdown/./node_modules/remark-stringify/lib/util/copy-identifier-encoding.js","webpack://google-docs-to-markdown/./node_modules/remark-stringify/lib/util/enclose-title.js","webpack://google-docs-to-markdown/./node_modules/remark-stringify/lib/util/enclose-uri.js","webpack://google-docs-to-markdown/./node_modules/remark-stringify/lib/util/enter-link-reference.js","webpack://google-docs-to-markdown/./node_modules/remark-stringify/lib/util/entity-prefix-length.js","webpack://google-docs-to-markdown/./node_modules/remark-stringify/lib/util/identity.js","webpack://google-docs-to-markdown/./node_modules/remark-stringify/lib/util/label.js","webpack://google-docs-to-markdown/./node_modules/remark-stringify/lib/util/pad.js","webpack://google-docs-to-markdown/./node_modules/remark-stringify/lib/visitors/blockquote.js","webpack://google-docs-to-markdown/./node_modules/remark-stringify/lib/visitors/break.js","webpack://google-docs-to-markdown/./node_modules/remark-stringify/lib/visitors/code.js","webpack://google-docs-to-markdown/./node_modules/remark-stringify/lib/visitors/definition.js","webpack://google-docs-to-markdown/./node_modules/remark-stringify/lib/visitors/delete.js","webpack://google-docs-to-markdown/./node_modules/remark-stringify/lib/visitors/emphasis.js","webpack://google-docs-to-markdown/./node_modules/remark-stringify/lib/visitors/heading.js","webpack://google-docs-to-markdown/./node_modules/remark-stringify/lib/visitors/html.js","webpack://google-docs-to-markdown/./node_modules/remark-stringify/lib/visitors/image-reference.js","webpack://google-docs-to-markdown/./node_modules/remark-stringify/lib/visitors/image.js","webpack://google-docs-to-markdown/./node_modules/remark-stringify/lib/visitors/inline-code.js","webpack://google-docs-to-markdown/./node_modules/remark-stringify/lib/visitors/link-reference.js","webpack://google-docs-to-markdown/./node_modules/remark-stringify/lib/visitors/link.js","webpack://google-docs-to-markdown/./node_modules/remark-stringify/lib/visitors/list-item.js","webpack://google-docs-to-markdown/./node_modules/remark-stringify/lib/visitors/list.js","webpack://google-docs-to-markdown/./node_modules/remark-stringify/lib/visitors/paragraph.js","webpack://google-docs-to-markdown/./node_modules/remark-stringify/lib/visitors/root.js","webpack://google-docs-to-markdown/./node_modules/remark-stringify/lib/visitors/strong.js","webpack://google-docs-to-markdown/./node_modules/remark-stringify/lib/visitors/table-cell.js","webpack://google-docs-to-markdown/./node_modules/remark-stringify/lib/visitors/table.js","webpack://google-docs-to-markdown/./node_modules/remark-stringify/lib/visitors/text.js","webpack://google-docs-to-markdown/./node_modules/remark-stringify/lib/visitors/thematic-break.js","webpack://google-docs-to-markdown/./node_modules/repeat-string/index.js","webpack://google-docs-to-markdown/./node_modules/state-toggle/index.js","webpack://google-docs-to-markdown/./node_modules/stringify-entities/index.js","webpack://google-docs-to-markdown/./node_modules/stringify-entities/lib/constant/characters.js","webpack://google-docs-to-markdown/./node_modules/stringify-entities/lib/constant/from-char-code.js","webpack://google-docs-to-markdown/./node_modules/stringify-entities/lib/constant/has-own-property.js","webpack://google-docs-to-markdown/./node_modules/stringify-entities/lib/core.js","webpack://google-docs-to-markdown/./node_modules/stringify-entities/lib/encode.js","webpack://google-docs-to-markdown/./node_modules/stringify-entities/lib/escape.js","webpack://google-docs-to-markdown/./node_modules/stringify-entities/lib/index.js","webpack://google-docs-to-markdown/./node_modules/stringify-entities/lib/util/format-smart.js","webpack://google-docs-to-markdown/./node_modules/stringify-entities/lib/util/to-decimal.js","webpack://google-docs-to-markdown/./node_modules/stringify-entities/lib/util/to-hexadecimal.js","webpack://google-docs-to-markdown/./node_modules/stringify-entities/lib/util/to-named.js","webpack://google-docs-to-markdown/./node_modules/unherit/index.js","webpack://google-docs-to-markdown/./node_modules/xtend/immutable.js","webpack://google-docs-to-markdown/webpack/bootstrap","webpack://google-docs-to-markdown/webpack/runtime/define property getters","webpack://google-docs-to-markdown/webpack/runtime/hasOwnProperty shorthand","webpack://google-docs-to-markdown/webpack/runtime/make namespace object","webpack://google-docs-to-markdown/./node_modules/property-information/lib/util/schema.js","webpack://google-docs-to-markdown/./node_modules/property-information/lib/util/merge.js","webpack://google-docs-to-markdown/./node_modules/property-information/lib/normalize.js","webpack://google-docs-to-markdown/./node_modules/property-information/lib/util/info.js","webpack://google-docs-to-markdown/./node_modules/property-information/lib/util/types.js","webpack://google-docs-to-markdown/./node_modules/property-information/lib/util/defined-info.js","webpack://google-docs-to-markdown/./node_modules/property-information/lib/util/create.js","webpack://google-docs-to-markdown/./node_modules/property-information/lib/xlink.js","webpack://google-docs-to-markdown/./node_modules/property-information/lib/xml.js","webpack://google-docs-to-markdown/./node_modules/property-information/lib/util/case-sensitive-transform.js","webpack://google-docs-to-markdown/./node_modules/property-information/lib/util/case-insensitive-transform.js","webpack://google-docs-to-markdown/./node_modules/property-information/lib/xmlns.js","webpack://google-docs-to-markdown/./node_modules/property-information/lib/aria.js","webpack://google-docs-to-markdown/./node_modules/property-information/lib/html.js","webpack://google-docs-to-markdown/./node_modules/property-information/lib/svg.js","webpack://google-docs-to-markdown/./node_modules/property-information/index.js","webpack://google-docs-to-markdown/./node_modules/property-information/lib/find.js","webpack://google-docs-to-markdown/./node_modules/hast-util-parse-selector/index.js","webpack://google-docs-to-markdown/./node_modules/space-separated-tokens/index.js","webpack://google-docs-to-markdown/./node_modules/comma-separated-tokens/index.js","webpack://google-docs-to-markdown/./node_modules/hastscript/lib/core.js","webpack://google-docs-to-markdown/./node_modules/hastscript/lib/html.js","webpack://google-docs-to-markdown/./node_modules/unist-util-is/lib/index.js","webpack://google-docs-to-markdown/./node_modules/unist-util-visit-parents/lib/index.js","webpack://google-docs-to-markdown/./node_modules/unist-util-visit/lib/index.js","webpack://google-docs-to-markdown/./lib/css.js","webpack://google-docs-to-markdown/./lib/fix-google-html.js","webpack://google-docs-to-markdown/./node_modules/web-namespaces/index.js","webpack://google-docs-to-markdown/./node_modules/hastscript/lib/svg-case-sensitive-tag-names.js","webpack://google-docs-to-markdown/./node_modules/hastscript/lib/svg.js","webpack://google-docs-to-markdown/./node_modules/hast-util-from-dom/lib/index.js","webpack://google-docs-to-markdown/./node_modules/rehype-dom-parse/lib/index.js","webpack://google-docs-to-markdown/./node_modules/hast-util-to-mdast/lib/util/own.js","webpack://google-docs-to-markdown/./node_modules/hast-util-to-mdast/lib/util/wrap-text.js","webpack://google-docs-to-markdown/./node_modules/hast-util-to-mdast/lib/one.js","webpack://google-docs-to-markdown/./node_modules/hast-util-to-mdast/lib/all.js","webpack://google-docs-to-markdown/./node_modules/hast-util-is-element/index.js","webpack://google-docs-to-markdown/./node_modules/hast-util-embedded/index.js","webpack://google-docs-to-markdown/./node_modules/rehype-minify-whitespace/block.js","webpack://google-docs-to-markdown/./node_modules/rehype-minify-whitespace/content.js","webpack://google-docs-to-markdown/./node_modules/rehype-minify-whitespace/skippable.js","webpack://google-docs-to-markdown/./node_modules/rehype-minify-whitespace/index.js","webpack://google-docs-to-markdown/./node_modules/hast-util-whitespace/index.js","webpack://google-docs-to-markdown/./node_modules/mdast-util-phrasing/index.js","webpack://google-docs-to-markdown/./node_modules/hast-util-to-mdast/lib/util/wrap.js","webpack://google-docs-to-markdown/./node_modules/hast-util-to-mdast/lib/util/wrap-children.js","webpack://google-docs-to-markdown/./node_modules/hast-util-to-mdast/lib/util/resolve.js","webpack://google-docs-to-markdown/./node_modules/unist-util-find-after/index.js","webpack://google-docs-to-markdown/./node_modules/hast-util-to-text/index.js","webpack://google-docs-to-markdown/./node_modules/hast-util-to-mdast/lib/handlers/code.js","webpack://google-docs-to-markdown/./node_modules/trim-trailing-lines/index.js","webpack://google-docs-to-markdown/./node_modules/hast-util-to-mdast/lib/handlers/del.js","webpack://google-docs-to-markdown/./node_modules/hast-util-to-mdast/lib/util/list-items-spread.js","webpack://google-docs-to-markdown/./node_modules/hast-util-to-mdast/lib/util/wrap-list-items.js","webpack://google-docs-to-markdown/./node_modules/hast-util-to-mdast/lib/handlers/dl.js","webpack://google-docs-to-markdown/./node_modules/hast-util-to-mdast/lib/handlers/em.js","webpack://google-docs-to-markdown/./node_modules/hast-util-to-mdast/lib/handlers/heading.js","webpack://google-docs-to-markdown/./node_modules/hast-util-to-mdast/lib/handlers/img.js","webpack://google-docs-to-markdown/./node_modules/hast-util-to-mdast/lib/handlers/inline-code.js","webpack://google-docs-to-markdown/./node_modules/hast-util-has-property/index.js","webpack://google-docs-to-markdown/./node_modules/hast-util-to-mdast/lib/util/find-selected-options.js","webpack://google-docs-to-markdown/./node_modules/hast-util-to-mdast/lib/handlers/input.js","webpack://google-docs-to-markdown/./node_modules/hast-util-to-mdast/lib/handlers/li.js","webpack://google-docs-to-markdown/./node_modules/hast-util-to-mdast/lib/handlers/list.js","webpack://google-docs-to-markdown/./node_modules/mdast-util-to-string/index.js","webpack://google-docs-to-markdown/./node_modules/hast-util-to-mdast/lib/handlers/media.js","webpack://google-docs-to-markdown/./node_modules/hast-util-to-mdast/lib/handlers/p.js","webpack://google-docs-to-markdown/./node_modules/hast-util-to-mdast/lib/handlers/strong.js","webpack://google-docs-to-markdown/./node_modules/hast-util-to-mdast/lib/handlers/table-cell.js","webpack://google-docs-to-markdown/./node_modules/hast-util-to-mdast/lib/handlers/table.js","webpack://google-docs-to-markdown/./node_modules/hast-util-to-mdast/lib/handlers/index.js","webpack://google-docs-to-markdown/./node_modules/hast-util-to-mdast/lib/handlers/root.js","webpack://google-docs-to-markdown/./node_modules/hast-util-to-mdast/lib/handlers/text.js","webpack://google-docs-to-markdown/./node_modules/hast-util-to-mdast/lib/handlers/comment.js","webpack://google-docs-to-markdown/./node_modules/hast-util-to-mdast/lib/handlers/a.js","webpack://google-docs-to-markdown/./node_modules/hast-util-to-mdast/lib/handlers/base.js","webpack://google-docs-to-markdown/./node_modules/hast-util-to-mdast/lib/handlers/blockquote.js","webpack://google-docs-to-markdown/./node_modules/hast-util-to-mdast/lib/handlers/br.js","webpack://google-docs-to-markdown/./node_modules/hast-util-to-mdast/lib/handlers/hr.js","webpack://google-docs-to-markdown/./node_modules/hast-util-to-mdast/lib/handlers/iframe.js","webpack://google-docs-to-markdown/./node_modules/hast-util-to-mdast/lib/handlers/q.js","webpack://google-docs-to-markdown/./node_modules/hast-util-to-mdast/lib/handlers/select.js","webpack://google-docs-to-markdown/./node_modules/hast-util-to-mdast/lib/handlers/textarea.js","webpack://google-docs-to-markdown/./node_modules/hast-util-to-mdast/lib/handlers/table-row.js","webpack://google-docs-to-markdown/./node_modules/hast-util-to-mdast/lib/handlers/wbr.js","webpack://google-docs-to-markdown/./node_modules/hast-util-to-mdast/lib/index.js","webpack://google-docs-to-markdown/./node_modules/rehype-remark/lib/index.js","webpack://google-docs-to-markdown/./node_modules/bail/index.js","webpack://google-docs-to-markdown/./node_modules/is-plain-obj/index.js","webpack://google-docs-to-markdown/./node_modules/unist-util-stringify-position/index.js","webpack://google-docs-to-markdown/./node_modules/vfile-message/index.js","webpack://google-docs-to-markdown/./node_modules/vfile/lib/minpath.browser.js","webpack://google-docs-to-markdown/./node_modules/vfile/lib/minproc.browser.js","webpack://google-docs-to-markdown/./node_modules/vfile/lib/minurl.shared.js","webpack://google-docs-to-markdown/./node_modules/vfile/lib/index.js","webpack://google-docs-to-markdown/./node_modules/vfile/lib/minurl.browser.js","webpack://google-docs-to-markdown/./node_modules/unified/lib/index.js","webpack://google-docs-to-markdown/./node_modules/trough/index.js","webpack://google-docs-to-markdown/./lib/convert.js","webpack://google-docs-to-markdown/./lib/rehype-to-remark-with-spaces.js","webpack://google-docs-to-markdown/./index.js"],"sourcesContent":["'use strict'\n\nmodule.exports = ccount\n\nfunction ccount(source, character) {\n  var value = String(source)\n  var count = 0\n  var index\n\n  if (typeof character !== 'string') {\n    throw new Error('Expected character')\n  }\n\n  index = value.indexOf(character)\n\n  while (index !== -1) {\n    count++\n    index = value.indexOf(character, index + character.length)\n  }\n\n  return count\n}\n","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","'use strict'\n\nmodule.exports = alphabetical\n\n// Check if the given character code, or the character code at the first\n// character, is alphabetical.\nfunction alphabetical(character) {\n  var code = typeof character === 'string' ? character.charCodeAt(0) : character\n\n  return (\n    (code >= 97 && code <= 122) /* a-z */ ||\n    (code >= 65 && code <= 90) /* A-Z */\n  )\n}\n","'use strict';\nmodule.exports = function (str) {\n\tif (typeof str !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\treturn !/[^0-9a-z\\xDF-\\xFF]/.test(str.toLowerCase());\n};\n","'use strict'\n\nvar alphabetical = require('is-alphabetical')\nvar decimal = require('is-decimal')\n\nmodule.exports = alphanumerical\n\n// Check if the given character code, or the character code at the first\n// character, is alphanumerical.\nfunction alphanumerical(character) {\n  return alphabetical(character) || decimal(character)\n}\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n","'use strict'\n\nmodule.exports = decimal\n\n// Check if the given character code, or the character code at the first\n// character, is decimal.\nfunction decimal(character) {\n  var code = typeof character === 'string' ? character.charCodeAt(0) : character\n\n  return code >= 48 && code <= 57 /* 0-9 */\n}\n","'use strict'\n\nmodule.exports = hexadecimal\n\n// Check if the given character code, or the character code at the first\n// character, is hexadecimal.\nfunction hexadecimal(character) {\n  var code = typeof character === 'string' ? character.charCodeAt(0) : character\n\n  return (\n    (code >= 97 /* a */ && code <= 102) /* z */ ||\n    (code >= 65 /* A */ && code <= 70) /* Z */ ||\n    (code >= 48 /* A */ && code <= 57) /* Z */\n  )\n}\n","'use strict'\n\nmodule.exports = whitespace\n\nvar fromCode = String.fromCharCode\nvar re = /\\s/\n\n// Check if the given character code, or the character code at the first\n// character, is a whitespace character.\nfunction whitespace(character) {\n  return re.test(\n    typeof character === 'number' ? fromCode(character) : character.charAt(0)\n  )\n}\n","'use strict'\n\nmodule.exports = longestStreak\n\n// Get the count of the longest repeating streak of `character` in `value`.\nfunction longestStreak(value, character) {\n  var count = 0\n  var maximum = 0\n  var expected\n  var index\n\n  if (typeof character !== 'string' || character.length !== 1) {\n    throw new Error('Expected character')\n  }\n\n  value = String(value)\n  index = value.indexOf(character)\n  expected = index\n\n  while (index !== -1) {\n    count++\n\n    if (index === expected) {\n      if (count > maximum) {\n        maximum = count\n      }\n    } else {\n      count = 1\n    }\n\n    expected = index + 1\n    index = value.indexOf(character, expected)\n  }\n\n  return maximum\n}\n","'use strict'\n\nmodule.exports = escapes\n\nvar defaults = [\n  '\\\\',\n  '`',\n  '*',\n  '{',\n  '}',\n  '[',\n  ']',\n  '(',\n  ')',\n  '#',\n  '+',\n  '-',\n  '.',\n  '!',\n  '_',\n  '>'\n]\n\nvar gfm = defaults.concat(['~', '|'])\n\nvar commonmark = gfm.concat([\n  '\\n',\n  '\"',\n  '$',\n  '%',\n  '&',\n  \"'\",\n  ',',\n  '/',\n  ':',\n  ';',\n  '<',\n  '=',\n  '?',\n  '@',\n  '^'\n])\n\nescapes.default = defaults\nescapes.gfm = gfm\nescapes.commonmark = commonmark\n\n// Get markdown escapes.\nfunction escapes(options) {\n  var settings = options || {}\n\n  if (settings.commonmark) {\n    return commonmark\n  }\n\n  return settings.gfm ? gfm : defaults\n}\n","'use strict'\n\nvar repeat = require('repeat-string')\n\nmodule.exports = markdownTable\n\nvar trailingWhitespace = / +$/\n\n// Characters.\nvar space = ' '\nvar lineFeed = '\\n'\nvar dash = '-'\nvar colon = ':'\nvar verticalBar = '|'\n\nvar x = 0\nvar C = 67\nvar L = 76\nvar R = 82\nvar c = 99\nvar l = 108\nvar r = 114\n\n// Create a table from a matrix of strings.\nfunction markdownTable(table, options) {\n  var settings = options || {}\n  var padding = settings.padding !== false\n  var start = settings.delimiterStart !== false\n  var end = settings.delimiterEnd !== false\n  var align = (settings.align || []).concat()\n  var alignDelimiters = settings.alignDelimiters !== false\n  var alignments = []\n  var stringLength = settings.stringLength || defaultStringLength\n  var rowIndex = -1\n  var rowLength = table.length\n  var cellMatrix = []\n  var sizeMatrix = []\n  var row = []\n  var sizes = []\n  var longestCellByColumn = []\n  var mostCellsPerRow = 0\n  var cells\n  var columnIndex\n  var columnLength\n  var largest\n  var size\n  var cell\n  var lines\n  var line\n  var before\n  var after\n  var code\n\n  // This is a superfluous loop if we don’t align delimiters, but otherwise we’d\n  // do superfluous work when aligning, so optimize for aligning.\n  while (++rowIndex < rowLength) {\n    cells = table[rowIndex]\n    columnIndex = -1\n    columnLength = cells.length\n    row = []\n    sizes = []\n\n    if (columnLength > mostCellsPerRow) {\n      mostCellsPerRow = columnLength\n    }\n\n    while (++columnIndex < columnLength) {\n      cell = serialize(cells[columnIndex])\n\n      if (alignDelimiters === true) {\n        size = stringLength(cell)\n        sizes[columnIndex] = size\n\n        largest = longestCellByColumn[columnIndex]\n\n        if (largest === undefined || size > largest) {\n          longestCellByColumn[columnIndex] = size\n        }\n      }\n\n      row.push(cell)\n    }\n\n    cellMatrix[rowIndex] = row\n    sizeMatrix[rowIndex] = sizes\n  }\n\n  // Figure out which alignments to use.\n  columnIndex = -1\n  columnLength = mostCellsPerRow\n\n  if (typeof align === 'object' && 'length' in align) {\n    while (++columnIndex < columnLength) {\n      alignments[columnIndex] = toAlignment(align[columnIndex])\n    }\n  } else {\n    code = toAlignment(align)\n\n    while (++columnIndex < columnLength) {\n      alignments[columnIndex] = code\n    }\n  }\n\n  // Inject the alignment row.\n  columnIndex = -1\n  columnLength = mostCellsPerRow\n  row = []\n  sizes = []\n\n  while (++columnIndex < columnLength) {\n    code = alignments[columnIndex]\n    before = ''\n    after = ''\n\n    if (code === l) {\n      before = colon\n    } else if (code === r) {\n      after = colon\n    } else if (code === c) {\n      before = colon\n      after = colon\n    }\n\n    // There *must* be at least one hyphen-minus in each alignment cell.\n    size = alignDelimiters\n      ? Math.max(\n          1,\n          longestCellByColumn[columnIndex] - before.length - after.length\n        )\n      : 1\n\n    cell = before + repeat(dash, size) + after\n\n    if (alignDelimiters === true) {\n      size = before.length + size + after.length\n\n      if (size > longestCellByColumn[columnIndex]) {\n        longestCellByColumn[columnIndex] = size\n      }\n\n      sizes[columnIndex] = size\n    }\n\n    row[columnIndex] = cell\n  }\n\n  // Inject the alignment row.\n  cellMatrix.splice(1, 0, row)\n  sizeMatrix.splice(1, 0, sizes)\n\n  rowIndex = -1\n  rowLength = cellMatrix.length\n  lines = []\n\n  while (++rowIndex < rowLength) {\n    row = cellMatrix[rowIndex]\n    sizes = sizeMatrix[rowIndex]\n    columnIndex = -1\n    columnLength = mostCellsPerRow\n    line = []\n\n    while (++columnIndex < columnLength) {\n      cell = row[columnIndex] || ''\n      before = ''\n      after = ''\n\n      if (alignDelimiters === true) {\n        size = longestCellByColumn[columnIndex] - (sizes[columnIndex] || 0)\n        code = alignments[columnIndex]\n\n        if (code === r) {\n          before = repeat(space, size)\n        } else if (code === c) {\n          if (size % 2 === 0) {\n            before = repeat(space, size / 2)\n            after = before\n          } else {\n            before = repeat(space, size / 2 + 0.5)\n            after = repeat(space, size / 2 - 0.5)\n          }\n        } else {\n          after = repeat(space, size)\n        }\n      }\n\n      if (start === true && columnIndex === 0) {\n        line.push(verticalBar)\n      }\n\n      if (\n        padding === true &&\n        // Don’t add the opening space if we’re not aligning and the cell is\n        // empty: there will be a closing space.\n        !(alignDelimiters === false && cell === '') &&\n        (start === true || columnIndex !== 0)\n      ) {\n        line.push(space)\n      }\n\n      if (alignDelimiters === true) {\n        line.push(before)\n      }\n\n      line.push(cell)\n\n      if (alignDelimiters === true) {\n        line.push(after)\n      }\n\n      if (padding === true) {\n        line.push(space)\n      }\n\n      if (end === true || columnIndex !== columnLength - 1) {\n        line.push(verticalBar)\n      }\n    }\n\n    line = line.join('')\n\n    if (end === false) {\n      line = line.replace(trailingWhitespace, '')\n    }\n\n    lines.push(line)\n  }\n\n  return lines.join(lineFeed)\n}\n\nfunction serialize(value) {\n  return value === null || value === undefined ? '' : String(value)\n}\n\nfunction defaultStringLength(value) {\n  return value.length\n}\n\nfunction toAlignment(value) {\n  var code = typeof value === 'string' ? value.charCodeAt(0) : x\n\n  return code === L || code === l\n    ? l\n    : code === R || code === r\n    ? r\n    : code === C || code === c\n    ? c\n    : x\n}\n","'use strict'\n\nvar visit = require('unist-util-visit')\n\nmodule.exports = compact\n\n// Make an mdast tree compact by merging adjacent text nodes.\nfunction compact(tree, commonmark) {\n  visit(tree, visitor)\n\n  return tree\n\n  function visitor(child, index, parent) {\n    var siblings = parent ? parent.children : []\n    var prev = index && siblings[index - 1]\n\n    if (\n      prev &&\n      child.type === prev.type &&\n      mergeable(prev, commonmark) &&\n      mergeable(child, commonmark)\n    ) {\n      if (child.value) {\n        prev.value += child.value\n      }\n\n      if (child.children) {\n        prev.children = prev.children.concat(child.children)\n      }\n\n      siblings.splice(index, 1)\n\n      if (prev.position && child.position) {\n        prev.position.end = child.position.end\n      }\n\n      return index\n    }\n  }\n}\n\nfunction mergeable(node, commonmark) {\n  var start\n  var end\n\n  if (node.type === 'text') {\n    if (!node.position) {\n      return true\n    }\n\n    start = node.position.start\n    end = node.position.end\n\n    // Only merge nodes which occupy the same size as their `value`.\n    return (\n      start.line !== end.line || end.column - start.column === node.value.length\n    )\n  }\n\n  return commonmark && node.type === 'blockquote'\n}\n","'use strict'\n\nmodule.exports = convert\n\nfunction convert(test) {\n  if (test == null) {\n    return ok\n  }\n\n  if (typeof test === 'string') {\n    return typeFactory(test)\n  }\n\n  if (typeof test === 'object') {\n    return 'length' in test ? anyFactory(test) : allFactory(test)\n  }\n\n  if (typeof test === 'function') {\n    return test\n  }\n\n  throw new Error('Expected function, string, or object as test')\n}\n\n// Utility assert each property in `test` is represented in `node`, and each\n// values are strictly equal.\nfunction allFactory(test) {\n  return all\n\n  function all(node) {\n    var key\n\n    for (key in test) {\n      if (node[key] !== test[key]) return false\n    }\n\n    return true\n  }\n}\n\nfunction anyFactory(tests) {\n  var checks = []\n  var index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return any\n\n  function any() {\n    var index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].apply(this, arguments)) {\n        return true\n      }\n    }\n\n    return false\n  }\n}\n\n// Utility to convert a string into a function which checks a given node’s type\n// for said string.\nfunction typeFactory(test) {\n  return type\n\n  function type(node) {\n    return Boolean(node && node.type === test)\n  }\n}\n\n// Utility to return true.\nfunction ok() {\n  return true\n}\n","module.exports = identity\nfunction identity(d) {\n  return d\n}\n","'use strict'\n\nmodule.exports = visitParents\n\nvar convert = require('unist-util-is/convert')\nvar color = require('./color')\n\nvar CONTINUE = true\nvar SKIP = 'skip'\nvar EXIT = false\n\nvisitParents.CONTINUE = CONTINUE\nvisitParents.SKIP = SKIP\nvisitParents.EXIT = EXIT\n\nfunction visitParents(tree, test, visitor, reverse) {\n  var step\n  var is\n\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    visitor = test\n    test = null\n  }\n\n  is = convert(test)\n  step = reverse ? -1 : 1\n\n  factory(tree, null, [])()\n\n  function factory(node, index, parents) {\n    var value = typeof node === 'object' && node !== null ? node : {}\n    var name\n\n    if (typeof value.type === 'string') {\n      name =\n        typeof value.tagName === 'string'\n          ? value.tagName\n          : typeof value.name === 'string'\n          ? value.name\n          : undefined\n\n      visit.displayName =\n        'node (' + color(value.type + (name ? '<' + name + '>' : '')) + ')'\n    }\n\n    return visit\n\n    function visit() {\n      var grandparents = parents.concat(node)\n      var result = []\n      var subresult\n      var offset\n\n      if (!test || is(node, index, parents[parents.length - 1] || null)) {\n        result = toResult(visitor(node, parents))\n\n        if (result[0] === EXIT) {\n          return result\n        }\n      }\n\n      if (node.children && result[0] !== SKIP) {\n        offset = (reverse ? node.children.length : -1) + step\n\n        while (offset > -1 && offset < node.children.length) {\n          subresult = factory(node.children[offset], offset, grandparents)()\n\n          if (subresult[0] === EXIT) {\n            return subresult\n          }\n\n          offset =\n            typeof subresult[1] === 'number' ? subresult[1] : offset + step\n        }\n      }\n\n      return result\n    }\n  }\n}\n\nfunction toResult(value) {\n  if (value !== null && typeof value === 'object' && 'length' in value) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n","'use strict'\n\nmodule.exports = visit\n\nvar visitParents = require('unist-util-visit-parents')\n\nvar CONTINUE = visitParents.CONTINUE\nvar SKIP = visitParents.SKIP\nvar EXIT = visitParents.EXIT\n\nvisit.CONTINUE = CONTINUE\nvisit.SKIP = SKIP\nvisit.EXIT = EXIT\n\nfunction visit(tree, test, visitor, reverse) {\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    visitor = test\n    test = null\n  }\n\n  visitParents(tree, test, overload, reverse)\n\n  function overload(node, parents) {\n    var parent = parents[parents.length - 1]\n    var index = parent ? parent.children.indexOf(node) : null\n    return visitor(node, index, parent)\n  }\n}\n","'use strict'\n\n/* eslint-env browser */\n\nvar el\n\nvar semicolon = 59 //  ';'\n\nmodule.exports = decodeEntity\n\nfunction decodeEntity(characters) {\n  var entity = '&' + characters + ';'\n  var char\n\n  el = el || document.createElement('i')\n  el.innerHTML = entity\n  char = el.textContent\n\n  // Some entities do not require the closing semicolon (`&not` - for instance),\n  // which leads to situations where parsing the assumed entity of &notit; will\n  // result in the string `¬it;`.  When we encounter a trailing semicolon after\n  // parsing and the entity to decode was not a semicolon (`&semi;`), we can\n  // assume that the matching was incomplete\n  if (char.charCodeAt(char.length - 1) === semicolon && characters !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the entity was not valid\n  return char === entity ? false : char\n}\n","'use strict'\n\nvar legacy = require('character-entities-legacy')\nvar invalid = require('character-reference-invalid')\nvar decimal = require('is-decimal')\nvar hexadecimal = require('is-hexadecimal')\nvar alphanumerical = require('is-alphanumerical')\nvar decodeEntity = require('./decode-entity')\n\nmodule.exports = parseEntities\n\nvar own = {}.hasOwnProperty\nvar fromCharCode = String.fromCharCode\nvar noop = Function.prototype\n\n// Default settings.\nvar defaults = {\n  warning: null,\n  reference: null,\n  text: null,\n  warningContext: null,\n  referenceContext: null,\n  textContext: null,\n  position: {},\n  additional: null,\n  attribute: false,\n  nonTerminated: true\n}\n\n// Characters.\nvar tab = 9 // '\\t'\nvar lineFeed = 10 // '\\n'\nvar formFeed = 12 // '\\f'\nvar space = 32 // ' '\nvar ampersand = 38 // '&'\nvar semicolon = 59 // ';'\nvar lessThan = 60 // '<'\nvar equalsTo = 61 // '='\nvar numberSign = 35 // '#'\nvar uppercaseX = 88 // 'X'\nvar lowercaseX = 120 // 'x'\nvar replacementCharacter = 65533 // '�'\n\n// Reference types.\nvar name = 'named'\nvar hexa = 'hexadecimal'\nvar deci = 'decimal'\n\n// Map of bases.\nvar bases = {}\n\nbases[hexa] = 16\nbases[deci] = 10\n\n// Map of types to tests.\n// Each type of character reference accepts different characters.\n// This test is used to detect whether a reference has ended (as the semicolon\n// is not strictly needed).\nvar tests = {}\n\ntests[name] = alphanumerical\ntests[deci] = decimal\ntests[hexa] = hexadecimal\n\n// Warning types.\nvar namedNotTerminated = 1\nvar numericNotTerminated = 2\nvar namedEmpty = 3\nvar numericEmpty = 4\nvar namedUnknown = 5\nvar numericDisallowed = 6\nvar numericProhibited = 7\n\n// Warning messages.\nvar messages = {}\n\nmessages[namedNotTerminated] =\n  'Named character references must be terminated by a semicolon'\nmessages[numericNotTerminated] =\n  'Numeric character references must be terminated by a semicolon'\nmessages[namedEmpty] = 'Named character references cannot be empty'\nmessages[numericEmpty] = 'Numeric character references cannot be empty'\nmessages[namedUnknown] = 'Named character references must be known'\nmessages[numericDisallowed] =\n  'Numeric character references cannot be disallowed'\nmessages[numericProhibited] =\n  'Numeric character references cannot be outside the permissible Unicode range'\n\n// Wrap to ensure clean parameters are given to `parse`.\nfunction parseEntities(value, options) {\n  var settings = {}\n  var option\n  var key\n\n  if (!options) {\n    options = {}\n  }\n\n  for (key in defaults) {\n    option = options[key]\n    settings[key] =\n      option === null || option === undefined ? defaults[key] : option\n  }\n\n  if (settings.position.indent || settings.position.start) {\n    settings.indent = settings.position.indent || []\n    settings.position = settings.position.start\n  }\n\n  return parse(value, settings)\n}\n\n// Parse entities.\n// eslint-disable-next-line complexity\nfunction parse(value, settings) {\n  var additional = settings.additional\n  var nonTerminated = settings.nonTerminated\n  var handleText = settings.text\n  var handleReference = settings.reference\n  var handleWarning = settings.warning\n  var textContext = settings.textContext\n  var referenceContext = settings.referenceContext\n  var warningContext = settings.warningContext\n  var pos = settings.position\n  var indent = settings.indent || []\n  var length = value.length\n  var index = 0\n  var lines = -1\n  var column = pos.column || 1\n  var line = pos.line || 1\n  var queue = ''\n  var result = []\n  var entityCharacters\n  var namedEntity\n  var terminated\n  var characters\n  var character\n  var reference\n  var following\n  var warning\n  var reason\n  var output\n  var entity\n  var begin\n  var start\n  var type\n  var test\n  var prev\n  var next\n  var diff\n  var end\n\n  if (typeof additional === 'string') {\n    additional = additional.charCodeAt(0)\n  }\n\n  // Cache the current point.\n  prev = now()\n\n  // Wrap `handleWarning`.\n  warning = handleWarning ? parseError : noop\n\n  // Ensure the algorithm walks over the first character and the end\n  // (inclusive).\n  index--\n  length++\n\n  while (++index < length) {\n    // If the previous character was a newline.\n    if (character === lineFeed) {\n      column = indent[lines] || 1\n    }\n\n    character = value.charCodeAt(index)\n\n    if (character === ampersand) {\n      following = value.charCodeAt(index + 1)\n\n      // The behaviour depends on the identity of the next character.\n      if (\n        following === tab ||\n        following === lineFeed ||\n        following === formFeed ||\n        following === space ||\n        following === ampersand ||\n        following === lessThan ||\n        following !== following ||\n        (additional && following === additional)\n      ) {\n        // Not a character reference.\n        // No characters are consumed, and nothing is returned.\n        // This is not an error, either.\n        queue += fromCharCode(character)\n        column++\n\n        continue\n      }\n\n      start = index + 1\n      begin = start\n      end = start\n\n      if (following === numberSign) {\n        // Numerical entity.\n        end = ++begin\n\n        // The behaviour further depends on the next character.\n        following = value.charCodeAt(end)\n\n        if (following === uppercaseX || following === lowercaseX) {\n          // ASCII hex digits.\n          type = hexa\n          end = ++begin\n        } else {\n          // ASCII digits.\n          type = deci\n        }\n      } else {\n        // Named entity.\n        type = name\n      }\n\n      entityCharacters = ''\n      entity = ''\n      characters = ''\n      test = tests[type]\n      end--\n\n      while (++end < length) {\n        following = value.charCodeAt(end)\n\n        if (!test(following)) {\n          break\n        }\n\n        characters += fromCharCode(following)\n\n        // Check if we can match a legacy named reference.\n        // If so, we cache that as the last viable named reference.\n        // This ensures we do not need to walk backwards later.\n        if (type === name && own.call(legacy, characters)) {\n          entityCharacters = characters\n          entity = legacy[characters]\n        }\n      }\n\n      terminated = value.charCodeAt(end) === semicolon\n\n      if (terminated) {\n        end++\n\n        namedEntity = type === name ? decodeEntity(characters) : false\n\n        if (namedEntity) {\n          entityCharacters = characters\n          entity = namedEntity\n        }\n      }\n\n      diff = 1 + end - start\n\n      if (!terminated && !nonTerminated) {\n        // Empty.\n      } else if (!characters) {\n        // An empty (possible) entity is valid, unless it’s numeric (thus an\n        // ampersand followed by an octothorp).\n        if (type !== name) {\n          warning(numericEmpty, diff)\n        }\n      } else if (type === name) {\n        // An ampersand followed by anything unknown, and not terminated, is\n        // invalid.\n        if (terminated && !entity) {\n          warning(namedUnknown, 1)\n        } else {\n          // If theres something after an entity name which is not known, cap\n          // the reference.\n          if (entityCharacters !== characters) {\n            end = begin + entityCharacters.length\n            diff = 1 + end - begin\n            terminated = false\n          }\n\n          // If the reference is not terminated, warn.\n          if (!terminated) {\n            reason = entityCharacters ? namedNotTerminated : namedEmpty\n\n            if (settings.attribute) {\n              following = value.charCodeAt(end)\n\n              if (following === equalsTo) {\n                warning(reason, diff)\n                entity = null\n              } else if (alphanumerical(following)) {\n                entity = null\n              } else {\n                warning(reason, diff)\n              }\n            } else {\n              warning(reason, diff)\n            }\n          }\n        }\n\n        reference = entity\n      } else {\n        if (!terminated) {\n          // All non-terminated numeric entities are not rendered, and trigger a\n          // warning.\n          warning(numericNotTerminated, diff)\n        }\n\n        // When terminated and number, parse as either hexadecimal or decimal.\n        reference = parseInt(characters, bases[type])\n\n        // Trigger a warning when the parsed number is prohibited, and replace\n        // with replacement character.\n        if (prohibited(reference)) {\n          warning(numericProhibited, diff)\n          reference = fromCharCode(replacementCharacter)\n        } else if (reference in invalid) {\n          // Trigger a warning when the parsed number is disallowed, and replace\n          // by an alternative.\n          warning(numericDisallowed, diff)\n          reference = invalid[reference]\n        } else {\n          // Parse the number.\n          output = ''\n\n          // Trigger a warning when the parsed number should not be used.\n          if (disallowed(reference)) {\n            warning(numericDisallowed, diff)\n          }\n\n          // Stringify the number.\n          if (reference > 0xffff) {\n            reference -= 0x10000\n            output += fromCharCode((reference >>> (10 & 0x3ff)) | 0xd800)\n            reference = 0xdc00 | (reference & 0x3ff)\n          }\n\n          reference = output + fromCharCode(reference)\n        }\n      }\n\n      // Found it!\n      // First eat the queued characters as normal text, then eat an entity.\n      if (reference) {\n        flush()\n\n        prev = now()\n        index = end - 1\n        column += end - start + 1\n        result.push(reference)\n        next = now()\n        next.offset++\n\n        if (handleReference) {\n          handleReference.call(\n            referenceContext,\n            reference,\n            {start: prev, end: next},\n            value.slice(start - 1, end)\n          )\n        }\n\n        prev = next\n      } else {\n        // If we could not find a reference, queue the checked characters (as\n        // normal characters), and move the pointer to their end.\n        // This is possible because we can be certain neither newlines nor\n        // ampersands are included.\n        characters = value.slice(start - 1, end)\n        queue += characters\n        column += characters.length\n        index = end - 1\n      }\n    } else {\n      // Handle anything other than an ampersand, including newlines and EOF.\n      if (\n        character === 10 // Line feed\n      ) {\n        line++\n        lines++\n        column = 0\n      }\n\n      if (character === character) {\n        queue += fromCharCode(character)\n        column++\n      } else {\n        flush()\n      }\n    }\n  }\n\n  // Return the reduced nodes.\n  return result.join('')\n\n  // Get current position.\n  function now() {\n    return {\n      line: line,\n      column: column,\n      offset: index + (pos.offset || 0)\n    }\n  }\n\n  // “Throw” a parse-error: a warning.\n  function parseError(code, offset) {\n    var position = now()\n\n    position.column += offset\n    position.offset += offset\n\n    handleWarning.call(warningContext, messages[code], position, code)\n  }\n\n  // Flush `queue` (normal text).\n  // Macro invoked before each entity and at the end of `value`.\n  // Does nothing when `queue` is empty.\n  function flush() {\n    if (queue) {\n      result.push(queue)\n\n      if (handleText) {\n        handleText.call(textContext, queue, {start: prev, end: now()})\n      }\n\n      queue = ''\n    }\n  }\n}\n\n// Check if `character` is outside the permissible unicode range.\nfunction prohibited(code) {\n  return (code >= 0xd800 && code <= 0xdfff) || code > 0x10ffff\n}\n\n// Check if `character` is disallowed.\nfunction disallowed(code) {\n  return (\n    (code >= 0x0001 && code <= 0x0008) ||\n    code === 0x000b ||\n    (code >= 0x000d && code <= 0x001f) ||\n    (code >= 0x007f && code <= 0x009f) ||\n    (code >= 0xfdd0 && code <= 0xfdef) ||\n    (code & 0xffff) === 0xffff ||\n    (code & 0xffff) === 0xfffe\n  )\n}\n","'use strict'\n\nvar unherit = require('unherit')\nvar xtend = require('xtend')\nvar Compiler = require('./lib/compiler.js')\n\nmodule.exports = stringify\nstringify.Compiler = Compiler\n\nfunction stringify(options) {\n  var Local = unherit(Compiler)\n  Local.prototype.options = xtend(\n    Local.prototype.options,\n    this.data('settings'),\n    options\n  )\n  this.Compiler = Local\n}\n","'use strict'\n\nvar xtend = require('xtend')\nvar toggle = require('state-toggle')\n\nmodule.exports = Compiler\n\n// Construct a new compiler.\nfunction Compiler(tree, file) {\n  this.inLink = false\n  this.inTable = false\n  this.tree = tree\n  this.file = file\n  this.options = xtend(this.options)\n  this.setOptions({})\n}\n\nvar proto = Compiler.prototype\n\n// Enter and exit helpers. */\nproto.enterLink = toggle('inLink', false)\nproto.enterTable = toggle('inTable', false)\nproto.enterLinkReference = require('./util/enter-link-reference')\n\n// Configuration.\nproto.options = require('./defaults')\nproto.setOptions = require('./set-options')\n\nproto.compile = require('./macro/compile')\nproto.visit = require('./macro/one')\nproto.all = require('./macro/all')\nproto.block = require('./macro/block')\nproto.visitOrderedItems = require('./macro/ordered-items')\nproto.visitUnorderedItems = require('./macro/unordered-items')\n\n// Expose visitors.\nproto.visitors = {\n  root: require('./visitors/root'),\n  text: require('./visitors/text'),\n  heading: require('./visitors/heading'),\n  paragraph: require('./visitors/paragraph'),\n  blockquote: require('./visitors/blockquote'),\n  list: require('./visitors/list'),\n  listItem: require('./visitors/list-item'),\n  inlineCode: require('./visitors/inline-code'),\n  code: require('./visitors/code'),\n  html: require('./visitors/html'),\n  thematicBreak: require('./visitors/thematic-break'),\n  strong: require('./visitors/strong'),\n  emphasis: require('./visitors/emphasis'),\n  break: require('./visitors/break'),\n  delete: require('./visitors/delete'),\n  link: require('./visitors/link'),\n  linkReference: require('./visitors/link-reference'),\n  imageReference: require('./visitors/image-reference'),\n  definition: require('./visitors/definition'),\n  image: require('./visitors/image'),\n  table: require('./visitors/table'),\n  tableCell: require('./visitors/table-cell')\n}\n","'use strict'\n\nmodule.exports = {\n  gfm: true,\n  commonmark: false,\n  pedantic: false,\n  entities: 'false',\n  setext: false,\n  closeAtx: false,\n  tableCellPadding: true,\n  tablePipeAlign: true,\n  stringLength: stringLength,\n  incrementListMarker: true,\n  tightDefinitions: false,\n  fences: false,\n  fence: '`',\n  bullet: '-',\n  listItemIndent: 'tab',\n  rule: '*',\n  ruleSpaces: true,\n  ruleRepetition: 3,\n  strong: '*',\n  emphasis: '_'\n}\n\nfunction stringLength(value) {\n  return value.length\n}\n","'use strict'\n\nvar decimal = require('is-decimal')\nvar alphanumeric = require('is-alphanumeric')\nvar whitespace = require('is-whitespace-character')\nvar escapes = require('markdown-escapes')\nvar prefix = require('./util/entity-prefix-length')\n\nmodule.exports = factory\n\nvar tab = '\\t'\nvar lineFeed = '\\n'\nvar space = ' '\nvar numberSign = '#'\nvar ampersand = '&'\nvar leftParenthesis = '('\nvar rightParenthesis = ')'\nvar asterisk = '*'\nvar plusSign = '+'\nvar dash = '-'\nvar dot = '.'\nvar colon = ':'\nvar lessThan = '<'\nvar greaterThan = '>'\nvar leftSquareBracket = '['\nvar backslash = '\\\\'\nvar rightSquareBracket = ']'\nvar underscore = '_'\nvar graveAccent = '`'\nvar verticalBar = '|'\nvar tilde = '~'\nvar exclamationMark = '!'\n\nvar entities = {\n  '<': '&lt;',\n  ':': '&#x3A;',\n  '&': '&amp;',\n  '|': '&#x7C;',\n  '~': '&#x7E;'\n}\n\nvar shortcut = 'shortcut'\nvar mailto = 'mailto'\nvar https = 'https'\nvar http = 'http'\n\nvar blankExpression = /\\n\\s*$/\n\n// Factory to escape characters.\nfunction factory(options) {\n  return escape\n\n  // Escape punctuation characters in a node’s value.\n  function escape(value, node, parent) {\n    var self = this\n    var gfm = options.gfm\n    var commonmark = options.commonmark\n    var pedantic = options.pedantic\n    var markers = commonmark ? [dot, rightParenthesis] : [dot]\n    var siblings = parent && parent.children\n    var index = siblings && siblings.indexOf(node)\n    var previous = siblings && siblings[index - 1]\n    var next = siblings && siblings[index + 1]\n    var length = value.length\n    var escapable = escapes(options)\n    var position = -1\n    var queue = []\n    var escaped = queue\n    var afterNewLine\n    var character\n    var wordCharBefore\n    var wordCharAfter\n    var offset\n    var replace\n\n    if (previous) {\n      afterNewLine = text(previous) && blankExpression.test(previous.value)\n    } else {\n      afterNewLine =\n        !parent || parent.type === 'root' || parent.type === 'paragraph'\n    }\n\n    while (++position < length) {\n      character = value.charAt(position)\n      replace = false\n\n      if (character === '\\n') {\n        afterNewLine = true\n      } else if (\n        character === backslash ||\n        character === graveAccent ||\n        character === asterisk ||\n        character === leftSquareBracket ||\n        character === lessThan ||\n        (character === ampersand && prefix(value.slice(position)) > 0) ||\n        (character === rightSquareBracket && self.inLink) ||\n        (gfm && character === tilde && value.charAt(position + 1) === tilde) ||\n        (gfm &&\n          character === verticalBar &&\n          (self.inTable || alignment(value, position))) ||\n        (character === underscore &&\n          // Delegate leading/trailing underscores to the multinode version below.\n          position > 0 &&\n          position < length - 1 &&\n          (pedantic ||\n            !alphanumeric(value.charAt(position - 1)) ||\n            !alphanumeric(value.charAt(position + 1)))) ||\n        (gfm && !self.inLink && character === colon && protocol(queue.join('')))\n      ) {\n        replace = true\n      } else if (afterNewLine) {\n        if (\n          character === greaterThan ||\n          character === numberSign ||\n          character === asterisk ||\n          character === dash ||\n          character === plusSign\n        ) {\n          replace = true\n        } else if (decimal(character)) {\n          offset = position + 1\n\n          while (offset < length) {\n            if (!decimal(value.charAt(offset))) {\n              break\n            }\n\n            offset++\n          }\n\n          if (markers.indexOf(value.charAt(offset)) !== -1) {\n            next = value.charAt(offset + 1)\n\n            if (!next || next === space || next === tab || next === lineFeed) {\n              queue.push(value.slice(position, offset))\n              position = offset\n              character = value.charAt(position)\n              replace = true\n            }\n          }\n        }\n      }\n\n      if (afterNewLine && !whitespace(character)) {\n        afterNewLine = false\n      }\n\n      queue.push(replace ? one(character) : character)\n    }\n\n    // Multi-node versions.\n    if (siblings && text(node)) {\n      // Check for an opening parentheses after a link-reference (which can be\n      // joined by white-space).\n      if (previous && previous.referenceType === shortcut) {\n        position = -1\n        length = escaped.length\n\n        while (++position < length) {\n          character = escaped[position]\n\n          if (character === space || character === tab) {\n            continue\n          }\n\n          if (character === leftParenthesis || character === colon) {\n            escaped[position] = one(character)\n          }\n\n          break\n        }\n\n        // If the current node is all spaces / tabs, preceded by a shortcut,\n        // and followed by a text starting with `(`, escape it.\n        if (\n          text(next) &&\n          position === length &&\n          next.value.charAt(0) === leftParenthesis\n        ) {\n          escaped.push(backslash)\n        }\n      }\n\n      // Ensure non-auto-links are not seen as links.  This pattern needs to\n      // check the preceding nodes too.\n      if (\n        gfm &&\n        !self.inLink &&\n        text(previous) &&\n        value.charAt(0) === colon &&\n        protocol(previous.value.slice(-6))\n      ) {\n        escaped[0] = one(colon)\n      }\n\n      // Escape ampersand if it would otherwise start an entity.\n      if (\n        text(next) &&\n        value.charAt(length - 1) === ampersand &&\n        prefix(ampersand + next.value) !== 0\n      ) {\n        escaped[escaped.length - 1] = one(ampersand)\n      }\n\n      // Escape exclamation marks immediately followed by links.\n      if (\n        next &&\n        next.type === 'link' &&\n        value.charAt(length - 1) === exclamationMark\n      ) {\n        escaped[escaped.length - 1] = one(exclamationMark)\n      }\n\n      // Escape double tildes in GFM.\n      if (\n        gfm &&\n        text(next) &&\n        value.charAt(length - 1) === tilde &&\n        next.value.charAt(0) === tilde\n      ) {\n        escaped.splice(-1, 0, backslash)\n      }\n\n      // Escape underscores, but not mid-word (unless in pedantic mode).\n      wordCharBefore = text(previous) && alphanumeric(previous.value.slice(-1))\n      wordCharAfter = text(next) && alphanumeric(next.value.charAt(0))\n\n      if (length === 1) {\n        if (\n          value === underscore &&\n          (pedantic || !wordCharBefore || !wordCharAfter)\n        ) {\n          escaped.unshift(backslash)\n        }\n      } else {\n        if (\n          value.charAt(0) === underscore &&\n          (pedantic || !wordCharBefore || !alphanumeric(value.charAt(1)))\n        ) {\n          escaped.unshift(backslash)\n        }\n\n        if (\n          value.charAt(length - 1) === underscore &&\n          (pedantic ||\n            !wordCharAfter ||\n            !alphanumeric(value.charAt(length - 2)))\n        ) {\n          escaped.splice(-1, 0, backslash)\n        }\n      }\n    }\n\n    return escaped.join('')\n\n    function one(character) {\n      return escapable.indexOf(character) === -1\n        ? entities[character]\n        : backslash + character\n    }\n  }\n}\n\n// Check if `index` in `value` is inside an alignment row.\nfunction alignment(value, index) {\n  var start = value.lastIndexOf(lineFeed, index)\n  var end = value.indexOf(lineFeed, index)\n  var char\n\n  end = end === -1 ? value.length : end\n\n  while (++start < end) {\n    char = value.charAt(start)\n\n    if (\n      char !== colon &&\n      char !== dash &&\n      char !== space &&\n      char !== verticalBar\n    ) {\n      return false\n    }\n  }\n\n  return true\n}\n\n// Check if `node` is a text node.\nfunction text(node) {\n  return node && node.type === 'text'\n}\n\n// Check if `value` ends in a protocol.\nfunction protocol(value) {\n  var tail = value.slice(-6).toLowerCase()\n  return tail === mailto || tail.slice(-5) === https || tail.slice(-4) === http\n}\n","'use strict'\n\nmodule.exports = all\n\n// Visit all children of `parent`.\nfunction all(parent) {\n  var self = this\n  var children = parent.children\n  var length = children.length\n  var results = []\n  var index = -1\n\n  while (++index < length) {\n    results[index] = self.visit(children[index], parent)\n  }\n\n  return results\n}\n","'use strict'\n\nmodule.exports = block\n\nvar lineFeed = '\\n'\n\nvar blank = lineFeed + lineFeed\nvar triple = blank + lineFeed\nvar comment = blank + '<!---->' + blank\n\n// Stringify a block node with block children (e.g., `root` or `blockquote`).\n// Knows about code following a list, or adjacent lists with similar bullets,\n// and places an extra line feed between them.\nfunction block(node) {\n  var self = this\n  var options = self.options\n  var fences = options.fences\n  var gap = options.commonmark ? comment : triple\n  var definitionGap = options.tightDefinitions ? lineFeed : blank\n  var values = []\n  var children = node.children\n  var length = children.length\n  var index = -1\n  var previous\n  var child\n\n  while (++index < length) {\n    previous = child\n    child = children[index]\n\n    if (previous) {\n      // A list preceding another list that are equally ordered, or a\n      // list preceding an indented code block, need a gap between them,\n      // so as not to see them as one list, or content of the list,\n      // respectively.\n      //\n      // In commonmark, only something that breaks both up can do that,\n      // so we opt for an empty, invisible comment.  In other flavours,\n      // two blank lines are fine.\n      if (\n        previous.type === 'list' &&\n        ((child.type === 'list' && previous.ordered === child.ordered) ||\n          (child.type === 'code' && !child.lang && !fences))\n      ) {\n        values.push(gap)\n      } else if (\n        previous.type === 'definition' &&\n        child.type === 'definition'\n      ) {\n        values.push(definitionGap)\n      } else {\n        values.push(blank)\n      }\n    }\n\n    values.push(self.visit(child, node))\n  }\n\n  return values.join('')\n}\n","'use strict'\n\nvar compact = require('mdast-util-compact')\n\nmodule.exports = compile\n\n// Stringify the given tree.\nfunction compile() {\n  return this.visit(compact(this.tree, this.options.commonmark))\n}\n","'use strict'\n\nmodule.exports = one\n\nfunction one(node, parent) {\n  var self = this\n  var visitors = self.visitors\n\n  // Fail on unknown nodes.\n  if (typeof visitors[node.type] !== 'function') {\n    self.file.fail(\n      new Error(\n        'Missing compiler for node of type `' + node.type + '`: `' + node + '`'\n      ),\n      node\n    )\n  }\n\n  return visitors[node.type].call(self, node, parent)\n}\n","'use strict'\n\nmodule.exports = orderedItems\n\nvar lineFeed = '\\n'\nvar dot = '.'\n\nvar blank = lineFeed + lineFeed\n\n// Visit ordered list items.\n//\n// Starts the list with\n// `node.start` and increments each following list item\n// bullet by one:\n//\n//     2. foo\n//     3. bar\n//\n// In `incrementListMarker: false` mode, does not increment\n// each marker and stays on `node.start`:\n//\n//     1. foo\n//     1. bar\nfunction orderedItems(node) {\n  var self = this\n  var fn = self.visitors.listItem\n  var increment = self.options.incrementListMarker\n  var values = []\n  var start = node.start\n  var children = node.children\n  var length = children.length\n  var index = -1\n  var bullet\n\n  start = start == null ? 1 : start\n\n  while (++index < length) {\n    bullet = (increment ? start + index : start) + dot\n    values[index] = fn.call(self, children[index], node, index, bullet)\n  }\n\n  return values.join(node.spread ? blank : lineFeed)\n}\n","'use strict'\n\nmodule.exports = unorderedItems\n\nvar lineFeed = '\\n'\n\nvar blank = lineFeed + lineFeed\n\n// Visit unordered list items.  Uses `options.bullet` as each item’s bullet.\nfunction unorderedItems(node) {\n  var self = this\n  var bullet = self.options.bullet\n  var fn = self.visitors.listItem\n  var children = node.children\n  var length = children.length\n  var index = -1\n  var values = []\n\n  while (++index < length) {\n    values[index] = fn.call(self, children[index], node, index, bullet)\n  }\n\n  return values.join(node.spread ? blank : lineFeed)\n}\n","'use strict'\n\nvar xtend = require('xtend')\nvar encode = require('stringify-entities')\nvar defaults = require('./defaults')\nvar escapeFactory = require('./escape')\nvar identity = require('./util/identity')\n\nmodule.exports = setOptions\n\n// Map of applicable enums.\nvar maps = {\n  entities: {true: true, false: true, numbers: true, escape: true},\n  bullet: {'*': true, '-': true, '+': true},\n  rule: {'-': true, _: true, '*': true},\n  listItemIndent: {tab: true, mixed: true, 1: true},\n  emphasis: {_: true, '*': true},\n  strong: {_: true, '*': true},\n  fence: {'`': true, '~': true}\n}\n\n// Expose `validate`.\nvar validate = {\n  boolean: validateBoolean,\n  string: validateString,\n  number: validateNumber,\n  function: validateFunction\n}\n\n// Set options.  Does not overwrite previously set options.\nfunction setOptions(options) {\n  var self = this\n  var current = self.options\n  var ruleRepetition\n  var key\n\n  if (options == null) {\n    options = {}\n  } else if (typeof options === 'object') {\n    options = xtend(options)\n  } else {\n    throw new Error('Invalid value `' + options + '` for setting `options`')\n  }\n\n  for (key in defaults) {\n    validate[typeof defaults[key]](options, key, current[key], maps[key])\n  }\n\n  ruleRepetition = options.ruleRepetition\n\n  if (ruleRepetition && ruleRepetition < 3) {\n    raise(ruleRepetition, 'options.ruleRepetition')\n  }\n\n  self.encode = encodeFactory(String(options.entities))\n  self.escape = escapeFactory(options)\n\n  self.options = options\n\n  return self\n}\n\n// Validate a value to be boolean. Defaults to `def`.  Raises an exception with\n// `context[name]` when not a boolean.\nfunction validateBoolean(context, name, def) {\n  var value = context[name]\n\n  if (value == null) {\n    value = def\n  }\n\n  if (typeof value !== 'boolean') {\n    raise(value, 'options.' + name)\n  }\n\n  context[name] = value\n}\n\n// Validate a value to be boolean. Defaults to `def`.  Raises an exception with\n// `context[name]` when not a boolean.\nfunction validateNumber(context, name, def) {\n  var value = context[name]\n\n  if (value == null) {\n    value = def\n  }\n\n  if (isNaN(value)) {\n    raise(value, 'options.' + name)\n  }\n\n  context[name] = value\n}\n\n// Validate a value to be in `map`. Defaults to `def`.  Raises an exception\n// with `context[name]` when not in `map`.\nfunction validateString(context, name, def, map) {\n  var value = context[name]\n\n  if (value == null) {\n    value = def\n  }\n\n  value = String(value)\n\n  if (!(value in map)) {\n    raise(value, 'options.' + name)\n  }\n\n  context[name] = value\n}\n\n// Validate a value to be function. Defaults to `def`.  Raises an exception\n// with `context[name]` when not a function.\nfunction validateFunction(context, name, def) {\n  var value = context[name]\n\n  if (value == null) {\n    value = def\n  }\n\n  if (typeof value !== 'function') {\n    raise(value, 'options.' + name)\n  }\n\n  context[name] = value\n}\n\n// Factory to encode HTML entities.  Creates a no-operation function when\n// `type` is `'false'`, a function which encodes using named references when\n// `type` is `'true'`, and a function which encodes using numbered references\n// when `type` is `'numbers'`.\nfunction encodeFactory(type) {\n  var options = {}\n\n  if (type === 'false') {\n    return identity\n  }\n\n  if (type === 'true') {\n    options.useNamedReferences = true\n  }\n\n  if (type === 'escape') {\n    options.escapeOnly = true\n    options.useNamedReferences = true\n  }\n\n  return wrapped\n\n  // Encode HTML entities using the bound options.\n  function wrapped(value) {\n    return encode(value, options)\n  }\n}\n\n// Throw an exception with in its `message` `value` and `name`.\nfunction raise(value, name) {\n  throw new Error('Invalid value `' + value + '` for setting `' + name + '`')\n}\n","'use strict'\n\nvar entityPrefixLength = require('./entity-prefix-length')\n\nmodule.exports = copy\n\nvar ampersand = '&'\n\nvar punctuationExppresion = /[-!\"#$%&'()*+,./:;<=>?@[\\\\\\]^`{|}~_]/\n\n// For shortcut and collapsed reference links, the contents is also an\n// identifier, so we need to restore the original encoding and escaping\n// that were present in the source string.\n//\n// This function takes the unescaped & unencoded value from shortcut’s\n// child nodes and the identifier and encodes the former according to\n// the latter.\nfunction copy(value, identifier) {\n  var length = value.length\n  var count = identifier.length\n  var result = []\n  var position = 0\n  var index = 0\n  var start\n\n  while (index < length) {\n    // Take next non-punctuation characters from `value`.\n    start = index\n\n    while (index < length && !punctuationExppresion.test(value.charAt(index))) {\n      index += 1\n    }\n\n    result.push(value.slice(start, index))\n\n    // Advance `position` to the next punctuation character.\n    while (\n      position < count &&\n      !punctuationExppresion.test(identifier.charAt(position))\n    ) {\n      position += 1\n    }\n\n    // Take next punctuation characters from `identifier`.\n    start = position\n\n    while (\n      position < count &&\n      punctuationExppresion.test(identifier.charAt(position))\n    ) {\n      if (identifier.charAt(position) === ampersand) {\n        position += entityPrefixLength(identifier.slice(position))\n      }\n\n      position += 1\n    }\n\n    result.push(identifier.slice(start, position))\n\n    // Advance `index` to the next non-punctuation character.\n    while (index < length && punctuationExppresion.test(value.charAt(index))) {\n      index += 1\n    }\n  }\n\n  return result.join('')\n}\n","'use strict'\n\nmodule.exports = enclose\n\nvar quotationMark = '\"'\nvar apostrophe = \"'\"\n\n// There is currently no way to support nested delimiters across Markdown.pl,\n// CommonMark, and GitHub (RedCarpet).  The following code supports Markdown.pl\n// and GitHub.\n// CommonMark is not supported when mixing double- and single quotes inside a\n// title.\nfunction enclose(title) {\n  var delimiter =\n    title.indexOf(quotationMark) === -1 ? quotationMark : apostrophe\n  return delimiter + title + delimiter\n}\n","'use strict'\n\nvar count = require('ccount')\n\nmodule.exports = enclose\n\nvar leftParenthesis = '('\nvar rightParenthesis = ')'\nvar lessThan = '<'\nvar greaterThan = '>'\n\nvar expression = /\\s/\n\n// Wrap `url` in angle brackets when needed, or when\n// forced.\n// In links, images, and definitions, the URL part needs\n// to be enclosed when it:\n//\n// - has a length of `0`\n// - contains white-space\n// - has more or less opening than closing parentheses\nfunction enclose(uri, always) {\n  if (\n    always ||\n    uri.length === 0 ||\n    expression.test(uri) ||\n    count(uri, leftParenthesis) !== count(uri, rightParenthesis)\n  ) {\n    return lessThan + uri + greaterThan\n  }\n\n  return uri\n}\n","'use strict'\n\nvar identity = require('./identity')\n\nmodule.exports = enter\n\n// Shortcut and collapsed link references need no escaping and encoding during\n// the processing of child nodes (it must be implied from identifier).\n//\n// This toggler turns encoding and escaping off for shortcut and collapsed\n// references.\n//\n// Implies `enterLink`.\nfunction enter(compiler, node) {\n  var encode = compiler.encode\n  var escape = compiler.escape\n  var exitLink = compiler.enterLink()\n\n  if (node.referenceType !== 'shortcut' && node.referenceType !== 'collapsed') {\n    return exitLink\n  }\n\n  compiler.escape = identity\n  compiler.encode = identity\n\n  return exit\n\n  function exit() {\n    compiler.encode = encode\n    compiler.escape = escape\n    exitLink()\n  }\n}\n","'use strict'\n\nvar decode = require('parse-entities')\n\nmodule.exports = length\n\nvar ampersand = '&'\n\n// Returns the length of HTML entity that is a prefix of the given string\n// (excluding the ampersand), 0 if it does not start with an entity.\nfunction length(value) {\n  var prefix\n\n  /* istanbul ignore if - Currently also tested for at implemention, but we\n   * keep it here because that’s proper. */\n  if (value.charAt(0) !== ampersand) {\n    return 0\n  }\n\n  prefix = value.split(ampersand, 2).join(ampersand)\n\n  return prefix.length - decode(prefix).length\n}\n","'use strict'\n\nmodule.exports = identity\n\nfunction identity(value) {\n  return value\n}\n","'use strict'\n\nmodule.exports = label\n\nvar leftSquareBracket = '['\nvar rightSquareBracket = ']'\n\nvar shortcut = 'shortcut'\nvar collapsed = 'collapsed'\n\n// Stringify a reference label.\n// Because link references are easily, mistakingly, created (for example,\n// `[foo]`), reference nodes have an extra property depicting how it looked in\n// the original document, so stringification can cause minimal changes.\nfunction label(node) {\n  var type = node.referenceType\n\n  if (type === shortcut) {\n    return ''\n  }\n\n  return (\n    leftSquareBracket +\n    (type === collapsed ? '' : node.label || node.identifier) +\n    rightSquareBracket\n  )\n}\n","'use strict'\n\nvar repeat = require('repeat-string')\n\nmodule.exports = pad\n\nvar lineFeed = '\\n'\nvar space = ' '\n\nvar tabSize = 4\n\n// Pad `value` with `level * tabSize` spaces.  Respects lines.  Ignores empty\n// lines.\nfunction pad(value, level) {\n  var values = value.split(lineFeed)\n  var index = values.length\n  var padding = repeat(space, level * tabSize)\n\n  while (index--) {\n    if (values[index].length !== 0) {\n      values[index] = padding + values[index]\n    }\n  }\n\n  return values.join(lineFeed)\n}\n","'use strict'\n\nmodule.exports = blockquote\n\nvar lineFeed = '\\n'\nvar space = ' '\nvar greaterThan = '>'\n\nfunction blockquote(node) {\n  var values = this.block(node).split(lineFeed)\n  var result = []\n  var length = values.length\n  var index = -1\n  var value\n\n  while (++index < length) {\n    value = values[index]\n    result[index] = (value ? space : '') + value\n  }\n\n  return greaterThan + result.join(lineFeed + greaterThan)\n}\n","'use strict'\n\nmodule.exports = lineBreak\n\nvar backslash = '\\\\'\nvar lineFeed = '\\n'\nvar space = ' '\n\nvar commonmark = backslash + lineFeed\nvar normal = space + space + lineFeed\n\nfunction lineBreak() {\n  return this.options.commonmark ? commonmark : normal\n}\n","'use strict'\n\nvar streak = require('longest-streak')\nvar repeat = require('repeat-string')\nvar pad = require('../util/pad')\n\nmodule.exports = code\n\nvar lineFeed = '\\n'\nvar space = ' '\nvar tilde = '~'\nvar graveAccent = '`'\n\n// Stringify code.\n// Creates indented code when:\n//\n// - No language tag exists\n// - Not in `fences: true` mode\n// - A non-empty value exists\n//\n// Otherwise, GFM fenced code is created:\n//\n// ````markdown\n// ```js\n// foo();\n// ```\n// ````\n//\n// When in ``fence: `~` `` mode, uses tildes as fences:\n//\n// ```markdown\n// ~~~js\n// foo();\n// ~~~\n// ```\n//\n// Knows about internal fences:\n//\n// `````markdown\n// ````markdown\n// ```javascript\n// foo();\n// ```\n// ````\n// `````\nfunction code(node, parent) {\n  var self = this\n  var value = node.value\n  var options = self.options\n  var marker = options.fence\n  var info = node.lang || ''\n  var fence\n\n  if (info && node.meta) {\n    info += space + node.meta\n  }\n\n  info = self.encode(self.escape(info, node))\n\n  // Without (needed) fences.\n  if (\n    !info &&\n    !options.fences &&\n    value &&\n    value.charAt(0) !== lineFeed &&\n    value.charAt(value.length - 1) !== lineFeed\n  ) {\n    // Throw when pedantic, in a list item which isn’t compiled using a tab.\n    if (\n      parent &&\n      parent.type === 'listItem' &&\n      options.listItemIndent !== 'tab' &&\n      options.pedantic\n    ) {\n      self.file.fail(\n        'Cannot indent code properly. See https://git.io/fxKR8',\n        node.position\n      )\n    }\n\n    return pad(value, 1)\n  }\n\n  // Backticks in the info string don’t work with backtick fenced code.\n  // Backticks (and tildes) are fine in tilde fenced code.\n  if (marker === graveAccent && info.indexOf(graveAccent) !== -1) {\n    marker = tilde\n  }\n\n  fence = repeat(marker, Math.max(streak(value, marker) + 1, 3))\n\n  return fence + info + lineFeed + value + lineFeed + fence\n}\n","'use strict'\n\nvar uri = require('../util/enclose-uri')\nvar title = require('../util/enclose-title')\n\nmodule.exports = definition\n\nvar space = ' '\nvar colon = ':'\nvar leftSquareBracket = '['\nvar rightSquareBracket = ']'\n\n// Stringify an URL definition.\n//\n// Is smart about enclosing `url` (see `encloseURI()`) and `title` (see\n// `encloseTitle()`).\n//\n// ```markdown\n// [foo]: <foo at bar dot com> 'An \"example\" e-mail'\n// ```\nfunction definition(node) {\n  var content = uri(node.url)\n\n  if (node.title) {\n    content += space + title(node.title)\n  }\n\n  return (\n    leftSquareBracket +\n    (node.label || node.identifier) +\n    rightSquareBracket +\n    colon +\n    space +\n    content\n  )\n}\n","'use strict'\n\nmodule.exports = strikethrough\n\nvar tilde = '~'\n\nvar fence = tilde + tilde\n\nfunction strikethrough(node) {\n  return fence + this.all(node).join('') + fence\n}\n","'use strict'\n\nmodule.exports = emphasis\n\nvar underscore = '_'\nvar asterisk = '*'\n\n// Stringify an `emphasis`.\n//\n// The marker used is configurable through `emphasis`, which defaults to an\n// underscore (`'_'`) but also accepts an asterisk (`'*'`):\n//\n// ```markdown\n// *foo*\n// ```\n//\n// In `pedantic` mode, text which itself contains an underscore will cause the\n// marker to default to an asterisk instead:\n//\n// ```markdown\n// *foo_bar*\n// ```\nfunction emphasis(node) {\n  var marker = this.options.emphasis\n  var content = this.all(node).join('')\n\n  // When in pedantic mode, prevent using underscore as the marker when there\n  // are underscores in the content.\n  if (\n    this.options.pedantic &&\n    marker === underscore &&\n    content.indexOf(marker) !== -1\n  ) {\n    marker = asterisk\n  }\n\n  return marker + content + marker\n}\n","'use strict'\n\nvar repeat = require('repeat-string')\n\nmodule.exports = heading\n\nvar lineFeed = '\\n'\nvar space = ' '\nvar numberSign = '#'\nvar dash = '-'\nvar equalsTo = '='\n\n// Stringify a heading.\n//\n// In `setext: true` mode and when `depth` is smaller than three, creates a\n// setext header:\n//\n// ```markdown\n// Foo\n// ===\n// ```\n//\n// Otherwise, an ATX header is generated:\n//\n// ```markdown\n// ### Foo\n// ```\n//\n// In `closeAtx: true` mode, the header is closed with hashes:\n//\n// ```markdown\n// ### Foo ###\n// ```\nfunction heading(node) {\n  var self = this\n  var depth = node.depth\n  var setext = self.options.setext\n  var closeAtx = self.options.closeAtx\n  var content = self.all(node).join('')\n  var prefix\n\n  if (setext && depth < 3) {\n    return (\n      content + lineFeed + repeat(depth === 1 ? equalsTo : dash, content.length)\n    )\n  }\n\n  prefix = repeat(numberSign, node.depth)\n\n  return prefix + space + content + (closeAtx ? space + prefix : '')\n}\n","'use strict'\n\nmodule.exports = html\n\nfunction html(node) {\n  return node.value\n}\n","'use strict'\n\nvar label = require('../util/label')\n\nmodule.exports = imageReference\n\nvar leftSquareBracket = '['\nvar rightSquareBracket = ']'\nvar exclamationMark = '!'\n\nfunction imageReference(node) {\n  return (\n    exclamationMark +\n    leftSquareBracket +\n    (this.encode(node.alt, node) || '') +\n    rightSquareBracket +\n    label(node)\n  )\n}\n","'use strict'\n\nvar uri = require('../util/enclose-uri')\nvar title = require('../util/enclose-title')\n\nmodule.exports = image\n\nvar space = ' '\nvar leftParenthesis = '('\nvar rightParenthesis = ')'\nvar leftSquareBracket = '['\nvar rightSquareBracket = ']'\nvar exclamationMark = '!'\n\n// Stringify an image.\n//\n// Is smart about enclosing `url` (see `encloseURI()`) and `title` (see\n// `encloseTitle()`).\n//\n// ```markdown\n// ![foo](</fav icon.png> 'My \"favourite\" icon')\n// ```\n//\n// Supports named entities in `url`, `alt`, and `title` when in\n// `settings.encode` mode.\nfunction image(node) {\n  var self = this\n  var content = uri(self.encode(node.url || '', node))\n  var exit = self.enterLink()\n  var alt = self.encode(self.escape(node.alt || '', node))\n\n  exit()\n\n  if (node.title) {\n    content += space + title(self.encode(node.title, node))\n  }\n\n  return (\n    exclamationMark +\n    leftSquareBracket +\n    alt +\n    rightSquareBracket +\n    leftParenthesis +\n    content +\n    rightParenthesis\n  )\n}\n","'use strict'\n\nvar streak = require('longest-streak')\nvar repeat = require('repeat-string')\n\nmodule.exports = inlineCode\n\nvar graveAccentChar = '`'\nvar lineFeed = 10 //  '\\n'\nvar space = 32 // ' '\nvar graveAccent = 96 //  '`'\n\n// Stringify inline code.\n//\n// Knows about internal ticks (`\\``), and ensures one more tick is used to\n// enclose the inline code:\n//\n// ````markdown\n// ```foo ``bar`` baz```\n// ````\n//\n// Even knows about inital and final ticks:\n//\n// ``markdown\n// `` `foo ``\n// `` foo` ``\n// ```\nfunction inlineCode(node) {\n  var value = node.value\n  var ticks = repeat(graveAccentChar, streak(value, graveAccentChar) + 1)\n  var start = ticks\n  var end = ticks\n  var head = value.charCodeAt(0)\n  var tail = value.charCodeAt(value.length - 1)\n  var wrap = false\n  var index\n  var length\n\n  if (head === graveAccent || tail === graveAccent) {\n    wrap = true\n  } else if (value.length > 2 && ws(head) && ws(tail)) {\n    index = 1\n    length = value.length - 1\n\n    while (++index < length) {\n      if (!ws(value.charCodeAt(index))) {\n        wrap = true\n        break\n      }\n    }\n  }\n\n  if (wrap) {\n    start += ' '\n    end = ' ' + end\n  }\n\n  return start + value + end\n}\n\nfunction ws(code) {\n  return code === lineFeed || code === space\n}\n","'use strict'\n\nvar copy = require('../util/copy-identifier-encoding')\nvar label = require('../util/label')\n\nmodule.exports = linkReference\n\nvar leftSquareBracket = '['\nvar rightSquareBracket = ']'\n\nvar shortcut = 'shortcut'\nvar collapsed = 'collapsed'\n\nfunction linkReference(node) {\n  var self = this\n  var type = node.referenceType\n  var exit = self.enterLinkReference(self, node)\n  var value = self.all(node).join('')\n\n  exit()\n\n  if (type === shortcut || type === collapsed) {\n    value = copy(value, node.label || node.identifier)\n  }\n\n  return leftSquareBracket + value + rightSquareBracket + label(node)\n}\n","'use strict'\n\nvar uri = require('../util/enclose-uri')\nvar title = require('../util/enclose-title')\n\nmodule.exports = link\n\nvar space = ' '\nvar leftSquareBracket = '['\nvar rightSquareBracket = ']'\nvar leftParenthesis = '('\nvar rightParenthesis = ')'\n\n// Expression for a protocol:\n// See <https://en.wikipedia.org/wiki/Uniform_Resource_Identifier#Generic_syntax>.\nvar protocol = /^[a-z][a-z+.-]+:\\/?/i\n\n// Stringify a link.\n//\n// When no title exists, the compiled `children` equal `url`, and `url` starts\n// with a protocol, an auto link is created:\n//\n// ```markdown\n// <http://example.com>\n// ```\n//\n// Otherwise, is smart about enclosing `url` (see `encloseURI()`) and `title`\n// (see `encloseTitle()`).\n// ```\n//\n// ```markdown\n// [foo](<foo at bar dot com> 'An \"example\" e-mail')\n// ```\n//\n// Supports named entities in the `url` and `title` when in `settings.encode`\n// mode.\nfunction link(node) {\n  var self = this\n  var content = self.encode(node.url || '', node)\n  var exit = self.enterLink()\n  var escaped = self.encode(self.escape(node.url || '', node))\n  var value = self.all(node).join('')\n\n  exit()\n\n  if (node.title == null && protocol.test(content) && escaped === value) {\n    // Backslash escapes do not work in autolinks, so we do not escape.\n    return uri(self.encode(node.url), true)\n  }\n\n  content = uri(content)\n\n  if (node.title) {\n    content += space + title(self.encode(self.escape(node.title, node), node))\n  }\n\n  return (\n    leftSquareBracket +\n    value +\n    rightSquareBracket +\n    leftParenthesis +\n    content +\n    rightParenthesis\n  )\n}\n","'use strict'\n\nvar repeat = require('repeat-string')\nvar pad = require('../util/pad')\n\nmodule.exports = listItem\n\nvar lineFeed = '\\n'\nvar space = ' '\nvar leftSquareBracket = '['\nvar rightSquareBracket = ']'\nvar lowercaseX = 'x'\n\nvar ceil = Math.ceil\nvar blank = lineFeed + lineFeed\n\nvar tabSize = 4\n\n// Stringify a list item.\n//\n// Prefixes the content with a checked checkbox when `checked: true`:\n//\n// ```markdown\n// [x] foo\n// ```\n//\n// Prefixes the content with an unchecked checkbox when `checked: false`:\n//\n// ```markdown\n// [ ] foo\n// ```\nfunction listItem(node, parent, position, bullet) {\n  var self = this\n  var style = self.options.listItemIndent\n  var marker = bullet || self.options.bullet\n  var spread = node.spread == null ? true : node.spread\n  var checked = node.checked\n  var children = node.children\n  var length = children.length\n  var values = []\n  var index = -1\n  var value\n  var indent\n  var spacing\n\n  while (++index < length) {\n    values[index] = self.visit(children[index], node)\n  }\n\n  value = values.join(spread ? blank : lineFeed)\n\n  if (typeof checked === 'boolean') {\n    // Note: I’d like to be able to only add the space between the check and\n    // the value, but unfortunately github does not support empty list-items\n    // with a checkbox :(\n    value =\n      leftSquareBracket +\n      (checked ? lowercaseX : space) +\n      rightSquareBracket +\n      space +\n      value\n  }\n\n  if (style === '1' || (style === 'mixed' && value.indexOf(lineFeed) === -1)) {\n    indent = marker.length + 1\n    spacing = space\n  } else {\n    indent = ceil((marker.length + 1) / tabSize) * tabSize\n    spacing = repeat(space, indent - marker.length)\n  }\n\n  return value\n    ? marker + spacing + pad(value, indent / tabSize).slice(indent)\n    : marker\n}\n","'use strict'\n\nmodule.exports = list\n\nfunction list(node) {\n  var fn = node.ordered ? this.visitOrderedItems : this.visitUnorderedItems\n  return fn.call(this, node)\n}\n","'use strict'\n\nmodule.exports = paragraph\n\nfunction paragraph(node) {\n  return this.all(node).join('')\n}\n","'use strict'\n\nmodule.exports = root\n\nvar lineFeed = '\\n'\n\n// Stringify a root.\n// Adds a final newline to ensure valid POSIX files. */\nfunction root(node) {\n  var doc = this.block(node)\n\n  if (doc.charAt(doc.length - 1) !== lineFeed) {\n    doc += lineFeed\n  }\n\n  return doc\n}\n","'use strict'\n\nvar repeat = require('repeat-string')\n\nmodule.exports = strong\n\n// Stringify a `strong`.\n//\n// The marker used is configurable by `strong`, which defaults to an asterisk\n// (`'*'`) but also accepts an underscore (`'_'`):\n//\n// ```markdown\n// __foo__\n// ```\nfunction strong(node) {\n  var marker = repeat(this.options.strong, 2)\n  return marker + this.all(node).join('') + marker\n}\n","'use strict'\n\nmodule.exports = tableCell\n\nvar lineFeed = /\\r?\\n/g\n\nfunction tableCell(node) {\n  return this.all(node).join('').replace(lineFeed, ' ')\n}\n","'use strict'\n\nvar markdownTable = require('markdown-table')\n\nmodule.exports = table\n\n// Stringify table.\n//\n// Creates a fenced table.\n// The table has aligned delimiters by default, but not in\n// `tablePipeAlign: false`:\n//\n// ```markdown\n// | Header 1 | Header 2 |\n// | :-: | - |\n// | Alpha | Bravo |\n// ```\n//\n// The table is spaced by default, but not in `tableCellPadding: false`:\n//\n// ```markdown\n// |Foo|Bar|\n// |:-:|---|\n// |Baz|Qux|\n// ```\nfunction table(node) {\n  var self = this\n  var options = self.options\n  var padding = options.tableCellPadding\n  var alignDelimiters = options.tablePipeAlign\n  var stringLength = options.stringLength\n  var rows = node.children\n  var index = rows.length\n  var exit = self.enterTable()\n  var result = []\n\n  while (index--) {\n    result[index] = self.all(rows[index])\n  }\n\n  exit()\n\n  return markdownTable(result, {\n    align: node.align,\n    alignDelimiters: alignDelimiters,\n    padding: padding,\n    stringLength: stringLength\n  })\n}\n","'use strict'\n\nmodule.exports = text\n\n// Stringify text.\n// Supports named entities in `settings.encode: true` mode:\n//\n// ```markdown\n// AT&amp;T\n// ```\n//\n// Supports numbered entities in `settings.encode: numbers` mode:\n//\n// ```markdown\n// AT&#x26;T\n// ```\nfunction text(node, parent) {\n  return this.encode(this.escape(node.value, node, parent), node)\n}\n","'use strict'\n\nvar repeat = require('repeat-string')\n\nmodule.exports = thematic\n\nvar space = ' '\n\n// Stringify a `thematic-break`.\n// The character used is configurable through `rule`: (`'_'`):\n//\n// ```markdown\n// ___\n// ```\n//\n// The number of repititions is defined through `ruleRepetition` (`6`):\n//\n// ```markdown\n// ******\n// ```\n//\n// Whether spaces delimit each character, is configured through `ruleSpaces`\n// (`true`):\n// ```markdown\n// * * *\n// ```\nfunction thematic() {\n  var options = this.options\n  var rule = repeat(options.rule, options.ruleRepetition)\n  return options.ruleSpaces ? rule.split('').join(space) : rule\n}\n","/*!\n * repeat-string <https://github.com/jonschlinkert/repeat-string>\n *\n * Copyright (c) 2014-2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\n/**\n * Results cache\n */\n\nvar res = '';\nvar cache;\n\n/**\n * Expose `repeat`\n */\n\nmodule.exports = repeat;\n\n/**\n * Repeat the given `string` the specified `number`\n * of times.\n *\n * **Example:**\n *\n * ```js\n * var repeat = require('repeat-string');\n * repeat('A', 5);\n * //=> AAAAA\n * ```\n *\n * @param {String} `string` The string to repeat\n * @param {Number} `number` The number of times to repeat the string\n * @return {String} Repeated string\n * @api public\n */\n\nfunction repeat(str, num) {\n  if (typeof str !== 'string') {\n    throw new TypeError('expected a string');\n  }\n\n  // cover common, quick use cases\n  if (num === 1) return str;\n  if (num === 2) return str + str;\n\n  var max = str.length * num;\n  if (cache !== str || typeof cache === 'undefined') {\n    cache = str;\n    res = '';\n  } else if (res.length >= max) {\n    return res.substr(0, max);\n  }\n\n  while (max > res.length && num > 1) {\n    if (num & 1) {\n      res += str;\n    }\n\n    num >>= 1;\n    str += str;\n  }\n\n  res += str;\n  res = res.substr(0, max);\n  return res;\n}\n","'use strict'\n\nmodule.exports = factory\n\n// Construct a state `toggler`: a function which inverses `property` in context\n// based on its current value.\n// The by `toggler` returned function restores that value.\nfunction factory(key, state, ctx) {\n  return enter\n\n  function enter() {\n    var context = ctx || this\n    var current = context[key]\n\n    context[key] = !state\n\n    return exit\n\n    function exit() {\n      context[key] = current\n    }\n  }\n}\n","'use strict'\n\nmodule.exports = require('./lib')\n","var entities = require('character-entities-html4')\n\nvar characters = {}\nvar name\n\nmodule.exports = characters\n\nfor (name in entities) {\n  characters[entities[name]] = name\n}\n","module.exports = String.fromCharCode\n","module.exports = {}.hasOwnProperty\n","'use strict'\n\nmodule.exports = encode\n\n// Encode special characters in `value`.\nfunction encode(value, options) {\n  value = value.replace(\n    options.subset ? charactersToExpression(options.subset) : /[\"&'<>`]/g,\n    basic\n  )\n\n  if (options.subset || options.escapeOnly) {\n    return value\n  }\n\n  return (\n    value\n      // Surrogate pairs.\n      .replace(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g, surrogate)\n      // BMP control characters (C0 except for LF, CR, SP; DEL; and some more\n      // non-ASCII ones).\n      .replace(\n        // eslint-disable-next-line no-control-regex, unicorn/no-hex-escape\n        /[\\x01-\\t\\v\\f\\x0E-\\x1F\\x7F\\x81\\x8D\\x8F\\x90\\x9D\\xA0-\\uFFFF]/g,\n        basic\n      )\n  )\n\n  function surrogate(pair, index, all) {\n    return options.format(\n      (pair.charCodeAt(0) - 0xd800) * 0x400 +\n        pair.charCodeAt(1) -\n        0xdc00 +\n        0x10000,\n      all.charCodeAt(index + 2),\n      options\n    )\n  }\n\n  function basic(character, index, all) {\n    return options.format(\n      character.charCodeAt(0),\n      all.charCodeAt(index + 1),\n      options\n    )\n  }\n}\n\nfunction charactersToExpression(subset) {\n  var groups = []\n  var index = -1\n\n  while (++index < subset.length) {\n    groups.push(subset[index].replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&'))\n  }\n\n  return new RegExp('(?:' + groups.join('|') + ')', 'g')\n}\n","'use strict'\n\nvar xtend = require('xtend')\nvar core = require('./core')\nvar smart = require('./util/format-smart')\n\nmodule.exports = encode\n\n// Encode special characters in `value`.\nfunction encode(value, options) {\n  // Note: Switch to `Object.assign` next major.\n  return core(value, xtend(options, {format: smart}))\n}\n","'use strict'\n\nvar core = require('./core')\nvar smart = require('./util/format-smart')\n\nmodule.exports = escape\n\n// Shortcut to escape special characters in HTML.\nfunction escape(value) {\n  return core(value, {\n    escapeOnly: true,\n    useNamedReferences: true,\n    format: smart\n  })\n}\n","'use strict'\n\nvar encode = require('./encode')\nvar escape = require('./escape')\n\nmodule.exports = encode\nencode.escape = escape\n","module.exports = formatPretty\n\nvar toHexadecimal = require('./to-hexadecimal')\nvar toDecimal = require('./to-decimal')\nvar toNamed = require('./to-named')\n\n// Encode `character` according to `options`.\nfunction formatPretty(code, next, options) {\n  var named\n  var numeric\n  var decimal\n\n  if (options.useNamedReferences || options.useShortestReferences) {\n    named = toNamed(\n      code,\n      next,\n      options.omitOptionalSemicolons,\n      options.attribute\n    )\n  }\n\n  if (options.useShortestReferences || !named) {\n    numeric = toHexadecimal(code, next, options.omitOptionalSemicolons)\n\n    // Use the shortest numeric reference when requested.\n    // A simple algorithm would use decimal for all code points under 100, as\n    // those are shorter than hexadecimal:\n    //\n    // * `&#99;` vs `&#x63;` (decimal shorter)\n    // * `&#100;` vs `&#x64;` (equal)\n    //\n    // However, because we take `next` into consideration when `omit` is used,\n    // And it would be possible that decimals are shorter on bigger values as\n    // well if `next` is hexadecimal but not decimal, we instead compare both.\n    if (options.useShortestReferences) {\n      decimal = toDecimal(code, next, options.omitOptionalSemicolons)\n\n      if (decimal.length < numeric.length) {\n        numeric = decimal\n      }\n    }\n  }\n\n  return named &&\n    (!options.useShortestReferences || named.length < numeric.length)\n    ? named\n    : numeric\n}\n","module.exports = toDecimalReference\n\nvar fromCharCode = require('../constant/from-char-code')\n\n// Transform `code` into a decimal character reference.\nfunction toDecimalReference(code, next, omit) {\n  var value = '&#' + String(code)\n  return omit && next && !/\\d/.test(fromCharCode(next)) ? value : value + ';'\n}\n","module.exports = toHexReference\n\nvar fromCharCode = require('../constant/from-char-code')\n\n// Transform `code` into a hexadecimal character reference.\nfunction toHexReference(code, next, omit) {\n  var value = '&#x' + code.toString(16).toUpperCase()\n  return omit && next && !/[\\dA-Fa-f]/.test(fromCharCode(next))\n    ? value\n    : value + ';'\n}\n","module.exports = toNamed\n\nvar legacy = require('character-entities-legacy')\nvar characters = require('../constant/characters')\nvar fromCharCode = require('../constant/from-char-code')\nvar own = require('../constant/has-own-property')\nvar dangerous = require('../constant/dangerous.json')\n\n// Transform `code` into a named character reference.\nfunction toNamed(code, next, omit, attribute) {\n  var character = fromCharCode(code)\n  var name\n  var value\n\n  if (own.call(characters, character)) {\n    name = characters[character]\n    value = '&' + name\n\n    if (\n      omit &&\n      own.call(legacy, name) &&\n      dangerous.indexOf(name) === -1 &&\n      (!attribute ||\n        (next && next !== 61 /* `=` */ && /[^\\da-z]/i.test(fromCharCode(next))))\n    ) {\n      return value\n    }\n\n    return value + ';'\n  }\n\n  return ''\n}\n","'use strict'\n\nvar xtend = require('xtend')\nvar inherits = require('inherits')\n\nmodule.exports = unherit\n\n// Create a custom constructor which can be modified without affecting the\n// original class.\nfunction unherit(Super) {\n  var result\n  var key\n  var value\n\n  inherits(Of, Super)\n  inherits(From, Of)\n\n  // Clone values.\n  result = Of.prototype\n\n  for (key in result) {\n    value = result[key]\n\n    if (value && typeof value === 'object') {\n      result[key] = 'concat' in value ? value.concat() : xtend(value)\n    }\n  }\n\n  return Of\n\n  // Constructor accepting a single argument, which itself is an `arguments`\n  // object.\n  function From(parameters) {\n    return Super.apply(this, parameters)\n  }\n\n  // Constructor accepting variadic arguments.\n  function Of() {\n    if (!(this instanceof Of)) {\n      return new From(arguments)\n    }\n\n    return Super.apply(this, arguments)\n  }\n}\n","module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Object.<string, Info>} Properties\n * @typedef {Object.<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","import {Schema} from './schema.js'\n\n/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\n/**\n * @param {import('./schema.js').Schema[]} definitions\n * @param {string} space\n * @returns {import('./schema.js').Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  var property = {}\n  /** @type {Normal} */\n  var normal = {}\n  var index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    this.property = property\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.attribute = null\nInfo.prototype.property = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","var powers = 0\n\nexport var boolean = increment()\nexport var booleanish = increment()\nexport var overloadedBoolean = increment()\nexport var number = increment()\nexport var spaceSeparated = increment()\nexport var commaSeparated = increment()\nexport var commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\nvar checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    var index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    while (++index < checks.length) {\n      mark(\n        this,\n        checks[index],\n        (mask & types[checks[index]]) === types[checks[index]]\n      )\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {InstanceType<typeof DefinedInfo>} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    values[key] = value\n  }\n}\n","import {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\n/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n * @typedef {import('./info.js').Info} Info\n */\n\n/**\n * @typedef {Object.<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Object.<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array.<string>} [mustUseProperty]\n */\n\nvar own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {import('./schema.js').Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  var property = {}\n  /** @type {Normal} */\n  var normal = {}\n  /** @type {string} */\n  var prop\n  /** @type {Info} */\n  var info\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes, prop),\n        definition.properties[prop],\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport var xlink = create({\n  space: 'xlink',\n  transform: xlinkTransform,\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n\n/**\n * @param {unknown} _\n * @param {string} prop\n * @returns {string}\n */\nfunction xlinkTransform(_, prop) {\n  return 'xlink:' + prop.slice(5).toLowerCase()\n}\n","import {create} from './util/create.js'\n\nexport var xml = create({\n  space: 'xml',\n  transform: xmlTransform,\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n\n/**\n * @param {unknown} _\n * @param {string} prop\n * @returns {string}\n */\nfunction xmlTransform(_, prop) {\n  return 'xml:' + prop.slice(3).toLowerCase()\n}\n","/**\n * @param {Object.<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Object.<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport var xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport var aria = create({\n  transform: ariaTransform,\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n\n/**\n * @param {unknown} _\n * @param {string} prop\n * @returns {string}\n */\nfunction ariaTransform(_, prop) {\n  return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n}\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport var html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    capture: boolean,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: commaSeparated,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforePrint: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextMenu: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: commaSeparated,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport var svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport var html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport var svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","import {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nvar valid = /^data[-\\w.:]+$/i\nvar dash = /-[a-z]/g\nvar cap = /[A-Z]/g\n\n/**\n * @param {import('./util/schema.js').Schema} schema\n * @param {string} value\n * @returns {import('./util/info.js').Info}\n */\nexport function find(schema, value) {\n  var normal = normalize(value)\n  var prop = value\n  var Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      prop = datasetToProperty(value)\n    } else {\n      value = datasetToAttribute(value)\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} attribute\n * @returns {string}\n */\nfunction datasetToProperty(attribute) {\n  var value = attribute.slice(5).replace(dash, camelcase)\n  return 'data' + value.charAt(0).toUpperCase() + value.slice(1)\n}\n\n/**\n * @param {string} property\n * @returns {string}\n */\nfunction datasetToAttribute(property) {\n  var value = property.slice(4)\n\n  if (dash.test(value)) {\n    return property\n  }\n\n  value = value.replace(cap, kebab)\n\n  if (value.charAt(0) !== '-') {\n    value = '-' + value\n  }\n\n  return 'data' + value\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n */\n\nvar search = /[#.]/g\n\n/**\n * Create a hast element from a simple CSS selector.\n *\n * @param selector A simple CSS selector.\n *   Can contain a tag-name (`foo`), classes (`.bar`), and an ID (`#baz`).\n *   Multiple classes are allowed.\n *   Uses the last ID if multiple IDs are found.\n * @param [defaultTagName='div'] Tag name to use if `selector` does not specify one.\n */\nexport const parseSelector =\n  /**\n   * @type {(\n   *  <Selector extends string, DefaultTagName extends string = 'div'>(selector?: Selector, defaultTagName?: DefaultTagName) => Element & {tagName: import('./extract.js').ExtractTagName<Selector, DefaultTagName>}\n   * )}\n   */\n  (\n    /**\n     * @param {string} [selector]\n     * @param {string} [defaultTagName='div']\n     * @returns {Element}\n     */\n    function (selector, defaultTagName = 'div') {\n      var value = selector || ''\n      /** @type {Properties} */\n      var props = {}\n      var start = 0\n      /** @type {string} */\n      var subvalue\n      /** @type {string} */\n      var previous\n      /** @type {RegExpMatchArray} */\n      var match\n\n      while (start < value.length) {\n        search.lastIndex = start\n        match = search.exec(value)\n        subvalue = value.slice(start, match ? match.index : value.length)\n\n        if (subvalue) {\n          if (!previous) {\n            defaultTagName = subvalue\n          } else if (previous === '#') {\n            props.id = subvalue\n          } else if (Array.isArray(props.className)) {\n            props.className.push(subvalue)\n          } else {\n            props.className = [subvalue]\n          }\n\n          start += subvalue.length\n        }\n\n        if (match) {\n          previous = match[0]\n          start++\n        }\n      }\n\n      return {\n        type: 'element',\n        tagName: defaultTagName,\n        properties: props,\n        children: []\n      }\n    }\n  )\n","/**\n * Parse space separated tokens to an array of strings.\n *\n * @param {string} value Space separated tokens\n * @returns {Array.<string>} Tokens\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated tokens.\n *\n * @param {Array.<string|number>} values Tokens\n * @returns {string} Space separated tokens\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","/**\n * @typedef {Object} StringifyOptions\n * @property {boolean} [padLeft=true] Whether to pad a space before a token (`boolean`, default: `true`).\n * @property {boolean} [padRight=false] Whether to pad a space after a token (`boolean`, default: `false`).\n */\n\n/**\n * Parse comma separated tokens to an array.\n *\n * @param {string} value\n * @returns {Array.<string>}\n */\nexport function parse(value) {\n  /** @type {Array.<string>} */\n  var tokens = []\n  var input = String(value || '')\n  var index = input.indexOf(',')\n  var start = 0\n  /** @type {boolean} */\n  var end\n  /** @type {string} */\n  var token\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings to comma separated tokens.\n *\n * @param {Array.<string|number>} values\n * @param {StringifyOptions} [options]\n * @returns {string}\n */\nexport function stringify(values, options) {\n  var settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  if (values[values.length - 1] === '') {\n    values = values.concat('')\n  }\n\n  return values\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Content} Content\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n */\n\n/**\n * @typedef {Content | Root} Node\n *   Any concrete `hast` node.\n * @typedef {Root | Element} HResult\n *   Result from a `h` (or `s`) call.\n *\n * @typedef {string | number} HStyleValue\n *   Value for a CSS style field.\n * @typedef {Record<string, HStyleValue>} HStyle\n *   Supported value of a `style` prop.\n * @typedef {string | number | boolean | null | undefined} HPrimitiveValue\n *   Primitive property value.\n * @typedef {Array<string | number>} HArrayValue\n *   List of property values for space- or comma separated values (such as `className`).\n * @typedef {HPrimitiveValue | HArrayValue} HPropertyValue\n *   Primitive value or list value.\n * @typedef {{[property: string]: HPropertyValue | HStyle}} HProperties\n *   Acceptable value for element properties.\n *\n * @typedef {string | number | null | undefined} HPrimitiveChild\n *   Primitive children, either ignored (nullish), or turned into text nodes.\n * @typedef {Array<Node | HPrimitiveChild>} HArrayChild\n *   List of children.\n * @typedef {Node | HPrimitiveChild | HArrayChild} HChild\n *   Acceptable child value.\n */\n\nimport {find, normalize} from 'property-information'\nimport {parseSelector} from 'hast-util-parse-selector'\nimport {parse as spaces} from 'space-separated-tokens'\nimport {parse as commas} from 'comma-separated-tokens'\n\nconst buttonTypes = new Set(['menu', 'submit', 'reset', 'button'])\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Schema} schema\n * @param {string} defaultTagName\n * @param {Array<string>} [caseSensitive]\n */\nexport function core(schema, defaultTagName, caseSensitive) {\n  const adjust = caseSensitive && createAdjustMap(caseSensitive)\n\n  const h =\n    /**\n     * @type {{\n     *   (): Root\n     *   (selector: null | undefined, ...children: Array<HChild>): Root\n     *   (selector: string, properties?: HProperties, ...children: Array<HChild>): Element\n     *   (selector: string, ...children: Array<HChild>): Element\n     * }}\n     */\n    (\n      /**\n       * Hyperscript compatible DSL for creating virtual hast trees.\n       *\n       * @param {string | null} [selector]\n       * @param {HProperties | HChild} [properties]\n       * @param {Array<HChild>} children\n       * @returns {HResult}\n       */\n      function (selector, properties, ...children) {\n        let index = -1\n        /** @type {HResult} */\n        let node\n\n        if (selector === undefined || selector === null) {\n          node = {type: 'root', children: []}\n          // @ts-expect-error Properties are not supported for roots.\n          children.unshift(properties)\n        } else {\n          node = parseSelector(selector, defaultTagName)\n          // Normalize the name.\n          node.tagName = node.tagName.toLowerCase()\n          if (adjust && own.call(adjust, node.tagName)) {\n            node.tagName = adjust[node.tagName]\n          }\n\n          // Handle props.\n          if (isProperties(properties, node.tagName)) {\n            /** @type {string} */\n            let key\n\n            for (key in properties) {\n              if (own.call(properties, key)) {\n                // @ts-expect-error `node.properties` is set.\n                addProperty(schema, node.properties, key, properties[key])\n              }\n            }\n          } else {\n            children.unshift(properties)\n          }\n        }\n\n        // Handle children.\n        while (++index < children.length) {\n          addChild(node.children, children[index])\n        }\n\n        if (node.type === 'element' && node.tagName === 'template') {\n          node.content = {type: 'root', children: node.children}\n          node.children = []\n        }\n\n        return node\n      }\n    )\n\n  return h\n}\n\n/**\n * @param {HProperties | HChild} value\n * @param {string} name\n * @returns {value is HProperties}\n */\nfunction isProperties(value, name) {\n  if (\n    value === null ||\n    value === undefined ||\n    typeof value !== 'object' ||\n    Array.isArray(value)\n  ) {\n    return false\n  }\n\n  if (name === 'input' || !value.type || typeof value.type !== 'string') {\n    return true\n  }\n\n  if ('children' in value && Array.isArray(value.children)) {\n    return false\n  }\n\n  if (name === 'button') {\n    return buttonTypes.has(value.type.toLowerCase())\n  }\n\n  return !('value' in value)\n}\n\n/**\n * @param {Schema} schema\n * @param {Properties} properties\n * @param {string} key\n * @param {HStyle | HPropertyValue} value\n * @returns {void}\n */\nfunction addProperty(schema, properties, key, value) {\n  const info = find(schema, key)\n  let index = -1\n  /** @type {HPropertyValue} */\n  let result\n\n  // Ignore nullish and NaN values.\n  if (value === undefined || value === null) return\n\n  if (typeof value === 'number') {\n    // Ignore NaN.\n    if (Number.isNaN(value)) return\n\n    result = value\n  }\n  // Booleans.\n  else if (typeof value === 'boolean') {\n    result = value\n  }\n  // Handle list values.\n  else if (typeof value === 'string') {\n    if (info.spaceSeparated) {\n      result = spaces(value)\n    } else if (info.commaSeparated) {\n      result = commas(value)\n    } else if (info.commaOrSpaceSeparated) {\n      result = spaces(commas(value).join(' '))\n    } else {\n      result = parsePrimitive(info, info.property, value)\n    }\n  } else if (Array.isArray(value)) {\n    result = value.concat()\n  } else {\n    result = info.property === 'style' ? style(value) : String(value)\n  }\n\n  if (Array.isArray(result)) {\n    /** @type {Array<string | number>} */\n    const finalResult = []\n\n    while (++index < result.length) {\n      // @ts-expect-error Assume no booleans in array.\n      finalResult[index] = parsePrimitive(info, info.property, result[index])\n    }\n\n    result = finalResult\n  }\n\n  // Class names (which can be added both on the `selector` and here).\n  if (info.property === 'className' && Array.isArray(properties.className)) {\n    // @ts-expect-error Assume no booleans in `className`.\n    result = properties.className.concat(result)\n  }\n\n  properties[info.property] = result\n}\n\n/**\n * @param {Array<Content>} nodes\n * @param {HChild} value\n * @returns {void}\n */\nfunction addChild(nodes, value) {\n  let index = -1\n\n  if (value === undefined || value === null) {\n    // Empty.\n  } else if (typeof value === 'string' || typeof value === 'number') {\n    nodes.push({type: 'text', value: String(value)})\n  } else if (Array.isArray(value)) {\n    while (++index < value.length) {\n      addChild(nodes, value[index])\n    }\n  } else if (typeof value === 'object' && 'type' in value) {\n    if (value.type === 'root') {\n      addChild(nodes, value.children)\n    } else {\n      nodes.push(value)\n    }\n  } else {\n    throw new Error('Expected node, nodes, or string, got `' + value + '`')\n  }\n}\n\n/**\n * Parse a single primitives.\n *\n * @param {Info} info\n * @param {string} name\n * @param {HPrimitiveValue} value\n * @returns {HPrimitiveValue}\n */\nfunction parsePrimitive(info, name, value) {\n  if (typeof value === 'string') {\n    if (info.number && value && !Number.isNaN(Number(value))) {\n      return Number(value)\n    }\n\n    if (\n      (info.boolean || info.overloadedBoolean) &&\n      (value === '' || normalize(value) === normalize(name))\n    ) {\n      return true\n    }\n  }\n\n  return value\n}\n\n/**\n * Serialize a `style` object as a string.\n *\n * @param {HStyle} value\n *   Style object.\n * @returns {string}\n *   CSS string.\n */\nfunction style(value) {\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      result.push([key, value[key]].join(': '))\n    }\n  }\n\n  return result.join('; ')\n}\n\n/**\n * Create a map to adjust casing.\n *\n * @param {Array<string>} values\n *   List of properly cased keys.\n * @returns {Record<string, string>}\n *   Map of lowercase keys to uppercase keys.\n */\nfunction createAdjustMap(values) {\n  /** @type {Record<string, string>} */\n  const result = {}\n  let index = -1\n\n  while (++index < values.length) {\n    result[values[index].toLowerCase()] = values[index]\n  }\n\n  return result\n}\n","/**\n * @typedef {import('./core.js').HChild} Child\n *   Acceptable child value.\n * @typedef {import('./core.js').HProperties} Properties\n *   Acceptable value for element properties.\n * @typedef {import('./core.js').HResult} Result\n *   Result from a `h` (or `s`) call.\n *\n * @typedef {import('./jsx-classic.js').Element} h.JSX.Element\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} h.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic.js').IntrinsicElements} h.JSX.IntrinsicElements\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} h.JSX.ElementChildrenAttribute\n */\n\nimport {html} from 'property-information'\nimport {core} from './core.js'\n\nexport const h = core(html, 'div')\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @typedef {Record<string, unknown>} Props\n * @typedef {null | undefined | string | Props | TestFunctionAnything | Array<string | Props | TestFunctionAnything>} Test\n *   Check for an arbitrary node, unaware of TypeScript inferral.\n *\n * @callback TestFunctionAnything\n *   Check if a node passes a test, unaware of TypeScript inferral.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | void}\n *   Whether this node passes the test.\n */\n\n/**\n * @template {Node} Kind\n *   Node type.\n * @typedef {Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind> | Array<Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind>>} PredicateTest\n *   Check for a node that can be inferred by TypeScript.\n */\n\n/**\n * Check if a node passes a certain test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback TestFunctionPredicate\n *   Complex test function for a node that can be inferred by TypeScript.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this node passes the test.\n */\n\n/**\n * @callback AssertAnything\n *   Check that an arbitrary value is a node, unaware of TypeScript inferral.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if a node is a node and passes a certain node test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback AssertPredicate\n *   Check that an arbitrary value is a specific node, aware of TypeScript.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param node\n *   Thing to check, typically `Node`.\n * @param test\n *   A check for a specific node.\n * @param index\n *   The node’s position in its parent.\n * @param parent\n *   The node’s parent.\n * @returns\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  /**\n   * @type {(\n   *   (() => false) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index: number, parent: Parent, context?: unknown) => node is Kind) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index?: null | undefined, parent?: null | undefined, context?: unknown) => node is Kind) &\n   *   ((node: unknown, test: Test, index: number, parent: Parent, context?: unknown) => boolean) &\n   *   ((node: unknown, test?: Test, index?: null | undefined, parent?: null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function is(node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      // @ts-expect-error Looks like a node.\n      return node && node.type && typeof node.type === 'string'\n        ? Boolean(check.call(context, node, index, parent))\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns\n *   An assertion.\n */\nexport const convert =\n  /**\n   * @type {(\n   *   (<Kind extends Node>(test: PredicateTest<Kind>) => AssertPredicate<Kind>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return ok\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<string | Props | TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {AssertAnything}\n */\nfunction propsFactory(check) {\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      // @ts-expect-error: hush, it sure works as an index.\n      if (node[key] !== check[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {AssertAnything}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {unknown} node\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(node, ...parameters) {\n    return Boolean(\n      node &&\n        typeof node === 'object' &&\n        'type' in node &&\n        // @ts-expect-error: fine.\n        Boolean(check.call(this, node, ...parameters))\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n */\n\n/**\n * @typedef {boolean | 'skip'} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<Ancestor>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   Tree type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {Visitor<import('./complex-types.js').Matches<import('./complex-types.js').InclusiveDescendant<Tree>, Check>, Extract<import('./complex-types.js').InclusiveDescendant<Tree>, Parent>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from './color.js'\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visitParents =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor<Node>} visitor\n     * @param {boolean | null | undefined} [reverse]\n     * @returns {void}\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        // @ts-expect-error no visitor given, so `visitor` is test.\n        visitor = test\n        test = null\n      }\n\n      const is = convert(test)\n      const step = reverse ? -1 : 1\n\n      factory(tree, undefined, [])()\n\n      /**\n       * @param {Node} node\n       * @param {number | undefined} index\n       * @param {Array<Parent>} parents\n       */\n      function factory(node, index, parents) {\n        /** @type {Record<string, unknown>} */\n        // @ts-expect-error: hush\n        const value = node && typeof node === 'object' ? node : {}\n\n        if (typeof value.type === 'string') {\n          const name =\n            // `hast`\n            typeof value.tagName === 'string'\n              ? value.tagName\n              : // `xast`\n              typeof value.name === 'string'\n              ? value.name\n              : undefined\n\n          Object.defineProperty(visit, 'name', {\n            value:\n              'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n          })\n        }\n\n        return visit\n\n        function visit() {\n          /** @type {ActionTuple} */\n          let result = []\n          /** @type {ActionTuple} */\n          let subresult\n          /** @type {number} */\n          let offset\n          /** @type {Array<Parent>} */\n          let grandparents\n\n          if (!test || is(node, index, parents[parents.length - 1] || null)) {\n            result = toResult(visitor(node, parents))\n\n            if (result[0] === EXIT) {\n              return result\n            }\n          }\n\n          // @ts-expect-error looks like a parent.\n          if (node.children && result[0] !== SKIP) {\n            // @ts-expect-error looks like a parent.\n            offset = (reverse ? node.children.length : -1) + step\n            // @ts-expect-error looks like a parent.\n            grandparents = parents.concat(node)\n\n            // @ts-expect-error looks like a parent.\n            while (offset > -1 && offset < node.children.length) {\n              // @ts-expect-error looks like a parent.\n              subresult = factory(node.children[offset], offset, grandparents)()\n\n              if (subresult[0] === EXIT) {\n                return subresult\n              }\n\n              offset =\n                typeof subresult[1] === 'number' ? subresult[1] : offset + step\n            }\n          }\n\n          return result\n        }\n      }\n    }\n  )\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {ActionTuple}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * Check if `Child` can be a child of `Ancestor`.\n *\n * Returns the ancestor when `Child` can be a child of `Ancestor`, or returns\n * `never`.\n *\n * @template {Node} Ancestor\n *   Node type.\n * @template {Node} Child\n *   Node type.\n * @typedef {(\n *   Ancestor extends Parent\n *     ? Child extends Ancestor['children'][number]\n *       ? Ancestor\n *       : never\n *     : never\n * )} ParentsOf\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends Node ? number | null : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends Node ? Ancestor | null : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * Build a typed `Visitor` function from a node and all possible parents.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Visited\n *   Node type.\n * @template {Parent} Ancestor\n *   Parent type.\n * @typedef {Visitor<Visited, ParentsOf<Ancestor, Visited>>} BuildVisitorFromMatch\n */\n\n/**\n * Build a typed `Visitor` function from a list of descendants and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     import('unist-util-visit-parents/complex-types.js').Matches<Descendant, Check>,\n *     Extract<Descendant, Parent>\n *   >\n * )} BuildVisitorFromDescendants\n */\n\n/**\n * Build a typed `Visitor` function from a tree and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} [Tree=Node]\n *   Node type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     import('unist-util-visit-parents/complex-types.js').InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visit =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor} visitor\n     * @param {boolean | null | undefined} [reverse]\n     * @returns {void}\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array<Parent>} parents\n       */\n      function overload(node, parents) {\n        const parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n","/**\n * Light-Weight CSS Tooling\n *\n * The code here is meant to be a pretty light-weight and minimal approach to\n * CSS handling that meets the needs of the rest of the GDoc2Md library. It is\n * not meant to apply much validation or strictness to the CSS it handles, or\n * to handle particularly complex CSS content that we don't expect to see from\n * Google Docs.\n *\n * If our needs get drastically more complex in the future, we should switch to\n * using a dedicated third-party CSS parser like css-tree or postcss.\n */\n\n/** @typedef {{[index: string]: string}} Style */\n\n/**\n * Check whether a string is empty or only contains whitespace.\n * @param {string} text\n * @returns {boolean}\n */\nfunction isBlank(text) {\n  return /^\\s*$/.test(text);\n}\n\n/**\n * Parse a CSS property list (e.g. from an HTML `style` attribute) into a simple\n * object where the keys are the property names and the values are the property\n * values (as strings).\n * Value strings are lower-cased for easier handling (since most CSS values are\n * case insensitive), but this doesn't break out individual properties from\n * shorthand properties or do other specialized property/value handling.\n * @param {string} text\n * @returns {Style}\n */\nexport function parseCssPropertyList(text) {\n  const properties = Object.create(null);\n  if (!text) return properties;\n\n  // This is pretty simplistic, and there are significant caveats:\n  // - The semicolon could be inside a quoted string, in which case it shouldn't\n  //   split properties.\n  // - The property names and values are not limited to the actual allowed\n  //   characters (the rules used here are much simpler than in real CSS).\n  //\n  // For the most part, this library doesn't need to be too concerned with\n  // invalid input. We expect to be working with valid HTML & CSS that was\n  // output by Google Docs. We haven't seen content that violates the above\n  // caveats, so this is OK for now, but that could potentially change.\n  for (const property of text.split(';')) {\n    if (isBlank(property)) continue;\n\n    try {\n      const {name, value} = property\n        .match(/^\\s*(?<name>[\\w-]+)\\s*:\\s*(?<value>.+)\\s*$/)\n        .groups;\n      // Lower-case values for easier lookups and comparisons. Technically this\n      // should only happen for parts of the value that are not quoted.\n      properties[name] = value.toLowerCase();\n    }\n    catch(error) {\n      console.warn(`Could not parse CSS property \"${property}\" (${error})`);\n    }\n  }\n\n  return properties;\n}\n\n/**\n * Get the content of the node's `style` attribute as a parsed object. This\n * caches the results on the node for easy retrieval.\n * @param {RehypeNode} node\n * @returns {Style}\n */\nfunction getNodeStyle(node) {\n  return node._style ||= parseCssPropertyList(node.properties?.style);\n}\n\n/**\n * Resolve the actual, inherited value of a single style property based on the\n * whole tree of nodes. This caches results on the node for easy retrieval.\n * @param {string} propertyName\n * @param {RehypeNode} node\n * @param {RehypeNode[]} ancestors List of ancestor nodes, ordered shallowest to\n *        deepest in the tree.\n * @returns {string|undefined}\n */\nfunction getResolvedStyleProperty(propertyName, node, ancestors) {\n  node._resolvedStyle ||= Object.create(null);\n  if (propertyName in node._resolvedStyle) {\n    return node._resolvedStyle[propertyName];\n  }\n\n  let value = getNodeStyle(node)[propertyName];\n  if ((value && value !== 'inherit') || !ancestors?.length) {\n    node._resolvedStyle[propertyName] = value;\n    return value;\n  }\n\n  // WARNING: Not all properties are inheritable, but this code doesn't check\n  // for inheritability. If it turns out we need to do so, MDN has nice data\n  // to build an allow/block-list from:\n  // https://github.com/mdn/data/blob/main/css/properties.json\n  const parentAncestors = ancestors.slice(0, -1);\n  const parent = ancestors[parentAncestors.length];\n  return getResolvedStyleProperty(propertyName, parent, parentAncestors);\n}\n\n/**\n * Get an object with properties representing a node's fully resolved styles,\n * including anything inherited from ancestors.\n * @param {RehypeNode} node\n * @param {RehypeNode[]} ancestors Ancestors of `node`, starting with the tree\n *        root and ending with the parent of `node`.\n * @returns {Style}\n */\nexport function resolveNodeStyle(node, ancestors) {\n  return new Proxy(Object.create(null), {\n    get (target, property, _receiver) {\n      if (!(property in target)) {\n        target[property] = getResolvedStyleProperty(property, node, ancestors);\n      }\n      return target[property];\n    }\n  });\n}\n","'use strict';\n\nimport { h as hast } from 'hastscript';\nimport { CONTINUE, EXIT, visit } from 'unist-util-visit';\nimport { visitParents } from 'unist-util-visit-parents';\nimport { resolveNodeStyle } from './css.js';\n\nconst blockElements = new Set([\n  'address',\n  'article',\n  'aside',\n  'blockquote',\n  'caption',\n  'center',  // historic\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',  // historic\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'frameset',  // historic\n  'footer',\n  'form',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'header',\n  'hgroup',\n  'hr',\n  'isindex',  // historic\n  'li',\n  'main',\n  'menu',\n  'nav',\n  'noframes',  // historic\n  'ol',\n  'p',\n  'pre',\n  'section',\n  'summary',\n  'table',\n  'thead',\n  'tbody',\n  'tfoot',\n  'td',\n  'th',\n  'tr',\n  'ul'\n]);\n\n// These elements convert to Markdown nodes that can't start or end with spaces.\n// For example, you can't start emphasis with a space: `This * is emphasized*`.\nconst spaceSensitiveElements = new Set([\n  'em',\n  'strong',\n]);\n\nconst isList = node => node.tagName === 'ul' || node.tagName === 'ol';\nconst isStyled = node => node.type === 'element' && node.properties.style;\nconst isBlock = node => node && blockElements.has(node.tagName);\nconst isSpaceSensitive = node => node && spaceSensitiveElements.has(node.tagName);\nconst isCell = (node) => node.tagName === 'th' || node.tagName === 'td';\n\nconst spaceAtStartPattern = /^(\\s+)/;\nconst spaceAtEndPattern = /(\\s+)$/;\n\n// Wrap the children of `node` with the `wrapper` node.\nfunction wrapChildren (node, wrapper) {\n  wrapper.children = node.children;\n  node.children = [wrapper];\n  return wrapper;\n}\n\n/**\n * Fix the incorrect formatting of nested lists in Google Docs's HTML. Lists\n * can only have `div` and `li` children, but Google Docs has other lists as\n * direct descendents. This moves those free-floating lists into the previous\n * `li` element under the assumption that they represent subitems of it.\n *\n * @param {RehypeNode} node Fix the tree below this node\n *\n * @example\n * Input a tree like:\n *    <ul>\n *      <li>An item!</li>\n *      <ul>\n *        <li>A subitem!</li>\n *      </ul>\n *    </ul>\n *\n * Output:\n *    <ul>\n *      <li>An Item!\n *        <ul>\n *          <li>A subitem!</li>\n *        </ul>\n *      </li>\n *    </ul>\n */\nexport function fixNestedLists (node) {\n  visit(node, isList, (node, index, parent) => {\n    if (isList(parent)) {\n      const previous = parent.children[index - 1];\n      if (previous && previous.tagName === 'li') {\n        previous.children.push(node);\n        parent.children.splice(index, 1);\n        return index;\n      }\n      else {\n        console.warn('No previous list item to move nested list into!');\n      }\n    }\n  });\n}\n\n/**\n * Google Docs does italics/bolds/etc on `<span>`s with style attributes, but\n * rehype-remark does not pick up on those. Instead, transform them into\n * semantic `em`, `strong`, etc. elements.\n *\n * @param {RehypeNode} node Fix the tree below this node\n */\nexport function unInlineStyles (node) {\n  convertInlineStylesToElements(node);\n  mergeConsecutiveInlineStyles(node);\n}\n\n/**\n * @private\n * Convert CSS in style attribtutes to semantic elements that are more readily\n * converted to Markdown.\n * @param {RehypeNode} node Fix the tree below this node\n */\nfunction convertInlineStylesToElements(node) {\n  visitParents(node, n => isStyled(n) && !isBlock(n), (node, parents) => {\n    const style = resolveNodeStyle(node, parents);\n\n    if (style['font-style'] === 'italic') {\n      wrapChildren(node, hast('em'));\n    }\n\n    const weight = style['font-weight'];\n    if (weight === 'bold' || weight === '700') {\n      wrapChildren(node, hast('strong'));\n    }\n\n    const verticalAlign = style['vertical-align'];\n    if (verticalAlign === 'super') {\n      wrapChildren(node, hast('sup'));\n    }\n    else if (verticalAlign === 'sub') {\n      wrapChildren(node, hast('sub'));\n    }\n\n    // Some browsers paste with the `text-decoration` property and some use the\n    // newer `text-decoration-line`, so we need to support both.\n    const decorationLine = style['text-decoration'] || style['text-decoration-line'];\n    if (decorationLine?.startsWith('line-through')) {\n      wrapChildren(node, hast('del'));\n    }\n\n    // Google docs doesn't really have anything that represents \"code\", so infer\n    // it from the use of monospace fonts.\n    if (/,\\s*monospace/.test(style['font-family'])) {\n      wrapChildren(node, hast('code'));\n    }\n\n    // Keep the structure as flat as possible by removing semantically\n    // meaningless elements once we've extracted formatting from them.\n    if (node.tagName === 'span') {\n      const parent = parents[parents.length - 1];\n      const index = parent.children.indexOf(node);\n      if (index === -1) {\n        throw new Error('Could not find visited node in its parent');\n      }\n\n      const childrenCount = node.children.length;\n      parent.children.splice(index, 1, ...node.children);\n      return index + childrenCount;\n    }\n  });\n}\n\n/**\n * @private\n * Find consecutive inline elements of the same type and merge their contents.\n * For example, this would convert:\n *\n *     <code>const </code><code>name</code>\n *\n * To:\n *\n *     <code>const name</code>\n * @param {RehypeNode} node Fix the tree below this node\n */\nfunction mergeConsecutiveInlineStyles (node) {\n  visit(node, n => n.tagName && n.children?.length, (node, _index, _parent) => {\n    const newChildren = [];\n    let activeNode = null;\n    for (const child of node.children) {\n      if (activeNode) {\n        if (child.tagName === activeNode.tagName) {\n          activeNode.children.push(...child.children);\n        }\n        else {\n          activeNode = null;\n        }\n      }\n      if (!activeNode) {\n        newChildren.push(child);\n        if (child.tagName && !isBlock(child)) {\n          activeNode = child;\n        }\n      }\n    }\n    node.children = newChildren;\n  });\n}\n\n/**\n * Line breaks frequently wind up wrapped with a somewhat pointless `<span>`\n * element that makes them hard to deal correctly with. Unwrap those line breaks\n * so that they are bare `<br>` elements.\n *\n * Changes this:\n *     <span><br></span>\n * To:\n *     <br>\n * @param {RehypeNode} node Fix the tree below this node\n */\nexport function unwrapLineBreaks (node) {\n  const children = node.children;\n  for (let i = 0; i < children.length; i++) {\n    const child = children[i];\n    if (\n      child.tagName === 'span'\n      && child.children.length === 1\n      && child.children[0].tagName === 'br'\n    ) {\n      children.splice(i, 1, child.children[0]);\n    }\n    else if (child.children) {\n      unwrapLineBreaks(child);\n    }\n  }\n  node.children = children;\n}\n\n/**\n * Paragraphs and other block elements frequently wind up preceded with\n * pointless `<br>` elements. This is probably because paragraphs do not, by\n * default, have any space around them in a Google doc, even though having a\n * blank line is what causes Google Docs to spit out `<p>` elements instead of\n * just `<br>` elements.\n *\n * Changes this:\n *     <br><p>Blah</p>\n * To:\n *     <p>Blah</p>\n * @param {RehypeNode} node Fix the tree below this node\n */\nexport function removeLineBreaksBeforeBlocks (node) {\n  const children = node.children;\n  for (let i = 0; i < children.length; i++) {\n    const child = children[i];\n    if (child.tagName === 'br' && isBlock(children[i + 1])) {\n      children.splice(i, 1);\n      i -= 1;\n    }\n    else if (child.children) {\n      removeLineBreaksBeforeBlocks(child);\n    }\n  }\n  node.children = children;\n}\n\n/**\n * Remove spaces from the start or end of nodes where it's not valid in Markdown\n * (e.g. `<em>`) and return the removed spaces. Works recursively to handle\n * nested nodes with surrounding spaces.\n * @param {RehypeNode} node\n * @returns {string}\n */\nfunction _extractInvalidSpace (node, side = 'start') {\n  let totalSpace = '';\n\n  const reverse = side === 'start' ? false : true;\n  visit(node, (child, index, parent) => {\n    if (child.type === 'text') {\n      const pattern = side === 'start' ? spaceAtStartPattern : spaceAtEndPattern;\n      const spaceMatch = child.value.match(pattern);\n      if (spaceMatch) {\n        const space = spaceMatch[1];\n        const body = side === 'start'\n          ? child.value.slice(space.length)\n          : child.value.slice(0, -space.length);\n        totalSpace = side === 'start'\n          ? (totalSpace + space)\n          : (space + totalSpace);\n        if (body.length) {\n          child.value = body;\n          return EXIT;\n        }\n        else {\n          parent.children.splice(index, 1);\n          return side === 'start' ? index : index - 1;\n        }\n      }\n      else {\n        return EXIT;\n      }\n    }\n    else if (isSpaceSensitive(child)) {\n      return CONTINUE;\n    }\n    else {\n      return EXIT;\n    }\n  }, reverse);\n\n  return totalSpace;\n}\n\n/**\n * In Google Docs (and HTML in general), an element that formats some text can\n * start with spaces, tabs, etc. However, in Markdown, some inline markup\n * (mainly emphasis marks like `**bold**` and `_italic_`) can't start or end\n * with spaces. This finds such elements and moves leading and trailing spaces\n * from inside to outside them.\n *\n * For example, this turns a tree like:\n *\n *     <p>Hello<em> italics </em></p>\n *\n * Into:\n *\n *     <p>Hello <em>italics</em> </p>\n *\n * @param {RehypeNode} node Fix the tree below this node\n */\nexport function moveSpaceOutsideSensitiveChildren (node) {\n  visit(node, isSpaceSensitive, (node, index, parent) => {\n    let nextIndex = index + 1;\n\n    const startSpace = _extractInvalidSpace(node, 'start');\n    if (startSpace) {\n      parent.children.splice(index, 0, { type: 'text', value: startSpace });\n      nextIndex++;\n    }\n\n    const endSpace = _extractInvalidSpace(node, 'end');\n    if (endSpace) {\n      parent.children.splice(nextIndex, 0, { type: 'text', value: endSpace });\n      nextIndex++;\n    }\n\n    return nextIndex;\n  });\n}\n\n/**\n * @param {RehypeNode} node\n * @returns {string|null}\n */\nfunction getNodeTextAlignment (node) {\n  const style = resolveNodeStyle(node);\n  const alignMatch = style['text-align']?.match(/^(left|center|right)/);\n  if (alignMatch) {\n    return alignMatch[1];\n  }\n  return null;\n}\n\n/**\n * Tables in Google Docs don't actually put alignment info on the columns or\n * cells. Instead, cells have paragraphs that are aligned. This detects the\n * alignment of the content of table cells so that the Markdown conversion will\n * set the correct alignment for columns.\n * @param {RehypeNode} node Fix the tree below this node\n */\nexport function detectTableColumnAlignment(node) {\n  visit(node, isCell, (node, _index, _parent) => {\n    if (!node.properties.align) {\n      let alignment = getNodeTextAlignment(node);\n      if (!alignment && node.children) {\n        for (let i = 0; i < node.children.length; i++) {\n          const childAlignment = getNodeTextAlignment(node.children[i]);\n          if (i === 0) {\n            alignment = childAlignment;\n          }\n          else if (childAlignment !== alignment) {\n            alignment = null;\n            break;\n          }\n        }\n      }\n\n      if (alignment) {\n        node.properties.align = alignment;\n      }\n    }\n  });\n}\n\n/**\n * @private\n * Determine whether all the text nodes that are descendents of this node are\n * wrapped inside nodes represent `<code>` elements. Returns `null` if the\n * node has no text descendents, otherwise returns a boolean.\n * @param {RehypeNode} parent Check children of this node.\n * @returns {boolean|null}\n */\nfunction isAllTextCode(parent) {\n  if (!parent.children?.length) return null;\n\n  let hasText = false;\n  for (const child of parent.children) {\n    if (child.tagName === 'code') {\n      hasText = true;\n      continue;\n    }\n    else if (child.type === 'text') {\n      return false;\n    }\n    else {\n      const childResult = isAllTextCode(child);\n      if (childResult === false) {\n        return false;\n      }\n      else if (childResult === true) {\n        hasText = true;\n      }\n    }\n  }\n\n  return hasText ? true : null;\n}\n\n/**\n * Identify paragraphs where all the text is wrapped in `<code>` nodes and wrap\n * the entire pagraph in a `<pre><code>` node. Merge consecutive all-code\n * paragraphs into a single `<pre><code>` block.\n * @param {RehypeNode} node Fix the tree below this node\n */\nexport function createCodeBlocks(node) {\n  if (!node.children?.length) return;\n\n  // TODO: identify *lines* that are all code (not just block elements) by\n  // splitting on `<br>` nodes, and break up parent blocks that have complete\n  // code lines in them.\n\n  const codeBlocks = [];\n  let activeCodeBlock = null;\n  for (let i = 0; i < node.children.length; i++) {\n    const child = node.children[i];\n    if (isBlock(child)) {\n      if (isAllTextCode(child)) {\n        if (!activeCodeBlock) {\n          activeCodeBlock = { start: i, end: 0 };\n          codeBlocks.push(activeCodeBlock);\n        }\n      }\n      else {\n        if (activeCodeBlock) {\n          activeCodeBlock.end = i;\n          activeCodeBlock = null;\n        }\n      }\n    }\n    else {\n      createCodeBlocks(child);\n    }\n  }\n  if (activeCodeBlock) {\n    activeCodeBlock.end = node.children.length;\n  }\n\n  // Go in reverse order so we can use the indexes as is, without worrying about\n  // how replacing each block changes the indexes of the next one.\n  for (const block of codeBlocks.reverse()) {\n    const length = block.end - block.start;\n    const contents = node.children\n      .slice(block.start, block.end)\n      .flatMap(node =>\n        // Unwrap paragraphs and replace them with their contents + a line break\n        // so we don't wind up adding blank lines around each line of code.\n        node.tagName === 'p'\n          ? [...node.children, {type:'element', tagName: 'br'}]\n          : [node]\n      );\n    node.children.splice(block.start, length, {\n      type: 'element',\n      tagName: 'pre',\n      children: [{\n        type: 'element',\n        tagName: 'code',\n        children: contents\n      }]\n    });\n  }\n}\n\n/**\n * A rehype plugin to clean up the HTML of a Google Doc. .This applies to the\n * live HTML of Doc, as when you copy and paste it; not *exported* HTML (it\n * might apply there, too; I haven’t looked into it).\n */\nexport default function fixGoogleHtml () {\n  return (tree, _file) => {\n    unInlineStyles(tree);\n    createCodeBlocks(tree);\n    moveSpaceOutsideSensitiveChildren(tree);\n    fixNestedLists(tree);\n    detectTableColumnAlignment(tree);\n    unwrapLineBreaks(tree);\n    removeLineBreaksBeforeBlocks(tree);\n    return tree;\n  };\n}\n","export var webNamespaces = {\n  html: 'http://www.w3.org/1999/xhtml',\n  mathml: 'http://www.w3.org/1998/Math/MathML',\n  svg: 'http://www.w3.org/2000/svg',\n  xlink: 'http://www.w3.org/1999/xlink',\n  xml: 'http://www.w3.org/XML/1998/namespace',\n  xmlns: 'http://www.w3.org/2000/xmlns/'\n}\n","export const svgCaseSensitiveTagNames = [\n  'altGlyph',\n  'altGlyphDef',\n  'altGlyphItem',\n  'animateColor',\n  'animateMotion',\n  'animateTransform',\n  'clipPath',\n  'feBlend',\n  'feColorMatrix',\n  'feComponentTransfer',\n  'feComposite',\n  'feConvolveMatrix',\n  'feDiffuseLighting',\n  'feDisplacementMap',\n  'feDistantLight',\n  'feDropShadow',\n  'feFlood',\n  'feFuncA',\n  'feFuncB',\n  'feFuncG',\n  'feFuncR',\n  'feGaussianBlur',\n  'feImage',\n  'feMerge',\n  'feMergeNode',\n  'feMorphology',\n  'feOffset',\n  'fePointLight',\n  'feSpecularLighting',\n  'feSpotLight',\n  'feTile',\n  'feTurbulence',\n  'foreignObject',\n  'glyphRef',\n  'linearGradient',\n  'radialGradient',\n  'solidColor',\n  'textArea',\n  'textPath'\n]\n","/**\n * @typedef {import('./core.js').HChild} Child\n *   Acceptable child value.\n * @typedef {import('./core.js').HProperties} Properties\n *   Acceptable value for element properties.\n * @typedef {import('./core.js').HResult} Result\n *   Result from a `h` (or `s`) call.\n *\n * @typedef {import('./jsx-classic.js').Element} s.JSX.Element\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} s.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic.js').IntrinsicElements} s.JSX.IntrinsicElements\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} s.JSX.ElementChildrenAttribute\n */\n\nimport {svg} from 'property-information'\nimport {core} from './core.js'\nimport {svgCaseSensitiveTagNames} from './svg-case-sensitive-tag-names.js'\n\nexport const s = core(svg, 'g', svgCaseSensitiveTagNames)\n","/**\n * @typedef {import('hast').Parent} HastParent\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('hast').DocType} HastDoctype\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').Text} HastText\n * @typedef {import('hast').Comment} HastComment\n * @typedef {HastParent['children'][number]} HastChild\n * @typedef {HastChild|HastRoot} HastNode\n */\n\nimport {webNamespaces} from 'web-namespaces'\nimport {h, s} from 'hastscript'\n\nconst ELEMENT_NODE = 1\nconst TEXT_NODE = 3\nconst COMMENT_NODE = 8\nconst DOCUMENT_NODE = 9\nconst DOCUMENT_TYPE_NODE = 10\nconst DOCUMENT_FRAGMENT_NODE = 11\n\n/**\n * @param {Node} node\n * @returns {HastNode|undefined}\n */\nfunction transform(node) {\n  switch (node.nodeType) {\n    case ELEMENT_NODE:\n      // @ts-expect-error TypeScript is wrong.\n      return element(node)\n    case DOCUMENT_NODE:\n    case DOCUMENT_FRAGMENT_NODE:\n      // @ts-expect-error TypeScript is wrong.\n      return root(node)\n    case TEXT_NODE:\n      // @ts-expect-error TypeScript is wrong.\n      return text(node)\n    case COMMENT_NODE:\n      // @ts-expect-error TypeScript is wrong.\n      return comment(node)\n    case DOCUMENT_TYPE_NODE:\n      return doctype()\n    default:\n      return undefined\n  }\n}\n\n/**\n * Transform a document.\n *\n * @param {Document|DocumentFragment} node\n * @returns {HastRoot}\n */\nfunction root(node) {\n  return {type: 'root', children: all(node)}\n}\n\n/**\n * Transform a doctype.\n *\n * @returns {HastDoctype}\n */\nfunction doctype() {\n  // @ts-expect-error hast types out of date.\n  return {type: 'doctype'}\n}\n\n/**\n * Transform a text.\n *\n * @param {Text} node\n * @returns {HastText}\n */\nfunction text(node) {\n  return {type: 'text', value: node.nodeValue || ''}\n}\n\n/**\n * Transform a comment.\n *\n * @param {Comment} node\n * @returns {HastComment}\n */\nfunction comment(node) {\n  return {type: 'comment', value: node.nodeValue || ''}\n}\n\n/**\n * Transform an element.\n *\n * @param {Element} node\n * @returns {HastElement}\n */\nfunction element(node) {\n  const space = node.namespaceURI\n  const fn = space === webNamespaces.svg ? s : h\n  const tagName =\n    space === webNamespaces.html ? node.tagName.toLowerCase() : node.tagName\n  /** @type {DocumentFragment|Element} */\n  const content =\n    // @ts-expect-error Types are wrong.\n    space === webNamespaces.html && tagName === 'template' ? node.content : node\n  const attributes = node.getAttributeNames()\n  /** @type {Object.<string, string>} */\n  const props = {}\n  let index = -1\n\n  while (++index < attributes.length) {\n    props[attributes[index]] = node.getAttribute(attributes[index]) || ''\n  }\n\n  return fn(tagName, props, all(content))\n}\n\n/**\n * Transform an element.\n *\n * @param {Document|DocumentFragment|Element} node\n * @returns {Array.<HastChild>}\n */\nfunction all(node) {\n  const nodes = node.childNodes\n  /** @type {Array.<HastChild>} */\n  const children = []\n  let index = -1\n\n  while (++index < nodes.length) {\n    const child = transform(nodes[index])\n\n    if (child !== undefined) {\n      // @ts-expect-error Assume no document inside document.\n      children.push(child)\n    }\n  }\n\n  return children\n}\n\n/**\n * @param {Node} node\n * @returns {HastNode}\n */\nexport function fromDom(node) {\n  return transform(node || {}) || {type: 'root', children: []}\n}\n","/**\n * @typedef {import('hast').Root} Root\n *\n * @typedef Options\n *   Configuration.\n * @property {boolean} [fragment=true]\n *   Specify whether to parse a fragment, instead of a complete document.\n *   In document mode, unopened `html`, `head`, and `body` elements are opened\n *   in just the right places.\n */\n\nimport {fromDom} from 'hast-util-from-dom'\n\n/** @type {import('unified').Plugin<[Options?] | Array<void>, string, Root>} */\nexport default function parse(options) {\n  const settings = /** @type {Options} */ (this.data('settings'))\n  const {fragment} = {...options, ...settings}\n\n  Object.assign(this, {Parser: parser})\n\n  /** @type {import('unified').ParserFunction<Root>} */\n  function parser(doc) {\n    const create =\n      fragment === null || fragment === undefined || fragment\n        ? createFragment\n        : createDocument\n    return /** @type {Root} */ (fromDom(create(doc)))\n  }\n}\n\nconst DOCUMENT_FRAGMENT_NODE = 11\n\n/**\n * @param {string} htmlString\n * @returns {DocumentFragment}\n */\nfunction createFragment(htmlString) {\n  const doc = createDocument('<!doctype html><body>' + htmlString)\n\n  /**\n   * Pretend as a DocumentFragment node,\n   * @see https://github.com/rehypejs/rehype-dom/pull/19 for more details\n   */\n  return /** @type {DocumentFragment} */ ({\n    nodeType: DOCUMENT_FRAGMENT_NODE,\n    childNodes: doc.body.childNodes\n  })\n}\n\n/**\n * @param {string} htmlString\n * @returns {Document}\n */\nfunction createDocument(htmlString) {\n  return new DOMParser().parseFromString(htmlString, 'text/html')\n}\n","export const own = {}.hasOwnProperty\n","/**\n * @typedef {import('../types.js').H} H\n */\n\n/**\n * @param {H} h\n * @param {string} value\n * @returns {string}\n */\nexport function wrapText(h, value) {\n  return h.wrapText ? value : value.replace(/\\r?\\n|\\r/g, ' ')\n}\n","/**\n * @typedef {import('./types.js').H} H\n * @typedef {import('./types.js').Node} Node\n * @typedef {import('./types.js').Parent} Parent\n * @typedef {import('./types.js').Handle} Handle\n * @typedef {import('./types.js').MdastNode} MdastNode\n */\n\nimport {all} from './all.js'\nimport {own} from './util/own.js'\nimport {wrapText} from './util/wrap-text.js'\n\n/**\n * @param {H} h\n * @param {Node} node\n * @param {Parent|undefined} parent\n * @returns {MdastNode|Array.<MdastNode>|void}\n */\nexport function one(h, node, parent) {\n  /** @type {Handle|undefined} */\n  let fn\n\n  if (node.type === 'element') {\n    if (node.properties && node.properties.dataMdast === 'ignore') {\n      return\n    }\n\n    if (own.call(h.handlers, node.tagName)) {\n      fn = h.handlers[node.tagName]\n    }\n  } else if (own.call(h.handlers, node.type)) {\n    fn = h.handlers[node.type]\n  }\n\n  if (typeof fn === 'function') {\n    return fn(h, node, parent)\n  }\n\n  return unknown(h, node)\n}\n\n/**\n * @type {Handle}\n * @param {Node} node\n */\nfunction unknown(h, node) {\n  // @ts-expect-error: Looks like a literal.\n  if (typeof node.value === 'string') {\n    // @ts-expect-error: Looks like a literal.\n    return h(node, 'text', wrapText(h, node.value))\n  }\n\n  return all(h, node)\n}\n","/**\n * @typedef {import('./types.js').H} H\n * @typedef {import('./types.js').Node} Node\n * @typedef {import('./types.js').Parent} Parent\n * @typedef {import('./types.js').Handle} Handle\n * @typedef {import('./types.js').MdastNode} MdastNode\n */\n\nimport {one} from './one.js'\n\n/**\n * @param {H} h\n * @param {Node} parent\n * @returns {Array.<MdastNode>}\n */\nexport function all(h, parent) {\n  /** @type {Array.<Node>} */\n  // @ts-expect-error Assume `parent` is a parent.\n  const nodes = parent.children || []\n  /** @type {Array.<MdastNode>} */\n  const values = []\n  let index = -1\n  let length = nodes.length\n  let child = nodes[index + 1]\n\n  // Trim initial and final `<br>`s.\n  // They’re not semantic per HTML, and they can’t be made in markdown things\n  // like paragraphs or headings.\n  while (child && child.type === 'element' && child.tagName === 'br') {\n    index++\n    child = nodes[index + 1]\n  }\n\n  child = nodes[length - 1]\n\n  while (\n    length - 1 > index &&\n    child &&\n    child.type === 'element' &&\n    child.tagName === 'br'\n  ) {\n    length--\n    child = nodes[length - 1]\n  }\n\n  while (++index < length) {\n    // @ts-expect-error assume `parent` is a parent.\n    const result = one(h, nodes[index], parent)\n\n    if (Array.isArray(result)) {\n      values.push(...result)\n    } else if (result) {\n      values.push(result)\n    }\n  }\n\n  return values\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('hast').Element} Element\n *\n * @typedef {string} TagName\n * @typedef {null|undefined|TagName|TestFunctionAnything|Array.<TagName|TestFunctionAnything>} Test\n */\n\n/**\n * @template {Element} T\n * @typedef {null|undefined|T['tagName']|TestFunctionPredicate<T>|Array.<T['tagName']|TestFunctionPredicate<T>>} PredicateTest\n */\n\n/**\n * Check if an element passes a test\n *\n * @callback TestFunctionAnything\n * @param {Element} element\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean|void}\n */\n\n/**\n * Check if an element passes a certain node test\n *\n * @template {Element} X\n * @callback TestFunctionPredicate\n * @param {Element} element\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {element is X}\n */\n\n/**\n * Check if a node is an element and passes a certain node test\n *\n * @callback AssertAnything\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean}\n */\n\n/**\n * Check if a node is an element and passes a certain node test\n *\n * @template {Element} Y\n * @callback AssertPredicate\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is Y}\n */\n\n// Check if `node` is an `element` and whether it passes the given test.\nexport const isElement =\n  /**\n   * Check if a node is an element and passes a test.\n   * When a `parent` node is known the `index` of node should also be given.\n   *\n   * @type {(\n   *   (() => false) &\n   *   (<T extends Element = Element>(node: unknown, test?: PredicateTest<T>, index?: number, parent?: Parent, context?: unknown) => node is T) &\n   *   ((node: unknown, test: Test, index?: number, parent?: Parent, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * Check if a node passes a test.\n     * When a `parent` node is known the `index` of node should also be given.\n     *\n     * @param {unknown} [node] Node to check\n     * @param {Test} [test] When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `array`, checks any one of the subtests pass.\n     * @param {number} [index] Position of `node` in `parent`\n     * @param {Parent} [parent] Parent of `node`\n     * @param {unknown} [context] Context object to invoke `test` with\n     * @returns {boolean} Whether test passed and `node` is an `Element` (object with `type` set to `element` and `tagName` set to a non-empty string).\n     */\n    // eslint-disable-next-line max-params\n    function (node, test, index, parent, context) {\n      const check = convertElement(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index for child node')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!parent.type || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      // @ts-expect-error Looks like a node.\n      if (!node || !node.type || typeof node.type !== 'string') {\n        return false\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      return check.call(context, node, index, parent)\n    }\n  )\n\nexport const convertElement =\n  /**\n   * @type {(\n   *   (<T extends Element>(test: T['tagName']|TestFunctionPredicate<T>) => AssertPredicate<T>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * Generate an assertion from a check.\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return element\n      }\n\n      if (typeof test === 'string') {\n        return tagNameFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return anyFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or array as test')\n    }\n  )\n\n/**\n * @param {Array.<TagName|TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array.<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convertElement(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {unknown[]} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) {\n        return true\n      }\n    }\n\n    return false\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node’s tag\n * name for said string.\n *\n * @param {TagName} check\n * @returns {AssertAnything}\n */\nfunction tagNameFactory(check) {\n  return tagName\n\n  /**\n   * @param {unknown} node\n   * @returns {boolean}\n   */\n  function tagName(node) {\n    return element(node) && node.tagName === check\n  }\n}\n\n/**\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {unknown} node\n   * @param {Array.<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(node, ...parameters) {\n    // @ts-expect-error: fine.\n    return element(node) && Boolean(check.call(this, node, ...parameters))\n  }\n}\n\n/**\n * Utility to return true if this is an element.\n * @param {unknown} node\n * @returns {node is Element}\n */\nfunction element(node) {\n  return Boolean(\n    node &&\n      typeof node === 'object' &&\n      // @ts-expect-error Looks like a node.\n      node.type === 'element' &&\n      // @ts-expect-error Looks like an element.\n      typeof node.tagName === 'string'\n  )\n}\n","/**\n * @typedef {import('hast').Element & {tagName: 'audio'|'canvas'|'embed'|'iframe'|'img'|'math'|'object'|'picture'|'svg'|'video'}} Embedded\n * @typedef {import('hast-util-is-element').AssertPredicate<Embedded>} AssertEmbedded\n */\n\nimport {convertElement} from 'hast-util-is-element'\n\n/**\n * Check if a node is an embedded element.\n * @type {AssertEmbedded}\n */\n// @ts-ignore Sure, the assertion matches.\nexport const embedded = convertElement([\n  'audio',\n  'canvas',\n  'embed',\n  'iframe',\n  'img',\n  'math',\n  'object',\n  'picture',\n  'svg',\n  'video'\n])\n","// See: <https://html.spec.whatwg.org/#the-css-user-agent-style-sheet-and-presentational-hints>\nexport const blocks = [\n  'address', // Flow content.\n  'article', // Sections and headings.\n  'aside', // Sections and headings.\n  'blockquote', // Flow content.\n  'body', // Page.\n  'br', // Contribute whitespace intrinsically.\n  'caption', // Similar to block.\n  'center', // Flow content, legacy.\n  'col', // Similar to block.\n  'colgroup', // Similar to block.\n  'dd', // Lists.\n  'dialog', // Flow content.\n  'dir', // Lists, legacy.\n  'div', // Flow content.\n  'dl', // Lists.\n  'dt', // Lists.\n  'figcaption', // Flow content.\n  'figure', // Flow content.\n  'footer', // Flow content.\n  'form', // Flow content.\n  'h1', // Sections and headings.\n  'h2', // Sections and headings.\n  'h3', // Sections and headings.\n  'h4', // Sections and headings.\n  'h5', // Sections and headings.\n  'h6', // Sections and headings.\n  'head', // Page.\n  'header', // Flow content.\n  'hgroup', // Sections and headings.\n  'hr', // Flow content.\n  'html', // Page.\n  'legend', // Flow content.\n  'li', // Block-like.\n  'li', // Similar to block.\n  'listing', // Flow content, legacy\n  'main', // Flow content.\n  'menu', // Lists.\n  'nav', // Sections and headings.\n  'ol', // Lists.\n  'optgroup', // Similar to block.\n  'option', // Similar to block.\n  'p', // Flow content.\n  'plaintext', // Flow content, legacy\n  'pre', // Flow content.\n  'section', // Sections and headings.\n  'summary', // Similar to block.\n  'table', // Similar to block.\n  'tbody', // Similar to block.\n  'td', // Block-like.\n  'td', // Similar to block.\n  'tfoot', // Similar to block.\n  'th', // Block-like.\n  'th', // Similar to block.\n  'thead', // Similar to block.\n  'tr', // Similar to block.\n  'ul', // Lists.\n  'wbr', // Contribute whitespace intrinsically.\n  'xmp' // Flow content, legacy\n]\n","export const content = [\n  // Form.\n  'button',\n  'input',\n  'select',\n  'textarea'\n]\n","export const skippable = [\n  'area',\n  'base',\n  'basefont',\n  'dialog',\n  'datalist',\n  'head',\n  'link',\n  'meta',\n  'noembed',\n  'noframes',\n  'param',\n  'rp',\n  'script',\n  'source',\n  'style',\n  'template',\n  'track',\n  'title'\n]\n","/**\n * rehype plugin to minify whitespace between elements.\n *\n * ## What is this?\n *\n * This package is a plugin that can minify the whitespace between elements.\n *\n * ## When should I use this?\n *\n * You can use this plugin when you want to improve the size of HTML documents.\n *\n * ## API\n *\n * ### `unified().use(rehypeMinifyWhitespace[, options])`\n *\n * Minify whitespace.\n *\n * ##### `options`\n *\n * Configuration (optional).\n *\n * ##### `options.newlines`\n *\n * Whether to collapse runs of whitespace that include line endings to one\n * line ending (`boolean`, default: `false`).\n * The default is to collapse everything to one space.\n *\n * @example\n *   <h1>Heading</h1>\n *   <p><strong>This</strong> and <em>that</em></p>\n */\n\n/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {Root|Root['children'][number]} Node\n *\n * @typedef Options\n * @property {boolean} [newlines=false]\n *   If `newlines: true`, collapses whitespace containing newlines to `'\\n'`\n *   instead of `' '`.\n *   The default is to collapse to a single space.\n *\n * @typedef {'pre'|'nowrap'|'pre-wrap'|'normal'} Whitespace\n *\n * @typedef Context\n * @property {ReturnType<collapseFactory>} collapse\n * @property {Whitespace} whitespace\n * @property {boolean} [before]\n * @property {boolean} [after]\n *\n * @typedef Result\n * @property {boolean} remove\n * @property {boolean} ignore\n * @property {boolean} stripAtStart\n */\n\nimport {isElement} from 'hast-util-is-element'\nimport {embedded} from 'hast-util-embedded'\nimport {convert} from 'unist-util-is'\nimport {whitespace} from 'hast-util-whitespace'\nimport {blocks} from './block.js'\nimport {content as contents} from './content.js'\nimport {skippable as skippables} from './skippable.js'\n\nconst ignorableNode = convert(['doctype', 'comment'])\n\n/**\n * Minify whitespace.\n *\n * @type {import('unified').Plugin<[Options?]|Array<void>, Root>}\n */\nexport default function rehypeMinifyWhitespace(options = {}) {\n  const collapse = collapseFactory(\n    options.newlines ? replaceNewlines : replaceWhitespace\n  )\n\n  return (tree) => {\n    minify(tree, {collapse, whitespace: 'normal'})\n  }\n}\n\n/**\n * @param {Node} node\n * @param {Context} context\n * @returns {Result}\n */\nfunction minify(node, context) {\n  if ('children' in node) {\n    const settings = Object.assign({}, context)\n\n    if (node.type === 'root' || blocklike(node)) {\n      settings.before = true\n      settings.after = true\n    }\n\n    settings.whitespace = inferWhiteSpace(node, context)\n\n    return all(node, settings)\n  }\n\n  if (node.type === 'text') {\n    if (context.whitespace === 'normal') {\n      return minifyText(node, context)\n    }\n\n    // Naïve collapse, but no trimming:\n    if (context.whitespace === 'nowrap') {\n      node.value = context.collapse(node.value)\n    }\n\n    // The `pre-wrap` or `pre` whitespace settings are neither collapsed nor\n    // trimmed.\n  }\n\n  return {remove: false, ignore: ignorableNode(node), stripAtStart: false}\n}\n\n/**\n * @param {Text} node\n * @param {Context} context\n * @returns {Result}\n */\nfunction minifyText(node, context) {\n  const value = context.collapse(node.value)\n  const result = {remove: false, ignore: false, stripAtStart: false}\n  let start = 0\n  let end = value.length\n\n  if (context.before && removable(value.charAt(0))) {\n    start++\n  }\n\n  if (start !== end && removable(value.charAt(end - 1))) {\n    if (context.after) {\n      end--\n    } else {\n      result.stripAtStart = true\n    }\n  }\n\n  if (start === end) {\n    result.remove = true\n  } else {\n    node.value = value.slice(start, end)\n  }\n\n  return result\n}\n\n/**\n * @param {Root|Element} parent\n * @param {Context} context\n * @returns {Result}\n */\nfunction all(parent, context) {\n  let before = context.before\n  const after = context.after\n  const children = parent.children\n  let length = children.length\n  let index = -1\n\n  while (++index < length) {\n    const result = minify(\n      children[index],\n      Object.assign({}, context, {\n        before,\n        after: collapsableAfter(children, index, after)\n      })\n    )\n\n    if (result.remove) {\n      children.splice(index, 1)\n      index--\n      length--\n    } else if (!result.ignore) {\n      before = result.stripAtStart\n    }\n\n    // If this element, such as a `<select>` or `<img>`, contributes content\n    // somehow, allow whitespace again.\n    if (content(children[index])) {\n      before = false\n    }\n  }\n\n  return {remove: false, ignore: false, stripAtStart: Boolean(before || after)}\n}\n\n/**\n * @param {Array<Node>} nodes\n * @param {number} index\n * @param {boolean|undefined} [after]\n * @returns {boolean|undefined}\n */\nfunction collapsableAfter(nodes, index, after) {\n  while (++index < nodes.length) {\n    const node = nodes[index]\n    let result = inferBoundary(node)\n\n    if (result === undefined && 'children' in node && !skippable(node)) {\n      result = collapsableAfter(node.children, -1)\n    }\n\n    if (typeof result === 'boolean') {\n      return result\n    }\n  }\n\n  return after\n}\n\n/**\n * Infer two types of boundaries:\n *\n * 1. `true` — boundary for which whitespace around it does not contribute\n *    anything\n * 2. `false` — boundary for which whitespace around it *does* contribute\n *\n * No result (`undefined`) is returned if it is unknown.\n *\n * @param {Node} node\n * @returns {boolean|undefined}\n */\nfunction inferBoundary(node) {\n  if (node.type === 'element') {\n    if (content(node)) {\n      return false\n    }\n\n    if (blocklike(node)) {\n      return true\n    }\n\n    // Unknown: either depends on siblings if embedded or metadata, or on\n    // children.\n  } else if (node.type === 'text') {\n    if (!whitespace(node)) {\n      return false\n    }\n  } else if (!ignorableNode(node)) {\n    return false\n  }\n}\n\n/**\n * Infer whether a node is skippable.\n *\n * @param {Node} node\n * @returns {boolean}\n */\nfunction content(node) {\n  return embedded(node) || isElement(node, contents)\n}\n\n/**\n * See: <https://html.spec.whatwg.org/#the-css-user-agent-style-sheet-and-presentational-hints>\n *\n * @param {Element} node\n * @returns {boolean}\n */\nfunction blocklike(node) {\n  return isElement(node, blocks)\n}\n\n/**\n * @param {Element|Root} node\n * @returns {boolean}\n */\nfunction skippable(node) {\n  return (\n    Boolean(\n      'properties' in node && node.properties && node.properties.hidden\n    ) ||\n    ignorableNode(node) ||\n    isElement(node, skippables)\n  )\n}\n\n/**\n * @param {string} character\n * @returns {boolean}\n */\nfunction removable(character) {\n  return character === ' ' || character === '\\n'\n}\n\n/**\n * @param {string} value\n * @returns {string}\n */\nfunction replaceNewlines(value) {\n  const match = /\\r?\\n|\\r/.exec(value)\n  return match ? match[0] : ' '\n}\n\n/**\n * @returns {string}\n */\nfunction replaceWhitespace() {\n  return ' '\n}\n\n/**\n * @param {(value: string) => string} replace\n */\nfunction collapseFactory(replace) {\n  return collapse\n\n  /**\n   * @param {string} value\n   * @returns {string}\n   */\n  function collapse(value) {\n    return String(value).replace(/[\\t\\n\\v\\f\\r ]+/g, replace)\n  }\n}\n\n/**\n * We don’t need to support void elements here (so `nobr wbr` -> `normal` is\n * ignored).\n *\n * @param {Root|Element} node\n * @param {Context} context\n * @returns {Whitespace}\n */\nfunction inferWhiteSpace(node, context) {\n  if ('tagName' in node && node.properties) {\n    switch (node.tagName) {\n      // Whitespace in script/style, while not displayed by CSS as significant,\n      // could have some meaning in JS/CSS, so we can’t touch them.\n      case 'listing':\n      case 'plaintext':\n      case 'script':\n      case 'style':\n      case 'xmp':\n        return 'pre'\n      case 'nobr':\n        return 'nowrap'\n      case 'pre':\n        return node.properties.wrap ? 'pre-wrap' : 'pre'\n      case 'td':\n      case 'th':\n        return node.properties.noWrap ? 'nowrap' : context.whitespace\n      case 'textarea':\n        return 'pre-wrap'\n      default:\n    }\n  }\n\n  return context.whitespace\n}\n","/**\n * @param {unknown} thing\n * @returns {boolean}\n */\nexport function whitespace(thing) {\n  /** @type {string} */\n  var value =\n    // @ts-ignore looks like a node.\n    thing && typeof thing === 'object' && thing.type === 'text'\n      ? // @ts-ignore looks like a text.\n        thing.value || ''\n      : thing\n\n  // HTML whitespace expression.\n  // See <https://html.spec.whatwg.org/#space-character>.\n  return typeof value === 'string' && value.replace(/[ \\t\\n\\f\\r]/g, '') === ''\n}\n","/**\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('unist-util-is').AssertPredicate<PhrasingContent>} AssertPredicatePhrasing\n */\n\nimport {convert} from 'unist-util-is'\n\n/**\n * @type {AssertPredicatePhrasing}\n */\n// @ts-ignore hush, it’s fine!\nexport const phrasing = convert([\n  'break',\n  'delete',\n  'emphasis',\n  'footnote',\n  'footnoteReference',\n  'image',\n  'imageReference',\n  'inlineCode',\n  'link',\n  'linkReference',\n  'strong',\n  'text'\n])\n","/**\n * @typedef {import('../types.js').H} H\n * @typedef {import('../types.js').MdastNode} MdastNode\n * @typedef {import('../types.js').MdastPhrasingContent} MdastPhrasingContent\n */\n\nimport extend from 'extend'\nimport {phrasing} from 'mdast-util-phrasing'\n\n/**\n * @param {Array.<MdastNode>} nodes\n */\nexport function wrap(nodes) {\n  return runs(nodes, onphrasing)\n\n  /**\n   * @param {Array.<MdastPhrasingContent>} nodes\n   * @returns {MdastNode|Array.<MdastNode>}\n   */\n  function onphrasing(nodes) {\n    const head = nodes[0]\n\n    if (\n      nodes.length === 1 &&\n      head.type === 'text' &&\n      (head.value === ' ' || head.value === '\\n')\n    ) {\n      return []\n    }\n\n    return {type: 'paragraph', children: nodes}\n  }\n}\n\n/**\n * Check if there are non-phrasing mdast nodes returned.\n * This is needed if a fragment is given, which could just be a sentence, and\n * doesn’t need a wrapper paragraph.\n *\n * @param {Array.<MdastNode>} nodes\n * @returns {boolean}\n */\nexport function wrapNeeded(nodes) {\n  let index = -1\n  /** @type {MdastNode} */\n  let node\n\n  while (++index < nodes.length) {\n    node = nodes[index]\n\n    if (!phrasing(node) || ('children' in node && wrapNeeded(node.children))) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Wrap all runs of mdast phrasing content in `paragraph` nodes.\n *\n * @param {Array.<MdastNode>} nodes\n * @param {(nodes: Array.<MdastPhrasingContent>) => MdastNode|Array.<MdastNode>} onphrasing\n * @param {(node: MdastNode) => MdastNode} [onnonphrasing]\n */\nfunction runs(nodes, onphrasing, onnonphrasing) {\n  const nonphrasing = onnonphrasing || identity\n  /** @type {Array.<MdastNode>} */\n  const flattened = flatten(nodes)\n  /** @type {Array.<MdastNode>} */\n  let result = []\n  let index = -1\n  /** @type {Array.<MdastPhrasingContent>|undefined} */\n  let queue\n  /** @type {MdastNode} */\n  let node\n\n  while (++index < flattened.length) {\n    node = flattened[index]\n\n    if (phrasing(node)) {\n      if (!queue) queue = []\n      queue.push(node)\n    } else {\n      if (queue) {\n        result = result.concat(onphrasing(queue))\n        queue = undefined\n      }\n\n      result = result.concat(nonphrasing(node))\n    }\n  }\n\n  if (queue) {\n    result = result.concat(onphrasing(queue))\n  }\n\n  return result\n}\n\n/**\n * Flatten a list of nodes.\n *\n * @param {Array.<MdastNode>} nodes\n * @returns {Array.<MdastNode>}\n */\nfunction flatten(nodes) {\n  /** @type {Array.<MdastNode>} */\n  let flattened = []\n  let index = -1\n  /** @type {MdastNode} */\n  let node\n\n  while (++index < nodes.length) {\n    node = nodes[index]\n\n    // Straddling: some elements are *weird*.\n    // Namely: `map`, `ins`, `del`, and `a`, as they are hybrid elements.\n    // See: <https://html.spec.whatwg.org/#paragraphs>.\n    // Paragraphs are the weirdest of them all.\n    // See the straddling fixture for more info!\n    // `ins` is ignored in mdast, so we don’t need to worry about that.\n    // `map` maps to its content, so we don’t need to worry about that either.\n    // `del` maps to `delete` and `a` to `link`, so we do handle those.\n    // What we’ll do is split `node` over each of its children.\n    if (\n      (node.type === 'delete' || node.type === 'link') &&\n      wrapNeeded(node.children)\n    ) {\n      flattened = flattened.concat(split(node))\n    } else {\n      flattened.push(node)\n    }\n  }\n\n  return flattened\n}\n\n/**\n * @param {MdastNode} node\n * @returns {Array.<MdastNode>}\n */\nfunction split(node) {\n  // @ts-expect-error Assume parent.\n  return runs(node.children, onphrasing, onnonphrasing)\n\n  /**\n   * Use `child`, add `parent` as its first child, put the original children\n   * into `parent`.\n   * If `child` is not a parent, `parent` will not be added.\n   *\n   * @param {MdastNode} child\n   * @returns {MdastNode}\n   */\n  function onnonphrasing(child) {\n    if ('children' in child && 'children' in node) {\n      const {children, ...rest} = node\n      return {\n        ...child,\n        // @ts-expect-error: assume matching parent & child.\n        children: [{...extend(true, {}, rest), children: child.children}]\n      }\n    }\n\n    return {...child}\n  }\n\n  /**\n   * Use `parent`, put the phrasing run inside it.\n   *\n   * @param {Array.<MdastPhrasingContent>} nodes\n   * @returns {MdastNode}\n   */\n  function onphrasing(nodes) {\n    // @ts-expect-error: assume parent.\n    const {children, ...rest} = node\n    // @ts-expect-error: assume matching parent & child.\n    return {...extend(true, {}, rest), children: nodes}\n  }\n}\n\n/**\n * @template {unknown} T\n * @param {T} n\n * @returns {T}\n */\nfunction identity(n) {\n  return n\n}\n","/**\n * @typedef {import('../types.js').H} H\n * @typedef {import('../types.js').Node} Node\n * @typedef {import('../types.js').MdastNode} MdastNode\n */\n\nimport {all} from '../all.js'\nimport {wrap} from './wrap.js'\n\n/**\n * @param {H} h\n * @param {Node} node\n * @returns {Array.<MdastNode>}\n */\nexport function wrapChildren(h, node) {\n  return wrap(all(h, node))\n}\n","/**\n * @typedef {import('../types.js').H} H\n */\n\n/**\n * @param {H} h\n * @param {string|null|undefined} url\n * @returns {string}\n */\nexport function resolve(h, url) {\n  if (url === null || url === undefined) {\n    return ''\n  }\n\n  if (h.frozenBaseUrl) {\n    return String(new URL(url, h.frozenBaseUrl))\n  }\n\n  return url\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n *\n * @typedef {import('unist-util-is').Type} Type\n * @typedef {import('unist-util-is').Props} Props\n * @typedef {import('unist-util-is').TestFunctionAnything} TestFunctionAnything\n */\n\nimport {convert} from 'unist-util-is'\n\nexport var findAfter =\n  /**\n   * @type {(\n   *  (<T extends Node>(node: Parent, index: Node|number, test: T['type']|Partial<T>|import('unist-util-is').TestFunctionPredicate<T>|Array.<T['type']|Partial<T>|import('unist-util-is').TestFunctionPredicate<T>>) => T|null) &\n   *  ((node: Parent, index: Node|number, test?: null|undefined|Type|Props|TestFunctionAnything|Array<Type|Props|TestFunctionAnything>) => Node|null)\n   * )}\n   */\n  (\n    /**\n     * @param {Parent} parent Parent node\n     * @param {Node|number} index Child of `parent`, or it’s index\n     * @param {null|undefined|Type|Props|TestFunctionAnything|Array<Type|Props|TestFunctionAnything>} [test] is-compatible test (such as a type)\n     * @returns {Node|null}\n     */\n    function (parent, index, test) {\n      var is = convert(test)\n\n      if (!parent || !parent.type || !parent.children) {\n        throw new Error('Expected parent node')\n      }\n\n      if (typeof index === 'number') {\n        if (index < 0 || index === Number.POSITIVE_INFINITY) {\n          throw new Error('Expected positive finite number as index')\n        }\n      } else {\n        index = parent.children.indexOf(index)\n\n        if (index < 0) {\n          throw new Error('Expected child node or index')\n        }\n      }\n\n      while (++index < parent.children.length) {\n        if (is(parent.children[index], index, parent)) {\n          return parent.children[index]\n        }\n      }\n\n      return null\n    }\n  )\n","/**\n * @typedef {import('hast-util-is-element').TestFunctionAnything} TestFunctionAnything\n * @typedef {import('hast').Parent['children'][number]} HastChild\n * @typedef {import('hast').Text} HastText\n * @typedef {import('hast').Comment} HastComment\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').Properties} HastProperties\n * @typedef {HastChild|HastRoot} HastNode\n * @typedef {HastRoot|HastElement} HastParent\n *\n * @typedef {'normal'|'pre'|'nowrap'|'pre-wrap'} Whitespace\n * @typedef {boolean} BreakValue\n * @typedef {1|2} BreakNumber\n * @typedef {'\\n'} BreakForce\n * @typedef {BreakValue|BreakNumber|undefined} BreakBefore\n * @typedef {BreakValue|BreakNumber|BreakForce|undefined} BreakAfter\n *\n * @typedef CollectionOptions\n * @property {Whitespace} whitespace\n * @property {BreakBefore} breakBefore\n * @property {BreakAfter} breakAfter\n *\n * @typedef Options\n *   Configuration.\n * @property {Whitespace} [whitespace='normal']\n *   Initial CSS whitespace setting to use.\n */\n\nimport {convertElement} from 'hast-util-is-element'\nimport {findAfter} from 'unist-util-find-after'\n\nconst searchLineFeeds = /\\n/g\nconst searchTabOrSpaces = /[\\t ]+/g\n\nconst br = convertElement('br')\nconst p = convertElement('p')\nconst cell = convertElement(['th', 'td'])\nconst row = convertElement('tr')\n\n// Note that we don’t need to include void elements here as they don’t have text.\n// See: <https://github.com/wooorm/html-void-elements>\nconst notRendered = convertElement([\n  // List from: <https://html.spec.whatwg.org/#hidden-elements>\n  'datalist',\n  'head',\n  'noembed',\n  'noframes',\n  'noscript', // Act as if we support scripting.\n  'rp',\n  'script',\n  'style',\n  'template',\n  'title',\n  // Hidden attribute.\n  hidden,\n  // From: <https://html.spec.whatwg.org/#flow-content-3>\n  closedDialog\n])\n\n// See: <https://html.spec.whatwg.org/#the-css-user-agent-style-sheet-and-presentational-hints>\nconst blockOrCaption = convertElement([\n  'address', // Flow content\n  'article', // Sections and headings\n  'aside', // Sections and headings\n  'blockquote', // Flow content\n  'body', // Page\n  'caption', // `table-caption`\n  'center', // Flow content (legacy)\n  'dd', // Lists\n  'dialog', // Flow content\n  'dir', // Lists (legacy)\n  'dl', // Lists\n  'dt', // Lists\n  'div', // Flow content\n  'figure', // Flow content\n  'figcaption', // Flow content\n  'footer', // Flow content\n  'form,', // Flow content\n  'h1', // Sections and headings\n  'h2', // Sections and headings\n  'h3', // Sections and headings\n  'h4', // Sections and headings\n  'h5', // Sections and headings\n  'h6', // Sections and headings\n  'header', // Flow content\n  'hgroup', // Sections and headings\n  'hr', // Flow content\n  'html', // Page\n  'legend', // Flow content\n  'listing', // Flow content (legacy)\n  'main', // Flow content\n  'menu', // Lists\n  'nav', // Sections and headings\n  'ol', // Lists\n  'p', // Flow content\n  'plaintext', // Flow content (legacy)\n  'pre', // Flow content\n  'section', // Sections and headings\n  'ul', // Lists\n  'xmp' // Flow content (legacy)\n])\n\n/**\n * Implementation of the `innerText` getter:\n * <https://html.spec.whatwg.org/#the-innertext-idl-attribute>\n * Note that we act as if `node` is being rendered, and as if we’re a\n * CSS-supporting user agent.\n *\n * @param {HastNode} node\n * @param {Options} [options={}]\n * @returns {string}\n */\nexport function toText(node, options = {}) {\n  /** @type {Array.<HastChild>} */\n  // @ts-ignore looks like a parent.\n  const children = node.children || []\n  const block = blockOrCaption(node)\n  const whitespace = inferWhitespace(node, {\n    whitespace: options.whitespace || 'normal',\n    breakBefore: false,\n    breakAfter: false\n  })\n  let index = -1\n  /** @type {Array.<string|BreakNumber>} */\n  let results\n  /** @type {string|BreakNumber} */\n  let value\n  /** @type {number|undefined} */\n  let count\n\n  // Treat `text` and `comment` as having normal white-space.\n  // This deviates from the spec as in the DOM the node’s `.data` has to be\n  // returned.\n  // If you want that behavior use `hast-util-to-string`.\n  // All other nodes are later handled as if they are `element`s (so the\n  // algorithm also works on a `root`).\n  // Nodes without children are treated as a void element, so `doctype` is thus\n  // ignored.\n  if (node.type === 'text' || node.type === 'comment') {\n    return collectText(node, {whitespace, breakBefore: true, breakAfter: true})\n  }\n\n  // 1.  If this element is not being rendered, or if the user agent is a\n  //     non-CSS user agent, then return the same value as the textContent IDL\n  //     attribute on this element.\n  //\n  //     Note: we’re not supporting stylesheets so we’re acting as if the node\n  //     is rendered.\n  //\n  //     If you want that behavior use `hast-util-to-string`.\n  //     Important: we’ll have to account for this later though.\n\n  // 2.  Let results be a new empty list.\n  results = []\n\n  // 3.  For each child node node of this element:\n  while (++index < children.length) {\n    // 3.1. Let current be the list resulting in running the inner text\n    //      collection steps with node.\n    //      Each item in results will either be a JavaScript string or a\n    //      positive integer (a required line break count).\n    // 3.2. For each item item in current, append item to results.\n    results = results.concat(\n      // @ts-ignore Looks like a parent.\n      innerTextCollection(children[index], node, {\n        whitespace,\n        breakBefore: index ? null : block,\n        breakAfter:\n          index < children.length - 1 ? br(children[index + 1]) : block\n      })\n    )\n  }\n\n  // 4.  Remove any items from results that are the empty string.\n  // 5.  Remove any runs of consecutive required line break count items at the\n  //     start or end of results.\n  // 6.  Replace each remaining run of consecutive required line break count\n  //     items with a string consisting of as many U+000A LINE FEED (LF)\n  //     characters as the maximum of the values in the required line break\n  //     count items.\n  index = -1\n  /** @type {Array.<string>} */\n  const result = []\n\n  while (++index < results.length) {\n    value = results[index]\n\n    if (typeof value === 'number') {\n      if (count !== undefined && value > count) count = value\n    } else if (value) {\n      if (count) result.push('\\n'.repeat(count))\n      count = 0\n      result.push(value)\n    }\n  }\n\n  // 7.  Return the concatenation of the string items in results.\n  return result.join('')\n}\n\n/**\n * <https://html.spec.whatwg.org/#inner-text-collection-steps>\n *\n * @param {HastNode} node\n * @param {HastParent} parent\n * @param {CollectionOptions} options\n * @returns {Array.<string|BreakNumber>}\n */\nfunction innerTextCollection(node, parent, options) {\n  if (node.type === 'element') {\n    return collectElement(node, parent, options)\n  }\n\n  if (node.type === 'text') {\n    return [\n      options.whitespace === 'normal'\n        ? collectText(node, options)\n        : collectPreText(node)\n    ]\n  }\n\n  return []\n}\n\n/**\n * Collect an element.\n *\n * @param {HastElement} node\n * @param {HastParent} parent\n * @param {CollectionOptions} options\n */\nfunction collectElement(node, parent, options) {\n  // First we infer the `white-space` property.\n  const whitespace = inferWhitespace(node, options)\n  const children = node.children || []\n  let index = -1\n  /** @type {Array.<string|BreakNumber>} */\n  let items = []\n  /** @type {BreakNumber|undefined} */\n  let prefix\n  /** @type {BreakNumber|BreakForce|undefined} */\n  let suffix\n\n  // We’re ignoring point 3, and exiting without any content here, because we\n  // deviated from the spec in `toText` at step 3.\n  if (notRendered(node)) {\n    return items\n  }\n\n  // Note: we first detect if there is going to be a break before or after the\n  // contents, as that changes the white-space handling.\n\n  // 2.  If node’s computed value of `visibility` is not `visible`, then return\n  //     items.\n  //\n  //     Note: Ignored, as everything is visible by default user agent styles.\n\n  // 3.  If node is not being rendered, then return items. [...]\n  //\n  //     Note: We already did this above.\n\n  // See `collectText` for step 4.\n\n  // 5.  If node is a `<br>` element, then append a string containing a single\n  //     U+000A LINE FEED (LF) character to items.\n  if (br(node)) {\n    suffix = '\\n'\n  }\n\n  // 7.  If node’s computed value of `display` is `table-row`, and node’s CSS\n  //     box is not the last `table-row` box of the nearest ancestor `table`\n  //     box, then append a string containing a single U+000A LINE FEED (LF)\n  //     character to items.\n  //\n  //     See: <https://html.spec.whatwg.org/#tables-2>\n  //     Note: needs further investigation as this does not account for implicit\n  //     rows.\n  else if (row(node) && findAfter(parent, node, row)) {\n    suffix = '\\n'\n  }\n\n  // 8.  If node is a `<p>` element, then append 2 (a required line break count)\n  //     at the beginning and end of items.\n  else if (p(node)) {\n    prefix = 2\n    suffix = 2\n  }\n\n  // 9.  If node’s used value of `display` is block-level or `table-caption`,\n  //     then append 1 (a required line break count) at the beginning and end of\n  //     items.\n  else if (blockOrCaption(node)) {\n    prefix = 1\n    suffix = 1\n  }\n\n  // 1.  Let items be the result of running the inner text collection steps with\n  //     each child node of node in tree order, and then concatenating the\n  //     results to a single list.\n  while (++index < children.length) {\n    items = items.concat(\n      innerTextCollection(children[index], node, {\n        whitespace,\n        breakBefore: index ? undefined : prefix,\n        breakAfter:\n          index < children.length - 1 ? br(children[index + 1]) : suffix\n      })\n    )\n  }\n\n  // 6.  If node’s computed value of `display` is `table-cell`, and node’s CSS\n  //     box is not the last `table-cell` box of its enclosing `table-row` box,\n  //     then append a string containing a single U+0009 CHARACTER TABULATION\n  //     (tab) character to items.\n  //\n  //     See: <https://html.spec.whatwg.org/#tables-2>\n  if (cell(node) && findAfter(parent, node, cell)) {\n    items.push('\\t')\n  }\n\n  // Add the pre- and suffix.\n  if (prefix) items.unshift(prefix)\n  if (suffix) items.push(suffix)\n\n  return items\n}\n\n/**\n * 4.  If node is a Text node, then for each CSS text box produced by node,\n *     in content order, compute the text of the box after application of the\n *     CSS `white-space` processing rules and `text-transform` rules, set\n *     items to the list of the resulting strings, and return items.\n *     The CSS `white-space` processing rules are slightly modified:\n *     collapsible spaces at the end of lines are always collapsed, but they\n *     are only removed if the line is the last line of the block, or it ends\n *     with a br element.\n *     Soft hyphens should be preserved.\n *\n *     Note: See `collectText` and `collectPreText`.\n *     Note: we don’t deal with `text-transform`, no element has that by\n *     default.\n *\n * See: <https://drafts.csswg.org/css-text/#white-space-phase-1>\n *\n * @param {HastText|HastComment} node\n * @param {CollectionOptions} options\n * @returns {string}\n */\nfunction collectText(node, options) {\n  const value = String(node.value)\n  /** @type {Array.<string>} */\n  const lines = []\n  /** @type {Array.<string>} */\n  const result = []\n  let start = 0\n  let index = -1\n  /** @type {RegExpMatchArray|null} */\n  let match\n  /** @type {number} */\n  let end\n  /** @type {string|undefined} */\n  let join\n\n  while (start < value.length) {\n    searchLineFeeds.lastIndex = start\n    match = searchLineFeeds.exec(value)\n    // @ts-expect-error: `index` is set.\n    end = match ? match.index : value.length\n\n    lines.push(\n      // Any sequence of collapsible spaces and tabs immediately preceding or\n      // following a segment break is removed.\n      trimAndCollapseSpacesAndTabs(\n        // [...] ignoring bidi formatting characters (characters with the\n        // Bidi_Control property [UAX9]: ALM, LTR, RTL, LRE-RLO, LRI-PDI) as if\n        // they were not there.\n        value\n          .slice(start, end)\n          .replace(/[\\u061C\\u200E\\u200F\\u202A-\\u202E\\u2066-\\u2069]/g, ''),\n        options.breakBefore,\n        options.breakAfter\n      )\n    )\n\n    start = end + 1\n  }\n\n  // Collapsible segment breaks are transformed for rendering according to the\n  // segment break transformation rules.\n  // So here we jump to 4.1.2 of [CSSTEXT]:\n  // Any collapsible segment break immediately following another collapsible\n  // segment break is removed\n  while (++index < lines.length) {\n    // *   If the character immediately before or immediately after the segment\n    //     break is the zero-width space character (U+200B), then the break is\n    //     removed, leaving behind the zero-width space.\n    if (\n      lines[index].charCodeAt(lines[index].length - 1) === 0x200b /* ZWSP */ ||\n      (index < lines.length - 1 &&\n        lines[index + 1].charCodeAt(0) === 0x200b) /* ZWSP */\n    ) {\n      result.push(lines[index])\n      join = ''\n    }\n\n    // *   Otherwise, if the East Asian Width property [UAX11] of both the\n    //     character before and after the segment break is Fullwidth, Wide, or\n    //     Halfwidth (not Ambiguous), and neither side is Hangul, then the\n    //     segment break is removed.\n    //\n    //     Note: ignored.\n    // *   Otherwise, if the writing system of the segment break is Chinese,\n    //     Japanese, or Yi, and the character before or after the segment break\n    //     is punctuation or a symbol (Unicode general category P* or S*) and\n    //     has an East Asian Width property of Ambiguous, and the character on\n    //     the other side of the segment break is Fullwidth, Wide, or Halfwidth,\n    //     and not Hangul, then the segment break is removed.\n    //\n    //     Note: ignored.\n\n    // *   Otherwise, the segment break is converted to a space (U+0020).\n    else if (lines[index]) {\n      if (join) result.push(join)\n      result.push(lines[index])\n      join = ' '\n    }\n  }\n\n  return result.join('')\n}\n\n/**\n * @param {HastText|HastComment} node\n * @returns {string}\n */\nfunction collectPreText(node) {\n  return String(node.value)\n}\n\n/**\n * 3.  Every collapsible tab is converted to a collapsible space (U+0020).\n * 4.  Any collapsible space immediately following another collapsible\n *     space—even one outside the boundary of the inline containing that\n *     space, provided both spaces are within the same inline formatting\n *     context—is collapsed to have zero advance width. (It is invisible,\n *     but retains its soft wrap opportunity, if any.)\n *\n * @param {string} value\n * @param {BreakBefore} breakBefore\n * @param {BreakAfter} breakAfter\n * @returns {string}\n */\nfunction trimAndCollapseSpacesAndTabs(value, breakBefore, breakAfter) {\n  /** @type {Array.<string>} */\n  const result = []\n  let start = 0\n  /** @type {RegExpMatchArray|null} */\n  let match\n  /** @type {number} */\n  let end\n\n  while (start < value.length) {\n    searchTabOrSpaces.lastIndex = start\n    match = searchTabOrSpaces.exec(value)\n    // @ts-expect-error: `index` is set.\n    end = match ? match.index : value.length\n\n    // If we’re not directly after a segment break, but there was white space,\n    // add an empty value that will be turned into a space.\n    if (!start && !end && match && !breakBefore) {\n      result.push('')\n    }\n\n    if (start !== end) {\n      result.push(value.slice(start, end))\n    }\n\n    start = match ? end + match[0].length : end\n  }\n\n  // If we reached the end, there was trailing white space, and there’s no\n  // segment break after this node, add an empty value that will be turned\n  // into a space.\n  // @ts-expect-error: `end` is defined.\n  if (start !== end && !breakAfter) {\n    result.push('')\n  }\n\n  return result.join(' ')\n}\n\n/**\n * We don’t support void elements here (so `nobr wbr` -> `normal` is ignored).\n *\n * @param {HastNode} node\n * @param {CollectionOptions} options\n * @returns {Whitespace}\n */\nfunction inferWhitespace(node, options) {\n  /** @type {HastProperties} */\n  let props\n\n  if (node.type === 'element') {\n    props = node.properties || {}\n    switch (node.tagName) {\n      case 'listing':\n      case 'plaintext':\n      case 'xmp':\n        return 'pre'\n      case 'nobr':\n        return 'nowrap'\n      case 'pre':\n        return props.wrap ? 'pre-wrap' : 'pre'\n      case 'td':\n      case 'th':\n        return props.noWrap ? 'nowrap' : options.whitespace\n      case 'textarea':\n        return 'pre-wrap'\n      default:\n    }\n  }\n\n  return options.whitespace\n}\n\n/** @type {TestFunctionAnything} */\nfunction hidden(node) {\n  return Boolean((node.properties || {}).hidden)\n}\n\n/** @type {TestFunctionAnything} */\nfunction closedDialog(node) {\n  return node.tagName === 'dialog' && !(node.properties || {}).open\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n * @typedef {import('../types.js').ElementChild} ElementChild\n */\n\nimport {convertElement} from 'hast-util-is-element'\nimport {toText} from 'hast-util-to-text'\nimport {trimTrailingLines} from 'trim-trailing-lines'\nimport {wrapText} from '../util/wrap-text.js'\n\nconst prefix = 'language-'\n\nconst pre = convertElement('pre')\nconst isCode = convertElement('code')\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function code(h, node) {\n  const children = node.children\n  let index = -1\n  /** @type {Array.<string|number>|undefined} */\n  let classList\n  /** @type {string|undefined} */\n  let lang\n\n  if (pre(node)) {\n    while (++index < children.length) {\n      const child = children[index]\n\n      if (\n        isCode(child) &&\n        child.properties &&\n        child.properties.className &&\n        Array.isArray(child.properties.className)\n      ) {\n        classList = child.properties.className\n        break\n      }\n    }\n  }\n\n  if (classList) {\n    index = -1\n\n    while (++index < classList.length) {\n      if (String(classList[index]).slice(0, prefix.length) === prefix) {\n        lang = String(classList[index]).slice(prefix.length)\n        break\n      }\n    }\n  }\n\n  return h(\n    node,\n    'code',\n    {lang: lang || null, meta: null},\n    trimTrailingLines(wrapText(h, toText(node)))\n  )\n}\n","/**\n * Remove final newline characters from `value`.\n *\n * @param {unknown} value Value with trailing line feeds, coerced to string.\n * @return {string} Value without trailing newlines.\n */\nexport function trimTrailingLines(value) {\n  return String(value).replace(/\\n+$/, '')\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n */\n\nimport {all} from '../all.js'\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function del(h, node) {\n  return h(node, 'delete', all(h, node))\n}\n","/**\n * @typedef {import('../types.js').MdastListContent} MdastListContent\n */\n\n/**\n * @param {Array.<MdastListContent>} children\n * @returns {boolean}\n */\nexport function listItemsSpread(children) {\n  let index = -1\n\n  if (children.length > 1) {\n    while (++index < children.length) {\n      if (children[index].spread) {\n        return true\n      }\n    }\n  }\n\n  return false\n}\n","/**\n * @typedef {import('../types.js').H} H\n * @typedef {import('../types.js').Element} Element\n * @typedef {import('../types.js').Child} Child\n * @typedef {import('../types.js').MdastListContent} MdastListContent\n */\n\nimport {all} from '../all.js'\n\n/**\n * @param {H} h\n * @param {Child} node\n * @returns {Array.<MdastListContent>}\n */\nexport function wrapListItems(h, node) {\n  const children = all(h, node)\n  let index = -1\n\n  while (++index < children.length) {\n    const child = children[index]\n    if (child.type !== 'listItem') {\n      children[index] = {\n        type: 'listItem',\n        spread: false,\n        checked: null,\n        // @ts-expect-error Assume `children[index]` is block content.\n        children: [child]\n      }\n    }\n  }\n\n  // @ts-expect-error Assume all `listItem`s\n  return children\n}\n","/**\n * @typedef {import('../types.js').H} H\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n * @typedef {import('../types.js').ElementChild} ElementChild\n * @typedef {import('../types.js').MdastNode} MdastNode\n * @typedef {import('../types.js').MdastListContent} MdastListContent\n * @typedef {import('../types.js').MdastBlockContent} MdastBlockContent\n * @typedef {import('../types.js').MdastDefinitionContent} MdastDefinitionContent\n *\n * @typedef Group\n * @property {Array.<Element>} titles\n * @property {Array.<ElementChild>} definitions\n */\n\nimport {convertElement} from 'hast-util-is-element'\nimport {listItemsSpread} from '../util/list-items-spread.js'\nimport {wrapListItems} from '../util/wrap-list-items.js'\n\nconst div = convertElement('div')\nconst dt = convertElement('dt')\nconst dd = convertElement('dd')\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function dl(h, node) {\n  const children = node.children\n  let index = -1\n  /** @type {Array.<ElementChild>} */\n  let clean = []\n  /** @type {Array.<Group>} */\n  const groups = []\n  /** @type {Group} */\n  let group = {titles: [], definitions: []}\n  /** @type {ElementChild} */\n  let child\n  /** @type {Array.<MdastBlockContent|MdastDefinitionContent>} */\n  let result\n\n  // Unwrap `<div>`s\n  while (++index < children.length) {\n    child = children[index]\n    clean = clean.concat(div(child) ? child.children : child)\n  }\n\n  index = -1\n\n  // Group titles and definitions.\n  while (++index < clean.length) {\n    child = clean[index]\n\n    if (dt(child)) {\n      if (dd(clean[index - 1])) {\n        groups.push(group)\n        group = {titles: [], definitions: []}\n      }\n\n      group.titles.push(child)\n    } else {\n      group.definitions.push(child)\n    }\n  }\n\n  groups.push(group)\n\n  // Create items.\n  index = -1\n  /** @type {Array.<MdastListContent>} */\n  const content = []\n\n  while (++index < groups.length) {\n    result = [\n      ...handle(h, groups[index].titles),\n      ...handle(h, groups[index].definitions)\n    ]\n\n    if (result.length > 0) {\n      content.push({\n        type: 'listItem',\n        spread: result.length > 1,\n        checked: null,\n        children: result\n      })\n    }\n  }\n\n  // Create a list if there are items.\n  if (content.length > 0) {\n    return h(\n      node,\n      'list',\n      {ordered: false, start: null, spread: listItemsSpread(content)},\n      content\n    )\n  }\n}\n\n/**\n * @param {H} h\n * @param {Array.<ElementChild>} children\n * @returns {Array.<MdastBlockContent|MdastDefinitionContent>}\n */\nfunction handle(h, children) {\n  const nodes = wrapListItems(h, {type: 'element', tagName: 'x', children})\n\n  if (nodes.length === 0) {\n    return []\n  }\n\n  if (nodes.length === 1) {\n    return nodes[0].children\n  }\n\n  return [\n    {\n      type: 'list',\n      ordered: false,\n      start: null,\n      spread: listItemsSpread(nodes),\n      children: nodes\n    }\n  ]\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n */\n\nimport {all} from '../all.js'\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function em(h, node) {\n  return h(node, 'emphasis', all(h, node))\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n * @typedef {import('../types.js').MdastNode} MdastNode\n */\n\nimport {all} from '../all.js'\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function heading(h, node) {\n  // `else` shouldn’t happen, of course…\n  /* c8 ignore next */\n  const depth = Number(node.tagName.charAt(1)) || 1\n  const wrap = h.wrapText\n\n  h.wrapText = false\n  const result = h(node, 'heading', {depth}, all(h, node))\n  h.wrapText = wrap\n\n  return result\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n * @typedef {import('../types.js').Properties} Properties\n */\n\nimport {resolve} from '../util/resolve.js'\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function img(h, node) {\n  /** @type {Properties} */\n  // @ts-expect-error: `props` are defined.\n  const props = node.properties\n  return h(node, 'image', {\n    url: resolve(h, String(props.src || '') || null),\n    title: props.title || null,\n    alt: props.alt || ''\n  })\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n */\n\nimport {toText} from 'hast-util-to-text'\nimport {wrapText} from '../util/wrap-text.js'\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function inlineCode(h, node) {\n  return h(node, 'inlineCode', wrapText(h, toText(node)))\n}\n","var own = {}.hasOwnProperty\n\n/**\n * Check if `node` has a set `name` property.\n *\n * @param {unknown} node\n * @param {string} name\n * @returns {boolean}\n */\nexport function hasProperty(node, name) {\n  /** @type {unknown} */\n  var value =\n    name &&\n    node &&\n    typeof node === 'object' &&\n    // @ts-ignore Looks like a node.\n    node.type === 'element' &&\n    // @ts-ignore Looks like an element.\n    node.properties &&\n    // @ts-ignore Looks like an element.\n    own.call(node.properties, name) &&\n    // @ts-ignore Looks like an element.\n    node.properties[name]\n\n  return value !== null && value !== undefined && value !== false\n}\n","/**\n * @typedef {import('../types.js').H} H\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').Element} Element\n * @typedef {import('../types.js').Child} Child\n * @typedef {import('../types.js').Properties} Properties\n */\n\nimport {hasProperty} from 'hast-util-has-property'\nimport {convertElement} from 'hast-util-is-element'\nimport {toText} from 'hast-util-to-text'\nimport {wrapText} from './wrap-text.js'\n\nconst option = convertElement('option')\n\n/**\n * @param {H} h\n * @param {Element} node\n * @param {Properties} [properties]\n * @returns {Array.<[string, string|null]>}\n */\nexport function findSelectedOptions(h, node, properties) {\n  /** @type {Properties} */\n  // @ts-expect-error: `props` exist.\n  const props = properties || node.properties\n  let options = findOptions(node)\n  const size =\n    Math.min(Number.parseInt(String(props.size), 10), 0) ||\n    (props.multiple ? 4 : 1)\n  let index = -1\n  /** @type {Array.<Element>} */\n  const selectedOptions = []\n  /** @type {Array.<[string, string|null]>} */\n  const values = []\n\n  while (++index < options.length) {\n    if (hasProperty(options[index], 'selected')) {\n      selectedOptions.push(options[index])\n    }\n  }\n\n  const list = selectedOptions.length > 0 ? selectedOptions : options\n  options = list.slice(0, size)\n  index = -1\n\n  while (++index < options.length) {\n    const option = options[index]\n    const content = wrapText(h, toText(option))\n    /** @type {Properties} */\n    // @ts-expect-error: `props` exist.\n    const props = option.properties\n    const label = content || String(props.label || '')\n    const value = String(props.value || '') || content\n    values.push([value, label === value ? null : label])\n  }\n\n  return values\n}\n\n/**\n * @param {Parent} node\n */\nfunction findOptions(node) {\n  const children = node.children\n  let index = -1\n  /** @type {Array.<Element>} */\n  let results = []\n  /** @type {Child} */\n  let child\n\n  while (++index < children.length) {\n    child = children[index]\n\n    // @ts-expect-error Looks like a parent.\n    if (Array.isArray(child.children)) {\n      // @ts-expect-error Looks like a parent.\n      results = results.concat(findOptions(child))\n    }\n\n    if (option(child) && !hasProperty(child, 'disabled')) {\n      results.push(child)\n    }\n  }\n\n  return results\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n * @typedef {import('../types.js').Properties} Properties\n * @typedef {import('../types.js').MdastNode} MdastNode\n */\n\nimport {convertElement} from 'hast-util-is-element'\nimport {findSelectedOptions} from '../util/find-selected-options.js'\nimport {own} from '../util/own.js'\nimport {resolve} from '../util/resolve.js'\nimport {wrapText} from '../util/wrap-text.js'\n\nconst datalist = convertElement('datalist')\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\n// eslint-disable-next-line complexity\nexport function input(h, node) {\n  /** @type {Properties} */\n  // @ts-expect-error: `props` are defined.\n  const props = node.properties\n  let value = String(props.value || props.placeholder || '')\n  /** @type {Array.<MdastNode>} */\n  const results = []\n  /** @type {Array.<string>} */\n  const texts = []\n  /** @type {Array.<[string, string|null]>} */\n  let values = []\n  let index = -1\n  /** @type {string} */\n  let list\n\n  if (props.disabled || props.type === 'hidden' || props.type === 'file') {\n    return\n  }\n\n  if (props.type === 'checkbox' || props.type === 'radio') {\n    return h(\n      node,\n      'text',\n      wrapText(h, h[props.checked ? 'checked' : 'unchecked'])\n    )\n  }\n\n  if (props.type === 'image') {\n    return props.alt || value\n      ? h(node, 'image', {\n          url: resolve(h, String(props.src || '') || null),\n          title: wrapText(h, String(props.title || '')) || null,\n          alt: wrapText(h, String(props.alt || value))\n        })\n      : []\n  }\n\n  if (value) {\n    values = [[value, null]]\n  } else if (\n    // `list` is not supported on these types:\n    props.type !== 'password' &&\n    props.type !== 'file' &&\n    props.type !== 'submit' &&\n    props.type !== 'reset' &&\n    props.type !== 'button' &&\n    props.list\n  ) {\n    list = String(props.list).toUpperCase()\n\n    if (own.call(h.nodeById, list) && datalist(h.nodeById[list])) {\n      values = findSelectedOptions(h, h.nodeById[list], props)\n    }\n  }\n\n  if (values.length === 0) {\n    return\n  }\n\n  // Hide password value.\n  if (props.type === 'password') {\n    // Passwords don’t support `list`.\n    values[0] = ['•'.repeat(values[0][0].length), null]\n  }\n\n  if (props.type === 'url' || props.type === 'email') {\n    while (++index < values.length) {\n      value = resolve(h, values[index][0])\n\n      results.push(\n        h(\n          node,\n          'link',\n          {\n            title: null,\n            url: wrapText(h, props.type === 'email' ? 'mailto:' + value : value)\n          },\n          [{type: 'text', value: wrapText(h, values[index][1] || value)}]\n        )\n      )\n\n      if (index !== values.length - 1) {\n        results.push({type: 'text', value: ', '})\n      }\n    }\n\n    return results\n  }\n\n  while (++index < values.length) {\n    texts.push(\n      values[index][1]\n        ? values[index][1] + ' (' + values[index][0] + ')'\n        : values[index][0]\n    )\n  }\n\n  return h(node, 'text', wrapText(h, texts.join(', ')))\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n * @typedef {import('../types.js').ElementChild} ElementChild\n * @typedef {import('../types.js').MdastNode} MdastNode\n */\n\nimport {convertElement} from 'hast-util-is-element'\nimport {wrapChildren} from '../util/wrap-children.js'\n\nconst p = convertElement('p')\nconst input = convertElement('input')\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function li(h, node) {\n  const head = node.children[0]\n  /** @type {boolean|null} */\n  let checked = null\n  /** @type {ElementChild} */\n  let checkbox\n  /** @type {Element|undefined} */\n  let clone\n\n  // Check if this node starts with a checkbox.\n  if (p(head)) {\n    checkbox = head.children[0]\n\n    if (\n      input(checkbox) &&\n      checkbox.properties &&\n      (checkbox.properties.type === 'checkbox' ||\n        checkbox.properties.type === 'radio')\n    ) {\n      checked = Boolean(checkbox.properties.checked)\n      clone = {\n        ...node,\n        children: [\n          {...head, children: head.children.slice(1)},\n          ...node.children.slice(1)\n        ]\n      }\n    }\n  }\n\n  const content = wrapChildren(h, clone || node)\n\n  return h(node, 'listItem', {spread: content.length > 1, checked}, content)\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n */\n\nimport {convertElement} from 'hast-util-is-element'\nimport {hasProperty} from 'hast-util-has-property'\nimport {listItemsSpread} from '../util/list-items-spread.js'\nimport {wrapListItems} from '../util/wrap-list-items.js'\n\nconst ol = convertElement('ol')\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function list(h, node) {\n  const ordered = ol(node)\n  const children = wrapListItems(h, node)\n  /** @type {number|null} */\n  let start = null\n\n  if (ordered) {\n    start = hasProperty(node, 'start')\n      ? // @ts-expect-error: `props` exist.\n        Number.parseInt(String(node.properties.start), 10)\n      : 1\n  }\n\n  return h(\n    node,\n    'list',\n    {ordered, start, spread: listItemsSpread(children)},\n    children\n  )\n}\n","/**\n * @typedef Options\n * @property {boolean} [includeImageAlt=true]\n */\n\n/**\n * Get the text content of a node.\n * Prefer the node’s plain-text fields, otherwise serialize its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} node\n * @param {Options} [options]\n * @returns {string}\n */\nexport function toString(node, options) {\n  var {includeImageAlt = true} = options || {}\n  return one(node, includeImageAlt)\n}\n\n/**\n * @param {unknown} node\n * @param {boolean} includeImageAlt\n * @returns {string}\n */\nfunction one(node, includeImageAlt) {\n  return (\n    (node &&\n      typeof node === 'object' &&\n      // @ts-ignore looks like a literal.\n      (node.value ||\n        // @ts-ignore looks like an image.\n        (includeImageAlt ? node.alt : '') ||\n        // @ts-ignore looks like a parent.\n        ('children' in node && all(node.children, includeImageAlt)) ||\n        (Array.isArray(node) && all(node, includeImageAlt)))) ||\n    ''\n  )\n}\n\n/**\n * @param {Array.<unknown>} values\n * @param {boolean} includeImageAlt\n * @returns {string}\n */\nfunction all(values, includeImageAlt) {\n  /** @type {Array.<string>} */\n  var result = []\n  var index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt)\n  }\n\n  return result.join('')\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n * @typedef {import('../types.js').Properties} Properties\n * @typedef {import('../types.js').ElementChild} ElementChild\n */\n\nimport {convertElement} from 'hast-util-is-element'\nimport {toString} from 'mdast-util-to-string'\nimport {visit, EXIT} from 'unist-util-visit'\nimport {all} from '../all.js'\nimport {resolve} from '../util/resolve.js'\nimport {wrapNeeded} from '../util/wrap.js'\n\nconst source = convertElement('source')\nconst video = convertElement('video')\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function media(h, node) {\n  let nodes = all(h, node)\n  /** @type {Properties} */\n  // @ts-expect-error: `props` are defined.\n  const properties = node.properties\n  const poster = video(node) && String(properties.poster || '')\n  let src = String(properties.src || '')\n  let index = -1\n  /** @type {boolean} */\n  let linkInFallbackContent = false\n  /** @type {ElementChild} */\n  let child\n\n  visit({type: 'root', children: nodes}, 'link', findLink)\n\n  // If the content links to something, or if it’s not phrasing…\n  if (linkInFallbackContent || wrapNeeded(nodes)) {\n    return nodes\n  }\n\n  // Find the source.\n  while (!src && ++index < node.children.length) {\n    child = node.children[index]\n    if (source(child)) {\n      // @ts-expect-error: `props` are defined.\n      src = String(child.properties.src || '')\n    }\n  }\n\n  // If there’s a poster defined on the video, create an image.\n  if (poster) {\n    nodes = [\n      {\n        type: 'image',\n        title: null,\n        url: resolve(h, poster),\n        alt: toString({children: nodes})\n      }\n    ]\n  }\n\n  // Link to the media resource.\n  return {\n    type: 'link',\n    // @ts-expect-error Types are broken.\n    title: node.properties.title || null,\n    url: resolve(h, src),\n    // @ts-expect-error Assume phrasing content.\n    children: nodes\n  }\n\n  function findLink() {\n    linkInFallbackContent = true\n    return EXIT\n  }\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n */\n\nimport {all} from '../all.js'\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function p(h, node) {\n  const nodes = all(h, node)\n\n  if (nodes.length > 0) {\n    return h(node, 'paragraph', nodes)\n  }\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n */\n\nimport {all} from '../all.js'\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function strong(h, node) {\n  return h(node, 'strong', all(h, node))\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n * @typedef {import('../types.js').MdastNode} MdastNode\n */\n\nimport {all} from '../all.js'\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function tableCell(h, node) {\n  const wrap = h.wrapText\n\n  h.wrapText = false\n\n  const result = h(node, 'tableCell', all(h, node))\n\n  if (node.properties && (node.properties.rowSpan || node.properties.colSpan)) {\n    const data = result.data || (result.data = {})\n    if (node.properties.rowSpan) data.rowSpan = node.properties.rowSpan\n    if (node.properties.colSpan) data.colSpan = node.properties.colSpan\n  }\n\n  h.wrapText = wrap\n\n  return result\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n * @typedef {import('../types.js').MdastNode} MdastNode\n * @typedef {import('../types.js').MdastTableContent} MdastTableContent\n * @typedef {import('../types.js').MdastRowContent} MdastRowContent\n * @typedef {import('../types.js').MdastPhrasingContent} MdastPhrasingContent\n *\n * @typedef Info\n * @property {Array.<string|null>} align\n * @property {boolean} headless\n */\n\nimport {convertElement} from 'hast-util-is-element'\nimport {toText} from 'hast-util-to-text'\nimport {visit, SKIP} from 'unist-util-visit'\nimport {wrapText} from '../util/wrap-text.js'\nimport {all} from '../all.js'\n\nconst thead = convertElement('thead')\nconst tr = convertElement('tr')\nconst cell = convertElement(['th', 'td'])\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function table(h, node) {\n  if (h.inTable) {\n    return h(node, 'text', wrapText(h, toText(node)))\n  }\n\n  h.inTable = true\n\n  const {headless, align} = inspect(node)\n  const rows = toRows(all(h, node), headless)\n  let columns = 1\n  let rowIndex = -1\n\n  while (++rowIndex < rows.length) {\n    const cells = rows[rowIndex].children\n    let cellIndex = -1\n\n    while (++cellIndex < cells.length) {\n      const cell = cells[cellIndex]\n\n      if (cell.data) {\n        const colSpan = Number.parseInt(String(cell.data.colSpan), 10) || 1\n        const rowSpan = Number.parseInt(String(cell.data.rowSpan), 10) || 1\n\n        if (colSpan > 1 || rowSpan > 1) {\n          let otherRowIndex = rowIndex - 1\n\n          while (++otherRowIndex < rowIndex + rowSpan) {\n            let colIndex = cellIndex - 1\n\n            while (++colIndex < cellIndex + colSpan) {\n              if (!rows[otherRowIndex]) {\n                // Don’t add rows that don’t exist.\n                // Browsers don’t render them either.\n                break\n              }\n\n              /** @type {Array.<MdastRowContent>} */\n              const newCells = []\n\n              if (otherRowIndex !== rowIndex || colIndex !== cellIndex) {\n                newCells.push({type: 'tableCell', children: []})\n              }\n\n              rows[otherRowIndex].children.splice(colIndex, 0, ...newCells)\n            }\n          }\n        }\n\n        // Clean the data fields.\n        if ('colSpan' in cell.data) delete cell.data.colSpan\n        if ('rowSpan' in cell.data) delete cell.data.rowSpan\n        if (Object.keys(cell.data).length === 0) delete cell.data\n      }\n    }\n\n    if (cells.length > columns) columns = cells.length\n  }\n\n  // Add extra empty cells.\n  rowIndex = -1\n\n  while (++rowIndex < rows.length) {\n    const cells = rows[rowIndex].children\n    let cellIndex = cells.length - 1\n    while (++cellIndex < columns) {\n      cells.push({type: 'tableCell', children: []})\n    }\n  }\n\n  let alignIndex = align.length - 1\n  while (++alignIndex < columns) {\n    align.push(null)\n  }\n\n  h.inTable = false\n\n  return h(node, 'table', {align}, rows)\n}\n\n/**\n * Infer whether the HTML table has a head and how it aligns.\n *\n * @param {Element} node\n * @returns {Info}\n */\nfunction inspect(node) {\n  let headless = true\n  let rowIndex = 0\n  let cellIndex = 0\n  /** @type {Array.<string|null>} */\n  const align = [null]\n\n  visit(node, 'element', (child) => {\n    if (child.tagName === 'table' && node !== child) {\n      return SKIP\n    }\n\n    // If there is a `thead`, assume there is a header row.\n    if (cell(child) && child.properties) {\n      if (!align[cellIndex]) {\n        align[cellIndex] = String(child.properties.align || '') || null\n      }\n\n      // If there is a th in the first row, assume there is a header row.\n      if (headless && rowIndex < 2 && child.tagName === 'th') {\n        headless = false\n      }\n\n      cellIndex++\n    } else if (thead(child)) {\n      headless = false\n    } else if (tr(child)) {\n      rowIndex++\n      cellIndex = 0\n    }\n  })\n\n  return {align, headless}\n}\n\n/**\n * Ensure the rows are properly structured.\n *\n * @param {Array.<MdastNode>} children\n * @param {boolean} headless\n * @returns {Array.<MdastTableContent>}\n */\nfunction toRows(children, headless) {\n  let index = -1\n  /** @type {Array.<MdastTableContent>} */\n  const nodes = []\n  /** @type {Array.<MdastRowContent>|undefined} */\n  let queue\n\n  // Add an empty header row.\n  if (headless) {\n    nodes.push({type: 'tableRow', children: []})\n  }\n\n  while (++index < children.length) {\n    const node = children[index]\n\n    if (node.type === 'tableRow') {\n      if (queue) {\n        node.children.unshift(...queue)\n        queue = undefined\n      }\n\n      nodes.push(node)\n    } else {\n      if (!queue) queue = []\n      // @ts-expect-error Assume row content.\n      queue.push(node)\n    }\n  }\n\n  if (queue) {\n    nodes[nodes.length - 1].children.push(...queue)\n  }\n\n  index = -1\n\n  while (++index < nodes.length) {\n    nodes[index].children = toCells(nodes[index].children)\n  }\n\n  return nodes\n}\n\n/**\n * Ensure the cells in a row are properly structured.\n *\n * @param {Array.<MdastNode>} children\n * @returns {Array.<MdastRowContent>}\n */\nfunction toCells(children) {\n  /** @type {Array.<MdastRowContent>} */\n  const nodes = []\n  let index = -1\n  /** @type {MdastNode} */\n  let node\n  /** @type {Array.<MdastPhrasingContent>|undefined} */\n  let queue\n\n  while (++index < children.length) {\n    node = children[index]\n\n    if (node.type === 'tableCell') {\n      if (queue) {\n        node.children.unshift(...queue)\n        queue = undefined\n      }\n\n      nodes.push(node)\n    } else {\n      if (!queue) queue = []\n      // @ts-expect-error Assume phrasing content.\n      queue.push(node)\n    }\n  }\n\n  if (queue) {\n    node = nodes[nodes.length - 1]\n\n    if (!node) {\n      node = {type: 'tableCell', children: []}\n      nodes.push(node)\n    }\n\n    node.children.push(...queue)\n  }\n\n  return nodes\n}\n","import {all} from '../all.js'\nimport {wrapChildren} from '../util/wrap-children.js'\nimport {a} from './a.js'\nimport {base} from './base.js'\nimport {blockquote} from './blockquote.js'\nimport {br} from './br.js'\nimport {code} from './code.js'\nimport {comment} from './comment.js'\nimport {del} from './del.js'\nimport {dl} from './dl.js'\nimport {em} from './em.js'\nimport {heading} from './heading.js'\nimport {hr} from './hr.js'\nimport {iframe} from './iframe.js'\nimport {img} from './img.js'\nimport {inlineCode} from './inline-code.js'\nimport {input} from './input.js'\nimport {li} from './li.js'\nimport {list} from './list.js'\nimport {media} from './media.js'\nimport {p} from './p.js'\nimport {q} from './q.js'\nimport {root} from './root.js'\nimport {select} from './select.js'\nimport {strong} from './strong.js'\nimport {tableCell} from './table-cell.js'\nimport {tableRow} from './table-row.js'\nimport {table} from './table.js'\nimport {text} from './text.js'\nimport {textarea} from './textarea.js'\nimport {wbr} from './wbr.js'\n\nexport const handlers = {\n  root,\n  text,\n  comment,\n  doctype: ignore,\n\n  applet: ignore,\n  area: ignore,\n  basefont: ignore,\n  bgsound: ignore,\n  caption: ignore,\n  col: ignore,\n  colgroup: ignore,\n  command: ignore,\n  content: ignore,\n  datalist: ignore,\n  dialog: ignore,\n  element: ignore,\n  embed: ignore,\n  frame: ignore,\n  frameset: ignore,\n  isindex: ignore,\n  keygen: ignore,\n  link: ignore,\n  math: ignore,\n  menu: ignore,\n  menuitem: ignore,\n  meta: ignore,\n  nextid: ignore,\n  noembed: ignore,\n  noframes: ignore,\n  optgroup: ignore,\n  option: ignore,\n  param: ignore,\n  script: ignore,\n  shadow: ignore,\n  source: ignore,\n  spacer: ignore,\n  style: ignore,\n  svg: ignore,\n  template: ignore,\n  title: ignore,\n  track: ignore,\n\n  abbr: all,\n  acronym: all,\n  bdi: all,\n  bdo: all,\n  big: all,\n  blink: all,\n  button: all,\n  canvas: all,\n  cite: all,\n  data: all,\n  details: all,\n  dfn: all,\n  font: all,\n  ins: all,\n  label: all,\n  map: all,\n  marquee: all,\n  meter: all,\n  nobr: all,\n  noscript: all,\n  object: all,\n  output: all,\n  progress: all,\n  rb: all,\n  rbc: all,\n  rp: all,\n  rt: all,\n  rtc: all,\n  ruby: all,\n  slot: all,\n  small: all,\n  span: all,\n  sup: all,\n  sub: all,\n  tbody: all,\n  tfoot: all,\n  thead: all,\n  time: all,\n\n  address: wrapChildren,\n  article: wrapChildren,\n  aside: wrapChildren,\n  body: wrapChildren,\n  center: wrapChildren,\n  div: wrapChildren,\n  fieldset: wrapChildren,\n  figcaption: wrapChildren,\n  figure: wrapChildren,\n  form: wrapChildren,\n  footer: wrapChildren,\n  header: wrapChildren,\n  hgroup: wrapChildren,\n  html: wrapChildren,\n  legend: wrapChildren,\n  main: wrapChildren,\n  multicol: wrapChildren,\n  nav: wrapChildren,\n  picture: wrapChildren,\n  section: wrapChildren,\n\n  a,\n  audio: media,\n  b: strong,\n  base,\n  blockquote,\n  br,\n  code: inlineCode,\n  dir: list,\n  dl,\n  dt: li,\n  dd: li,\n  del,\n  em,\n  h1: heading,\n  h2: heading,\n  h3: heading,\n  h4: heading,\n  h5: heading,\n  h6: heading,\n  hr,\n  i: em,\n  iframe,\n  img,\n  image: img,\n  input,\n  kbd: inlineCode,\n  li,\n  listing: code,\n  mark: em,\n  ol: list,\n  p,\n  plaintext: code,\n  pre: code,\n  q,\n  s: del,\n  samp: inlineCode,\n  select,\n  strike: del,\n  strong,\n  summary: p,\n  table,\n  td: tableCell,\n  textarea,\n  th: tableCell,\n  tr: tableRow,\n  tt: inlineCode,\n  u: em,\n  ul: list,\n  var: inlineCode,\n  video: media,\n  wbr,\n  xmp: code\n}\n\nfunction ignore() {}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Root} Root\n */\n\nimport {all} from '../all.js'\nimport {wrap, wrapNeeded} from '../util/wrap.js'\n\n/**\n * @type {Handle}\n * @param {Root} node\n */\nexport function root(h, node) {\n  let children = all(h, node)\n\n  if (h.document || wrapNeeded(children)) {\n    children = wrap(children)\n  }\n\n  return h(node, 'root', children)\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Text} Text\n */\n\nimport {wrapText} from '../util/wrap-text.js'\n\n/**\n * @type {Handle}\n * @param {Text} node\n */\nexport function text(h, node) {\n  return h(node, 'text', wrapText(h, node.value))\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Comment} Comment\n */\nimport {wrapText} from '../util/wrap-text.js'\n\n/**\n * @type {Handle}\n * @param {Comment} node\n */\nexport function comment(h, node) {\n  return h(node, 'html', '<!--' + wrapText(h, node.value) + '-->')\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n * @typedef {import('../types.js').Properties} Properties\n */\n\nimport {all} from '../all.js'\nimport {resolve} from '../util/resolve.js'\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function a(h, node) {\n  /** @type {Properties} */\n  // @ts-expect-error: `props` are defined.\n  const props = node.properties\n  return h(\n    node,\n    'link',\n    {\n      title: props.title || null,\n      url: resolve(h, String(props.href || '') || null)\n    },\n    all(h, node)\n  )\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n */\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function base(h, node) {\n  if (!h.baseFound) {\n    h.frozenBaseUrl =\n      String((node.properties && node.properties.href) || '') || null\n    h.baseFound = true\n  }\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n */\n\nimport {wrapChildren} from '../util/wrap-children.js'\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function blockquote(h, node) {\n  return h(node, 'blockquote', wrapChildren(h, node))\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n */\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function br(h, node) {\n  return h.wrapText ? h(node, 'break') : h(node, 'text', ' ')\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n */\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function hr(h, node) {\n  return h(node, 'thematicBreak')\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n * @typedef {import('../types.js').Properties} Properties\n */\n\nimport {resolve} from '../util/resolve.js'\nimport {wrapText} from '../util/wrap-text.js'\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function iframe(h, node) {\n  /** @type {Properties} */\n  // @ts-expect-error: `props` are defined.\n  const props = node.properties\n  const src = String(props.src || '')\n  const title = String(props.title || '')\n\n  // Only create a link if there is a title.\n  // We can’t use the content of the frame because conforming HTML parsers treat\n  // it as text, whereas legacy parsers treat it as HTML, so it will likely\n  // contain tags that will show up in text.\n  if (src && title) {\n    return {\n      type: 'link',\n      title: null,\n      url: resolve(h, src),\n      children: [{type: 'text', value: wrapText(h, title)}]\n    }\n  }\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n * @typedef {import('../types.js').MdastNode} MdastNode\n */\n\nimport {all} from '../all.js'\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function q(h, node) {\n  const expected = h.quotes[h.qNesting % h.quotes.length]\n\n  h.qNesting++\n  const contents = all(h, node)\n  h.qNesting--\n\n  contents.unshift({type: 'text', value: expected.charAt(0)})\n\n  contents.push({\n    type: 'text',\n    value: expected.length > 1 ? expected.charAt(1) : expected\n  })\n\n  return contents\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n */\n\nimport {findSelectedOptions} from '../util/find-selected-options.js'\nimport {wrapText} from '../util/wrap-text.js'\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function select(h, node) {\n  const values = findSelectedOptions(h, node)\n  let index = -1\n  /** @type {Array.<string>} */\n  const results = []\n  /** @type {[string, string|null]} */\n  let value\n\n  while (++index < values.length) {\n    value = values[index]\n    results.push(value[1] ? value[1] + ' (' + value[0] + ')' : value[0])\n  }\n\n  if (results.length > 0) {\n    return h(node, 'text', wrapText(h, results.join(', ')))\n  }\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n */\n\nimport {toText} from 'hast-util-to-text'\nimport {wrapText} from '../util/wrap-text.js'\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function textarea(h, node) {\n  return h(node, 'text', wrapText(h, toText(node)))\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n */\n\nimport {all} from '../all.js'\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function tableRow(h, node) {\n  return h(node, 'tableRow', all(h, node))\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n */\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function wbr(h, node) {\n  return h(node, 'text', '\\u200B')\n}\n","/**\n * @typedef {import('./types.js').Node} Node\n * @typedef {import('./types.js').Element} Element\n * @typedef {import('./types.js').Text} Text\n * @typedef {import('./types.js').Options} Options\n * @typedef {import('./types.js').Context} Context\n * @typedef {import('./types.js').Properties} Properties\n * @typedef {import('./types.js').H} H\n * @typedef {import('./types.js').HWithoutProps} HWithoutProps\n * @typedef {import('./types.js').HWithProps} HWithProps\n * @typedef {import('./types.js').MdastNode} MdastNode\n * @typedef {import('./types.js').MdastRoot} MdastRoot\n */\n\nimport rehypeMinifyWhitespace from 'rehype-minify-whitespace'\nimport {convert} from 'unist-util-is'\nimport {visit} from 'unist-util-visit'\nimport {one} from './one.js'\nimport {handlers} from './handlers/index.js'\nimport {own} from './util/own.js'\n\nexport {one} from './one.js'\nexport {all} from './all.js'\n\nconst block = convert(['heading', 'paragraph', 'root'])\n\n/**\n * @param {Node} tree\n * @param {Options} [options]\n */\nexport function toMdast(tree, options = {}) {\n  /** @type {Object.<string, Element>} */\n  const byId = {}\n  /** @type {MdastNode|MdastRoot} */\n  let mdast\n\n  /**\n   * @type {H}\n   */\n  const h = Object.assign(\n    /**\n     * @type {HWithProps & HWithoutProps}\n     */\n    (\n      /**\n       * @param {Node} node\n       * @param {string} type\n       * @param {Properties|string|Array.<Node>} [props]\n       * @param {string|Array.<Node>} [children]\n       */\n      (node, type, props, children) => {\n        /** @type {Properties|undefined} */\n        let properties\n\n        if (typeof props === 'string' || Array.isArray(props)) {\n          children = props\n          properties = {}\n        } else {\n          properties = props\n        }\n\n        /** @type {Node} */\n        // @ts-expect-error Assume valid `type` and `children`/`value`.\n        const result = {type, ...properties}\n\n        if (typeof children === 'string') {\n          // @ts-expect-error: Looks like a literal.\n          result.value = children\n        } else if (children) {\n          // @ts-expect-error: Looks like a parent.\n          result.children = children\n        }\n\n        if (node.position) {\n          result.position = node.position\n        }\n\n        return result\n      }\n    ),\n    {\n      nodeById: byId,\n      baseFound: false,\n      inTable: false,\n      wrapText: true,\n      /** @type {string|null} */\n      frozenBaseUrl: null,\n      qNesting: 0,\n      handlers: options.handlers\n        ? {...handlers, ...options.handlers}\n        : handlers,\n      document: options.document,\n      checked: options.checked || '[x]',\n      unchecked: options.unchecked || '[ ]',\n      quotes: options.quotes || ['\"']\n    }\n  )\n\n  visit(tree, 'element', (node) => {\n    const id =\n      node.properties &&\n      'id' in node.properties &&\n      String(node.properties.id).toUpperCase()\n\n    if (id && !own.call(byId, id)) {\n      byId[id] = node\n    }\n  })\n\n  // @ts-expect-error: does return a transformer, that does accept any node.\n  rehypeMinifyWhitespace({newlines: options.newlines === true})(tree)\n\n  const result = one(h, tree, undefined)\n\n  if (!result) {\n    mdast = {type: 'root', children: []}\n  } else if (Array.isArray(result)) {\n    mdast = {type: 'root', children: result}\n  } else {\n    mdast = result\n  }\n\n  visit(mdast, 'text', ontext)\n\n  return mdast\n\n  /**\n   * Collapse text nodes, and fix whitespace.\n   * Most of this is taken care of by `rehype-minify-whitespace`, but\n   * we’re generating some whitespace too, and some nodes are in the end\n   * ignored.\n   * So clean up.\n   *\n   * @type {import('unist-util-visit/complex-types').BuildVisitor<MdastRoot, 'text'>}\n   */\n  function ontext(node, index, parent) {\n    /* c8 ignore next 3 */\n    if (index === null || !parent) {\n      return\n    }\n\n    const previous = parent.children[index - 1]\n\n    if (previous && previous.type === node.type) {\n      previous.value += node.value\n      parent.children.splice(index, 1)\n\n      if (previous.position && node.position) {\n        previous.position.end = node.position.end\n      }\n\n      // Iterate over the previous node again, to handle its total value.\n      return index - 1\n    }\n\n    node.value = node.value.replace(/[\\t ]*(\\r?\\n|\\r)[\\t ]*/, '$1')\n\n    // We don’t care about other phrasing nodes in between (e.g., `[ asd ]()`),\n    // as there the whitespace matters.\n    if (parent && block(parent)) {\n      if (!index) {\n        node.value = node.value.replace(/^[\\t ]+/, '')\n      }\n\n      if (index === parent.children.length - 1) {\n        node.value = node.value.replace(/[\\t ]+$/, '')\n      }\n    }\n\n    if (!node.value) {\n      parent.children.splice(index, 1)\n      return index\n    }\n  }\n}\n\nexport {handlers as defaultHandlers} from './handlers/index.js'\n","/**\n * @typedef {import('hast-util-to-mdast').Options} Options\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('unified').Processor<any, any, any, any>} Processor\n */\n\nimport {toMdast} from 'hast-util-to-mdast'\n\n/**\n * Plugin to bridge or mutate to rehype.\n *\n * If a destination is given, runs the destination with the new mdast\n * tree (bridge-mode).\n * Without destination, returns the mdast tree: further plugins run on that\n * tree (mutate-mode).\n *\n * @param destination\n *   Optional unified processor.\n * @param options\n *   Options passed to `hast-util-to-mdast`.\n */\nconst rehypeRemark =\n  /**\n   * @type {(import('unified').Plugin<[Processor, Options?], HastRoot> & import('unified').Plugin<[Options?]|void[], HastRoot, MdastRoot>)}\n   */\n  (\n    /**\n     * @param {Processor|Options} [destination]\n     * @param {Options} [options]\n     */\n    function (destination, options) {\n      /** @type {Options|undefined} */\n      let settings\n      /** @type {Processor|undefined} */\n      let processor\n\n      if (typeof destination === 'function') {\n        processor = destination\n        settings = options || {}\n      } else {\n        settings = destination || {}\n      }\n\n      if (settings.document === undefined || settings.document === null) {\n        settings = Object.assign({}, settings, {document: true})\n      }\n\n      return processor ? bridge(processor, settings) : mutate(settings)\n    }\n  )\n\nexport default rehypeRemark\n\n/**\n * Bridge-mode.\n * Runs the destination with the new mdast tree.\n *\n * @type {import('unified').Plugin<[Processor, Options?], HastRoot>}\n */\nfunction bridge(destination, options) {\n  return (node, file, next) => {\n    destination.run(toMdast(node, options), file, (error) => {\n      next(error)\n    })\n  }\n}\n\n/**\n * Mutate-mode.\n * Further transformers run on the mdast tree.\n *\n * @type {import('unified').Plugin<[Options?]|void[], HastRoot, MdastRoot>}\n */\nfunction mutate(options = {}) {\n  return (node) => {\n    const result = /** @type {MdastRoot} */ (toMdast(node, options))\n    return result\n  }\n}\n","/**\n * Throw a given error.\n *\n * @param {Error | null | undefined} [error]\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","var own = {}.hasOwnProperty\n\n/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n */\n\n/**\n * Stringify one point, a position (start and end points), or a node’s\n * positional information.\n *\n * @param {Node|Position|Point} [value]\n * @returns {string}\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if (own.call(value, 'position') || own.call(value, 'type')) {\n    // @ts-ignore looks like a node.\n    return position(value.position)\n  }\n\n  // Position.\n  if (own.call(value, 'start') || own.call(value, 'end')) {\n    // @ts-ignore looks like a position.\n    return position(value)\n  }\n\n  // Point.\n  if (own.call(value, 'line') || own.call(value, 'column')) {\n    // @ts-ignore looks like a point.\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\nexport class VFileMessage extends Error {\n  /**\n   * Constructor of a message for `reason` at `place` from `origin`.\n   * When an error is passed in as `reason`, copies the `stack`.\n   *\n   * @param {string|Error} reason Reason for message (`string` or `Error`). Uses the stack and message of the error if given.\n   * @param {Node|Position|Point} [place] Place at which the message occurred in a file (`Node`, `Position`, or `Point`, optional).\n   * @param {string} [origin] Place in code the message originates from (`string`, optional).\n   */\n  constructor(reason, place, origin) {\n    /** @type {[string?, string?]} */\n    var parts = [null, null]\n    /** @type {Position} */\n    var position = {\n      start: {line: null, column: null},\n      end: {line: null, column: null}\n    }\n    /** @type {number} */\n    var index\n\n    super()\n\n    if (typeof place === 'string') {\n      origin = place\n      place = null\n    }\n\n    if (typeof origin === 'string') {\n      index = origin.indexOf(':')\n\n      if (index === -1) {\n        parts[1] = origin\n      } else {\n        parts[0] = origin.slice(0, index)\n        parts[1] = origin.slice(index + 1)\n      }\n    }\n\n    if (place) {\n      // Node.\n      if ('type' in place || 'position' in place) {\n        if (place.position) {\n          position = place.position\n        }\n      }\n      // Position.\n      else if ('start' in place || 'end' in place) {\n        // @ts-ignore Looks like a position.\n        position = place\n      }\n      // Point.\n      else if ('line' in place || 'column' in place) {\n        // @ts-ignore Looks like a point.\n        position.start = place\n      }\n    }\n\n    // Fields from `Error`\n    this.name = stringifyPosition(place) || '1:1'\n    this.message = typeof reason === 'object' ? reason.message : reason\n    this.stack = typeof reason === 'object' ? reason.stack : ''\n\n    /**\n     * Reason for message.\n     * @type {string}\n     */\n    this.reason = this.message\n    /**\n     * Starting line of error.\n     * @type {number?}\n     */\n    this.line = position.start.line\n    /**\n     * Starting column of error.\n     * @type {number?}\n     */\n    this.column = position.start.column\n    /**\n     * Namespace of warning.\n     * @type {string?}\n     */\n    this.source = parts[0]\n    /**\n     * Category of message.\n     * @type {string?}\n     */\n    this.ruleId = parts[1]\n    /**\n     * Full range information, when available.\n     * Has start and end properties, both set to an object with line and column, set to number?.\n     * @type {Position?}\n     */\n    this.position = position\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * You may add a file property with a path of a file (used throughout the VFile ecosystem).\n     * @type {string?}\n     */\n    this.file\n    /**\n     * If true, marks associated file as no longer processable.\n     * @type {boolean?}\n     */\n    this.fatal\n    /**\n     * You may add a url property with a link to documentation for the message.\n     * @type {string?}\n     */\n    this.url\n    /**\n     * You may add a note property with a long form description of the message (supported by vfile-reporter).\n     * @type {string?}\n     */\n    this.note\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.fatal = null\nVFileMessage.prototype.column = null\nVFileMessage.prototype.line = null\nVFileMessage.prototype.source = null\nVFileMessage.prototype.ruleId = null\nVFileMessage.prototype.position = null\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const path = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * @param {string} path\n * @param {string} [ext]\n * @returns {string}\n */\nfunction basename(path, ext) {\n  if (ext !== undefined && typeof ext !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean|undefined} */\n  let seenNonSlash\n\n  if (ext === undefined || ext.length === 0 || ext.length > path.length) {\n    while (index--) {\n      if (path.charCodeAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (ext === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extIndex = ext.length - 1\n\n  while (index--) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.charCodeAt(index) === ext.charCodeAt(extIndex--)) {\n          if (extIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * @param {string} path\n * @returns {string}\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean|undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.charCodeAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.charCodeAt(0) === 47 /* `/` */\n    ? '//'\n    : path.slice(0, end)\n}\n\n/**\n * @param {string} path\n * @returns {string}\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean|undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.charCodeAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * @param {Array.<string>} segments\n * @returns {string}\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string|undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Note: `normalize` is not exposed as `path.normalize`, so some code is\n * manually removed from it.\n *\n * @param {string} path\n * @returns {string}\n */\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.charCodeAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.charCodeAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n * @param {boolean} allowAboveRoot\n * @returns {string}\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number|undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.charCodeAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.charCodeAt(result.length - 1) !== 46 /* `.` */ ||\n          result.charCodeAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * @param {string} path\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const proc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * @typedef URL\n * @property {string} hash\n * @property {string} host\n * @property {string} hostname\n * @property {string} href\n * @property {string} origin\n * @property {string} password\n * @property {string} pathname\n * @property {string} port\n * @property {string} protocol\n * @property {string} search\n * @property {any} searchParams\n * @property {string} username\n * @property {() => string} toString\n * @property {() => string} toJSON\n */\n\n/**\n * @param {unknown} fileURLOrPath\n * @returns {fileURLOrPath is URL}\n */\n// From: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js#L1501>\nexport function isUrl(fileURLOrPath) {\n  return (\n    fileURLOrPath !== null &&\n    typeof fileURLOrPath === 'object' &&\n    // @ts-expect-error: indexable.\n    fileURLOrPath.href &&\n    // @ts-expect-error: indexable.\n    fileURLOrPath.origin\n  )\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {import('./minurl.shared.js').URL} URL\n *\n * @typedef {'ascii'|'utf8'|'utf-8'|'utf16le'|'ucs2'|'ucs-2'|'base64'|'latin1'|'binary'|'hex'} BufferEncoding\n *   Encodings supported by the buffer class.\n *   This is a copy of the typing from Node, copied to prevent Node globals from\n *   being needed.\n *   Copied from: <https://github.com/DefinitelyTyped/DefinitelyTyped/blob/a2bc1d8/types/node/globals.d.ts#L174>\n *\n * @typedef {string|Uint8Array} VFileValue\n *   Contents of the file.\n *   Can either be text, or a Buffer like structure.\n *   This does not directly use type `Buffer`, because it can also be used in a\n *   browser context.\n *   Instead this leverages `Uint8Array` which is the base type for `Buffer`,\n *   and a native JavaScript construct.\n *\n * @typedef {VFileValue|VFileOptions|VFile|URL} VFileCompatible\n *   Things that can be passed to the constructor.\n *\n * @typedef VFileCoreOptions\n * @property {VFileValue} [value]\n * @property {string} [cwd]\n * @property {Array.<string>} [history]\n * @property {string|URL} [path]\n * @property {string} [basename]\n * @property {string} [stem]\n * @property {string} [extname]\n * @property {string} [dirname]\n * @property {Object.<string, unknown>} [data]\n *\n * @typedef {{[key: string]: unknown} & VFileCoreOptions} VFileOptions\n *   Configuration: a bunch of keys that will be shallow copied over to the new\n *   file.\n *\n * @typedef {Object.<string, unknown>} VFileReporterSettings\n * @typedef {<T = VFileReporterSettings>(files: VFile[], options: T) => string} VFileReporter\n */\n\nimport buffer from 'is-buffer'\nimport {VFileMessage} from 'vfile-message'\nimport {path} from './minpath.js'\nimport {proc} from './minproc.js'\nimport {urlToPath, isUrl} from './minurl.js'\n\n// Order of setting (least specific to most), we need this because otherwise\n// `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n// stem can be set.\nconst order = ['history', 'path', 'basename', 'stem', 'extname', 'dirname']\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * If `options` is `string` or `Buffer`, treats it as `{value: options}`.\n   * If `options` is a `VFile`, shallow copies its data over to the new file.\n   * All other given fields are set on the newly created `VFile`.\n   *\n   * Path related properties are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * It’s not possible to set either `dirname` or `extname` without setting\n   * either `history`, `path`, `basename`, or `stem` as well.\n   *\n   * @param {VFileCompatible} [value]\n   */\n  constructor(value) {\n    /** @type {VFileOptions} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (typeof value === 'string' || buffer(value)) {\n      // @ts-expect-error Looks like a buffer.\n      options = {value}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else {\n      // @ts-expect-error Looks like file or options.\n      options = value\n    }\n\n    /**\n     * Place to store custom information.\n     * It’s OK to store custom data directly on the file, moving it to `data`\n     * gives a little more privacy.\n     * @type {Object.<string, unknown>}\n     */\n    this.data = {}\n\n    /**\n     * List of messages associated with the file.\n     * @type {Array.<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * List of file paths the file moved between.\n     * @type {Array.<string>}\n     */\n    this.history = []\n\n    /**\n     * Base of `path`.\n     * Defaults to `process.cwd()` (`/` in browsers).\n     * @type {string}\n     */\n    this.cwd = proc.cwd()\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Raw value.\n     * @type {VFileValue}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n\n    /**\n     * Whether a file was saved to disk.\n     * This is used by vfile reporters.\n     * @type {boolean}\n     */\n    this.stored\n\n    /**\n     * Sometimes files have a non-string representation.\n     * This can be stored in the `result` field.\n     * One example is when turning markdown into React nodes.\n     * This is used by unified to store non-string results.\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Sometimes files have a source map associated with them.\n     * This can be stored in the `map` field.\n     * This should be a `RawSourceMap` type from the `source-map` module.\n     * @type {unknown}\n     */\n    this.map\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const prop = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (prop in options && options[prop] !== undefined) {\n        // @ts-expect-error: TS is confused by the different types for `history`.\n        this[prop] = prop === 'history' ? [...options[prop]] : options[prop]\n      }\n    }\n\n    /** @type {string} */\n    let prop\n\n    // Set non-path related properties.\n    for (prop in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(prop)) this[prop] = options[prop]\n    }\n  }\n\n  /**\n   * Access full path (`~/index.min.js`).\n   *\n   * @returns {string}\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set full path (`~/index.min.js`).\n   * Cannot be nullified.\n   *\n   * @param {string|URL} path\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Access parent path (`~`).\n   */\n  get dirname() {\n    return typeof this.path === 'string' ? path.dirname(this.path) : undefined\n  }\n\n  /**\n   * Set parent path (`~`).\n   * Cannot be set if there's no `path` yet.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = path.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Access basename (including extname) (`index.min.js`).\n   */\n  get basename() {\n    return typeof this.path === 'string' ? path.basename(this.path) : undefined\n  }\n\n  /**\n   * Set basename (`index.min.js`).\n   * Cannot contain path separators.\n   * Cannot be nullified either (use `file.path = file.dirname` instead).\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = path.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Access extname (including dot) (`.js`).\n   */\n  get extname() {\n    return typeof this.path === 'string' ? path.extname(this.path) : undefined\n  }\n\n  /**\n   * Set extname (including dot) (`.js`).\n   * Cannot be set if there's no `path` yet and cannot contain path separators.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.charCodeAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = path.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Access stem (w/o extname) (`index.min`).\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? path.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set stem (w/o extname) (`index.min`).\n   * Cannot be nullified, and cannot contain path separators.\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = path.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * @param {BufferEncoding} [encoding='utf8'] If `file.value` is a buffer, `encoding` is used to serialize buffers.\n   * @returns {string}\n   */\n  toString(encoding) {\n    // @ts-expect-error string’s don’t accept the parameter, but buffers do.\n    return (this.value || '').toString(encoding)\n  }\n\n  /**\n   * Create a message and associates it w/ the file.\n   *\n   * @param {string|Error} reason Reason for message (`string` or `Error`). Uses the stack and message of the error if given.\n   * @param {Node|Position|Point} [place] Place at which the message occurred in a file (`Node`, `Position`, or `Point`, optional).\n   * @param {string} [origin] Place in code the message originates from (`string`, optional).\n   * @returns {VFileMessage}\n   */\n  message(reason, place, origin) {\n    const message = new VFileMessage(reason, place, origin)\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Info: create a message, associate it with the file, and mark the fatality\n   * as `null`.\n   * Calls `message()` internally.\n   *\n   * @param {string|Error} reason Reason for message (`string` or `Error`). Uses the stack and message of the error if given.\n   * @param {Node|Position|Point} [place] Place at which the message occurred in a file (`Node`, `Position`, or `Point`, optional).\n   * @param {string} [origin] Place in code the message originates from (`string`, optional).\n   * @returns {VFileMessage}\n   */\n  info(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = null\n\n    return message\n  }\n\n  /**\n   * Fail: create a message, associate it with the file, mark the fatality as\n   * `true`.\n   * Note: fatal errors mean a file is no longer processable.\n   * Calls `message()` internally.\n   *\n   * @param {string|Error} reason Reason for message (`string` or `Error`). Uses the stack and message of the error if given.\n   * @param {Node|Position|Point} [place] Place at which the message occurred in a file (`Node`, `Position`, or `Point`, optional).\n   * @param {string} [origin] Place in code the message originates from (`string`, optional).\n   * @returns {never}\n   */\n  fail(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string|undefined} part\n * @param {string} name\n * @returns {void}\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(path.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + path.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string|undefined} part\n * @param {string} name\n * @returns {asserts part is string}\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string|undefined} path\n * @param {string} name\n * @returns {asserts path is string}\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n","/// <reference lib=\"dom\" />\n\nimport {isUrl} from './minurl.shared.js'\n\nexport {isUrl}\n\n// See: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js>\n\n/**\n * @param {string|URL} path\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * @param {URL} url\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.charCodeAt(index) === 37 /* `%` */ &&\n      pathname.charCodeAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.charCodeAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('vfile').VFileCompatible} VFileCompatible\n * @typedef {import('vfile').VFileValue} VFileValue\n * @typedef {import('..').Processor} Processor\n * @typedef {import('..').Plugin} Plugin\n * @typedef {import('..').Preset} Preset\n * @typedef {import('..').Pluggable} Pluggable\n * @typedef {import('..').PluggableList} PluggableList\n * @typedef {import('..').Transformer} Transformer\n * @typedef {import('..').Parser} Parser\n * @typedef {import('..').Compiler} Compiler\n * @typedef {import('..').RunCallback} RunCallback\n * @typedef {import('..').ProcessCallback} ProcessCallback\n *\n * @typedef Context\n * @property {Node} tree\n * @property {VFile} file\n */\n\nimport {bail} from 'bail'\nimport isBuffer from 'is-buffer'\nimport extend from 'extend'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\n\n// Expose a frozen processor.\nexport const unified = base().freeze()\n\nconst own = {}.hasOwnProperty\n\n// Function to create the first processor.\n/**\n * @returns {Processor}\n */\nfunction base() {\n  const transformers = trough()\n  /** @type {Processor['attachers']} */\n  const attachers = []\n  /** @type {Record<string, unknown>} */\n  let namespace = {}\n  /** @type {boolean|undefined} */\n  let frozen\n  let freezeIndex = -1\n\n  // Data management.\n  // @ts-expect-error: overloads are handled.\n  processor.data = data\n  processor.Parser = undefined\n  processor.Compiler = undefined\n\n  // Lock.\n  processor.freeze = freeze\n\n  // Plugins.\n  processor.attachers = attachers\n  // @ts-expect-error: overloads are handled.\n  processor.use = use\n\n  // API.\n  processor.parse = parse\n  processor.stringify = stringify\n  // @ts-expect-error: overloads are handled.\n  processor.run = run\n  processor.runSync = runSync\n  // @ts-expect-error: overloads are handled.\n  processor.process = process\n  processor.processSync = processSync\n\n  // Expose.\n  return processor\n\n  // Create a new processor based on the processor in the current scope.\n  /** @type {Processor} */\n  function processor() {\n    const destination = base()\n    let index = -1\n\n    while (++index < attachers.length) {\n      destination.use(...attachers[index])\n    }\n\n    destination.data(extend(true, {}, namespace))\n\n    return destination\n  }\n\n  /**\n   * @param {string|Record<string, unknown>} [key]\n   * @param {unknown} [value]\n   * @returns {unknown}\n   */\n  function data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', frozen)\n        namespace[key] = value\n        return processor\n      }\n\n      // Get `key`.\n      return (own.call(namespace, key) && namespace[key]) || null\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', frozen)\n      namespace = key\n      return processor\n    }\n\n    // Get space.\n    return namespace\n  }\n\n  /** @type {Processor['freeze']} */\n  function freeze() {\n    if (frozen) {\n      return processor\n    }\n\n    while (++freezeIndex < attachers.length) {\n      const [attacher, ...options] = attachers[freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      /** @type {Transformer|void} */\n      const transformer = attacher.call(processor, ...options)\n\n      if (typeof transformer === 'function') {\n        transformers.use(transformer)\n      }\n    }\n\n    frozen = true\n    freezeIndex = Number.POSITIVE_INFINITY\n\n    return processor\n  }\n\n  /**\n   * @param {Pluggable|null|undefined} [value]\n   * @param {...unknown} options\n   * @returns {Processor}\n   */\n  function use(value, ...options) {\n    /** @type {Record<string, unknown>|undefined} */\n    let settings\n\n    assertUnfrozen('use', frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, ...options)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    if (settings) {\n      namespace.settings = Object.assign(namespace.settings || {}, settings)\n    }\n\n    return processor\n\n    /**\n     * @param {import('..').Pluggable<unknown[]>} value\n     * @returns {void}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value)\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...options] = value\n          addPlugin(plugin, ...options)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {void}\n     */\n    function addPreset(result) {\n      addList(result.plugins)\n\n      if (result.settings) {\n        settings = Object.assign(settings || {}, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList|null|undefined} [plugins]\n     * @returns {void}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {...unknown} [value]\n     * @returns {void}\n     */\n    function addPlugin(plugin, value) {\n      let index = -1\n      /** @type {Processor['attachers'][number]|undefined} */\n      let entry\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entry = attachers[index]\n          break\n        }\n      }\n\n      if (entry) {\n        if (isPlainObj(entry[1]) && isPlainObj(value)) {\n          value = extend(true, entry[1], value)\n        }\n\n        entry[1] = value\n      } else {\n        // @ts-expect-error: fine.\n        attachers.push([...arguments])\n      }\n    }\n  }\n\n  /** @type {Processor['parse']} */\n  function parse(doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Parser = processor.Parser\n    assertParser('parse', Parser)\n\n    if (newable(Parser, 'parse')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Parser(String(file), file).parse()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Parser(String(file), file) // eslint-disable-line new-cap\n  }\n\n  /** @type {Processor['stringify']} */\n  function stringify(node, doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Compiler = processor.Compiler\n    assertCompiler('stringify', Compiler)\n    assertNode(node)\n\n    if (newable(Compiler, 'compile')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Compiler(node, file).compile()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Compiler(node, file) // eslint-disable-line new-cap\n  }\n\n  /**\n   * @param {Node} node\n   * @param {VFileCompatible|RunCallback} [doc]\n   * @param {RunCallback} [callback]\n   * @returns {Promise<Node>|void}\n   */\n  function run(node, doc, callback) {\n    assertNode(node)\n    processor.freeze()\n\n    if (!callback && typeof doc === 'function') {\n      callback = doc\n      doc = undefined\n    }\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((node: Node) => void)} resolve\n     * @param {(error: Error) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      // @ts-expect-error: `doc` can’t be a callback anymore, we checked.\n      transformers.run(node, vfile(doc), done)\n\n      /**\n       * @param {Error|null} error\n       * @param {Node} tree\n       * @param {VFile} file\n       * @returns {void}\n       */\n      function done(error, tree, file) {\n        tree = tree || node\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(tree)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, tree, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['runSync']} */\n  function runSync(node, file) {\n    /** @type {Node|undefined} */\n    let result\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.run(node, file, done)\n\n    assertDone('runSync', 'run', complete)\n\n    // @ts-expect-error: we either bailed on an error or have a tree.\n    return result\n\n    /**\n     * @param {Error|null} [error]\n     * @param {Node} [tree]\n     * @returns {void}\n     */\n    function done(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * @param {VFileCompatible} doc\n   * @param {ProcessCallback} [callback]\n   * @returns {Promise<VFile>|undefined}\n   */\n  function process(doc, callback) {\n    processor.freeze()\n    assertParser('process', processor.Parser)\n    assertCompiler('process', processor.Compiler)\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((file: VFile) => void)} resolve\n     * @param {(error?: Error|null|undefined) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      const file = vfile(doc)\n\n      processor.run(processor.parse(file), file, (error, tree, file) => {\n        if (error || !tree || !file) {\n          done(error)\n        } else {\n          /** @type {unknown} */\n          const result = processor.stringify(tree, file)\n\n          if (result === undefined || result === null) {\n            // Empty.\n          } else if (looksLikeAVFileValue(result)) {\n            file.value = result\n          } else {\n            file.result = result\n          }\n\n          done(error, file)\n        }\n      })\n\n      /**\n       * @param {Error|null|undefined} [error]\n       * @param {VFile|undefined} [file]\n       * @returns {void}\n       */\n      function done(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['processSync']} */\n  function processSync(doc) {\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.freeze()\n    assertParser('processSync', processor.Parser)\n    assertCompiler('processSync', processor.Compiler)\n\n    const file = vfile(doc)\n\n    processor.process(file, done)\n\n    assertDone('processSync', 'process', complete)\n\n    return file\n\n    /**\n     * @param {Error|null|undefined} [error]\n     * @returns {void}\n     */\n    function done(error) {\n      complete = true\n      bail(error)\n    }\n  }\n}\n\n/**\n * Check if `value` is a constructor.\n *\n * @param {unknown} value\n * @param {string} name\n * @returns {boolean}\n */\nfunction newable(value, name) {\n  return (\n    typeof value === 'function' &&\n    // Prototypes do exist.\n    // type-coverage:ignore-next-line\n    value.prototype &&\n    // A function with keys in its prototype is probably a constructor.\n    // Classes’ prototype methods are not enumerable, so we check if some value\n    // exists in the prototype.\n    // type-coverage:ignore-next-line\n    (keys(value.prototype) || name in value.prototype)\n  )\n}\n\n/**\n * Check if `value` is an object with keys.\n *\n * @param {Record<string, unknown>} value\n * @returns {boolean}\n */\nfunction keys(value) {\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is VFileValue}\n */\nfunction looksLikeAVFileValue(value) {\n  return typeof value === 'string' || isBuffer(value)\n}\n","/**\n * @typedef {(error?: Error|null|undefined, ...output: any[]) => void} Callback\n * @typedef {(...input: any[]) => any} Middleware\n *\n * @typedef {(...input: any[]) => void} Run Call all middleware.\n * @typedef {(fn: Middleware) => Pipeline} Use Add `fn` (middleware) to the list.\n * @typedef {{run: Run, use: Use}} Pipeline\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n */\nexport function trough() {\n  /** @type {Middleware[]} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error|null|undefined} error\n     * @param {any[]} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware`.\n * Can be sync or async; return a promise, receive a callback, or return new\n * values and errors.\n *\n * @param {Middleware} middleware\n * @param {Callback} callback\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @param {any[]} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware(...parameters)\n    } catch (error) {\n      /** @type {Error} */\n      const exception = error\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result instanceof Promise) {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","import fixGoogleHtml from './fix-google-html.js';\n// rehype-dom-parse is a lightweight version of rehype-parse that leverages\n// browser APIs -- reduces bundle size by ~200 kB!\nimport parse from 'rehype-dom-parse';\nimport { all } from 'rehype-remark';\nimport rehype2remarkWithSpaces from './rehype-to-remark-with-spaces.js';\nimport stringify from 'remark-stringify';\nimport { unified } from 'unified';\n\nfunction preserveTagAndConvertContents (h, node) {\n  return [\n    h(node, 'html', `<${node.tagName}>`),\n    ...all(h, node),\n    h(node, 'html', `</${node.tagName}>`)\n  ];\n}\n\nconst processor = unified()\n  .use(parse)\n  .use(fixGoogleHtml)\n  // .use(require('./lib/log-tree').default)\n  .use(rehype2remarkWithSpaces, {\n    handlers: {\n      // Preserve sup/sub markup; most Markdowns have no markup for it.\n      sub: preserveTagAndConvertContents,\n      sup: preserveTagAndConvertContents\n    }\n  })\n  .use(stringify, {listItemIndent: '1'});\n\nexport function convertDocsHtmlToMarkdown(html) {\n  return processor.process(html)\n    .then(result => {\n      // Ensure double line-break before headings\n      return result.value.replace(/(\\n\\s+)#/g, (_, breaks) => {\n        breaks = breaks.replace(/[^\\n]/g, '');\n        if (breaks.length < 3) breaks = '\\n\\n\\n';\n\n        return `${breaks}#`;\n      });\n    });\n}\n","import rehypeRemark from 'rehype-remark';\n\n/**\n * The official rehype-remark plugin gets a little aggeressive with removing\n * spaces, so this wraps it with some space preservation.\n *\n * Ideally, this needs to be solved upstream in rehype-remark.\n * TODO: create a minimal test case and file a bug there!\n */\nexport default function rehype2remarkWithSpaces () {\n  const spaceToken = '++IAMASPACE++';\n\n  function preserveInitialSpaces (node) {\n    if (node.type === 'text' && node.value.startsWith(' ')) {\n      if (node.value.startsWith(' ')) {\n        node.value = spaceToken + node.value.slice(1);\n      }\n      if (node.value.endsWith(' ')) {\n        node.value = node.value.slice(0, -1) + spaceToken;\n      }\n    }\n    if (node.children) {\n      node.children.forEach(preserveInitialSpaces);\n    }\n  }\n\n  function recreateSpaces (node) {\n    if (node.value && typeof node.value === 'string') {\n      node.value = node.value.split(spaceToken).join(' ');\n    }\n    if (node.children) {\n      node.children.forEach(recreateSpaces);\n    }\n  }\n\n  const convert = rehypeRemark.apply(this, arguments);\n  return function (tree, file) {\n    preserveInitialSpaces(tree);\n    const markdownTree = convert.apply(this, [tree, file]);\n    recreateSpaces(markdownTree);\n    return markdownTree;\n  };\n}\n","import { convertDocsHtmlToMarkdown } from './lib/convert.js';\n\nconst inputElement = document.getElementById('input');\nconst outputElement = document.getElementById('output');\nconst inputInstructions = document.querySelector('#input-area .instructions');\nconst outputInstructions = document.querySelector('#output-area .instructions');\n\ninputElement.addEventListener('input', event => {\n  const hasContent = !!inputElement.textContent;\n  inputInstructions.style.display = hasContent ? 'none' : '';\n\n  convertDocsHtmlToMarkdown(inputElement.innerHTML)\n    .then(markdown => {\n      outputElement.value = markdown;\n      outputInstructions.style.display = markdown.trim() ? 'none' : '';\n    })\n    .catch(error => {\n      console.error(error);\n      outputInstructions.style.display = '';\n    });\n});\n\nwindow.convertDocsHtmlToMarkdown = convertDocsHtmlToMarkdown;\n\nconst copyButton = document.getElementById('copy-button');\nif (navigator.clipboard && navigator.clipboard.writeText) {\n  copyButton.style.display = '';\n  copyButton.addEventListener('click', () => {\n    navigator.clipboard.writeText(outputElement.value).catch((error) => {\n      alert(`Unable to copy markdown to clipboard: ${error}`);\n    });\n  });\n}\n"],"names":["module","exports","source","character","index","value","String","count","Error","indexOf","length","hasOwn","Object","prototype","hasOwnProperty","toStr","toString","defineProperty","gOPD","getOwnPropertyDescriptor","isArray","arr","Array","call","isPlainObject","obj","key","hasOwnConstructor","hasIsPrototypeOf","constructor","setProperty","target","options","name","enumerable","configurable","newValue","writable","getProperty","extend","src","copy","copyIsArray","clone","arguments","i","deep","create","ctor","superCtor","super_","TempCtor","code","charCodeAt","str","TypeError","test","toLowerCase","alphabetical","decimal","isBuffer","re","fromCode","charAt","fromCharCode","expected","maximum","escapes","defaults","gfm","concat","commonmark","settings","default","repeat","table","cells","columnIndex","columnLength","largest","size","cell","lines","line","before","after","padding","start","delimiterStart","end","delimiterEnd","align","alignDelimiters","alignments","stringLength","defaultStringLength","rowIndex","rowLength","cellMatrix","sizeMatrix","row","sizes","longestCellByColumn","mostCellsPerRow","undefined","push","toAlignment","l","colon","r","c","Math","max","dash","splice","space","verticalBar","join","replace","trailingWhitespace","lineFeed","x","C","L","R","visit","mergeable","node","type","position","column","tree","child","parent","siblings","children","prev","ok","convert","Boolean","typeFactory","tests","checks","apply","this","anyFactory","allFactory","d","visitParents","color","CONTINUE","SKIP","EXIT","visitor","reverse","step","is","factory","parents","tagName","displayName","subresult","offset","grandparents","result","toResult","el","characters","char","entity","document","createElement","innerHTML","textContent","legacy","invalid","hexadecimal","alphanumerical","decodeEntity","option","indent","entityCharacters","namedEntity","terminated","reference","following","warning","reason","output","begin","next","diff","additional","nonTerminated","handleText","text","handleReference","handleWarning","textContext","referenceContext","warningContext","pos","queue","now","messages","noop","ampersand","tab","formFeed","lessThan","numberSign","uppercaseX","lowercaseX","hexa","deci","own","semicolon","namedUnknown","namedNotTerminated","namedEmpty","attribute","equalsTo","numericNotTerminated","parseInt","bases","numericProhibited","replacementCharacter","numericDisallowed","disallowed","numericEmpty","flush","slice","parse","Function","unherit","xtend","Compiler","stringify","Local","data","toggle","file","inLink","inTable","setOptions","proto","enterLink","enterTable","enterLinkReference","compile","all","block","visitOrderedItems","visitUnorderedItems","visitors","root","heading","paragraph","blockquote","list","listItem","inlineCode","html","thematicBreak","strong","emphasis","break","delete","link","linkReference","imageReference","definition","image","tableCell","pedantic","entities","setext","closeAtx","tableCellPadding","tablePipeAlign","incrementListMarker","tightDefinitions","fences","fence","bullet","listItemIndent","rule","ruleSpaces","ruleRepetition","alphanumeric","whitespace","prefix","afterNewLine","wordCharBefore","wordCharAfter","self","markers","dot","rightParenthesis","previous","escapable","escaped","blankExpression","backslash","graveAccent","asterisk","leftSquareBracket","rightSquareBracket","tilde","alignment","underscore","protocol","greaterThan","plusSign","one","referenceType","shortcut","leftParenthesis","exclamationMark","unshift","mailto","https","http","lastIndexOf","tail","results","gap","comment","triple","definitionGap","blank","values","ordered","lang","compact","fail","fn","increment","spread","encode","escapeFactory","identity","current","validate","maps","raise","useNamedReferences","escapeOnly","encodeFactory","escape","true","false","numbers","_","mixed","boolean","context","def","string","map","number","isNaN","function","entityPrefixLength","identifier","punctuationExppresion","title","delimiter","quotationMark","apostrophe","uri","always","expression","compiler","exitLink","decode","split","collapsed","label","level","tabSize","normal","streak","pad","marker","info","meta","content","url","depth","alt","exit","ticks","graveAccentChar","head","wrap","ws","spacing","style","checked","ceil","doc","markdownTable","rows","cache","res","num","substr","state","ctx","subset","groups","RegExp","charactersToExpression","basic","pair","format","core","smart","named","numeric","useShortestReferences","toNamed","omitOptionalSemicolons","toHexadecimal","toDecimal","omit","toUpperCase","dangerous","inherits","Super","Of","From","parameters","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","o","get","prop","Symbol","toStringTag","Schema","property","merge","definitions","assign","normalize","Info","booleanish","overloadedBoolean","commaSeparated","spaceSeparated","commaOrSpaceSeparated","mustUseProperty","defined","powers","keys","DefinedInfo","mask","super","mark","properties","transform","attributes","includes","xlink","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xml","xmlLang","xmlBase","xmlSpace","caseSensitiveTransform","caseInsensitiveTransform","xmlns","xmlnsxlink","xmlnsXLink","aria","ariaActiveDescendant","ariaAtomic","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDescribedBy","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabel","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","role","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","acceptCharset","accessKey","action","allow","allowFullScreen","allowPaymentRequest","allowUserMedia","as","async","autoCapitalize","autoComplete","autoFocus","autoPlay","capture","charSet","cite","className","cols","colSpan","contentEditable","controls","controlsList","coords","crossOrigin","dateTime","decoding","defer","dir","dirName","disabled","download","draggable","encType","enterKeyHint","form","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","height","hidden","high","href","hrefLang","htmlFor","httpEquiv","id","imageSizes","imageSrcSet","inputMode","integrity","isMap","itemId","itemProp","itemRef","itemScope","itemType","kind","language","loading","loop","low","manifest","maxLength","media","method","min","minLength","multiple","muted","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforePrint","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onChange","onClick","onClose","onContextMenu","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","open","optimum","pattern","ping","placeholder","playsInline","poster","preload","readOnly","referrerPolicy","rel","required","reversed","rowSpan","sandbox","scope","scoped","seamless","selected","shape","slot","span","spellCheck","srcDoc","srcLang","srcSet","tabIndex","translate","typeMustMatch","useMap","width","aLink","archive","axis","background","bgColor","border","borderColor","bottomMargin","cellPadding","cellSpacing","charOff","classId","clear","codeBase","codeType","declare","event","face","frame","frameBorder","hSpace","leftMargin","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","object","profile","prompt","rev","rightMargin","rules","scheme","scrolling","standby","summary","topMargin","valueType","version","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","security","unselectable","svg","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","strokeWidth","textAnchor","textDecoration","textRendering","typeOf","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cursor","cx","cy","defaultAction","descent","diffuseConstant","direction","display","dur","divisor","dx","dy","edgeMode","editable","elevation","exponent","externalResourcesRequired","fill","filter","filterRes","filterUnits","focusable","focusHighlight","fr","from","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","handler","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in","in2","intercept","k","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","mode","numOctaves","observer","opacity","operator","order","orient","orientation","origin","overflow","overlay","path","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","resource","restart","rotate","rx","ry","scale","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","startOffset","stdDeviation","stemh","stemv","stitchTiles","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","to","u1","u2","unicode","viewBox","viewTarget","visibility","widths","x1","x2","xChannelSelector","y","y1","y2","yChannelSelector","z","zoomAndPan","valid","cap","kebab","$0","camelcase","search","input","trim","token","tokens","buttonTypes","Set","schema","defaultTagName","caseSensitive","adjust","createAdjustMap","selector","subvalue","match","props","lastIndex","exec","parseSelector","has","addProperty","addChild","Type","datasetToProperty","datasetToAttribute","find","Number","parsePrimitive","finalResult","nodes","h","check","castFactory","propsFactory","isBlank","getResolvedStyleProperty","propertyName","ancestors","_resolvedStyle","_style","error","console","warn","parseCssPropertyList","getNodeStyle","parentAncestors","resolveNodeStyle","Proxy","_receiver","blockElements","spaceSensitiveElements","isList","isBlock","isSpaceSensitive","isCell","spaceAtStartPattern","spaceAtEndPattern","wrapChildren","wrapper","unwrapLineBreaks","removeLineBreaksBeforeBlocks","_extractInvalidSpace","totalSpace","spaceMatch","body","getNodeTextAlignment","alignMatch","isAllTextCode","hasText","childResult","createCodeBlocks","codeBlocks","activeCodeBlock","contents","flatMap","webNamespaces","mathml","s","ELEMENT_NODE","TEXT_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_TYPE_NODE","DOCUMENT_FRAGMENT_NODE","nodeType","namespaceURI","getAttributeNames","getAttribute","nodeValue","childNodes","createFragment","htmlString","createDocument","DOMParser","parseFromString","wrapText","dataMdast","handlers","unknown","isElement","convertElement","POSITIVE_INFINITY","embedded","blocks","skippable","ignorableNode","rehypeMinifyWhitespace","collapse","newlines","replaceNewlines","replaceWhitespace","minify","blocklike","inferWhiteSpace","collapsableAfter","remove","ignore","stripAtStart","removable","minifyText","inferBoundary","thing","phrasing","runs","wrapNeeded","onphrasing","onnonphrasing","nonphrasing","flattened","flatten","rest","n","resolve","frozenBaseUrl","URL","findAfter","searchLineFeeds","searchTabOrSpaces","p","notRendered","blockOrCaption","toText","inferWhitespace","breakBefore","breakAfter","collectText","innerTextCollection","suffix","items","collectElement","collectPreText","trimAndCollapseSpacesAndTabs","pre","isCode","classList","del","listItemsSpread","wrapListItems","div","dt","dd","handle","em","img","hasProperty","findSelectedOptions","findOptions","selectedOptions","datalist","li","checkbox","ol","includeImageAlt","video","linkInFallbackContent","thead","tr","toCells","doctype","applet","area","basefont","bgsound","caption","col","colgroup","command","dialog","element","embed","frameset","isindex","keygen","math","menu","menuitem","nextid","noembed","noframes","optgroup","param","script","shadow","spacer","template","track","acronym","bdi","bdo","big","blink","button","canvas","details","dfn","font","ins","marquee","meter","nobr","noscript","progress","rb","rbc","rp","rt","rtc","ruby","small","sup","sub","tbody","tfoot","time","address","article","aside","center","fieldset","figcaption","figure","footer","header","hgroup","legend","main","multicol","nav","picture","section","a","audio","b","base","baseFound","br","dl","clean","group","titles","h1","h2","h3","h4","h5","h6","hr","iframe","texts","nodeById","kbd","listing","plaintext","q","quotes","qNesting","samp","select","strike","headless","cellIndex","inspect","toRows","columns","otherRowIndex","colIndex","newCells","alignIndex","td","textarea","th","tt","u","ul","var","wbr","xmp","toMdast","byId","mdast","unchecked","destination","processor","run","bridge","mutate","bail","getPrototypeOf","iterator","stringifyPosition","point","VFileMessage","place","parts","message","stack","ruleId","fatal","note","basename","ext","assertPath","seenNonSlash","firstNonSlashEnd","extIndex","dirname","unmatchedSlash","extname","startPart","startDot","preDotState","segments","joined","absolute","allowAboveRoot","lastSlashIndex","lastSegmentLength","lastSlash","dots","normalizeString","sep","JSON","proc","isUrl","fileURLOrPath","VFile","history","cwd","stored","hostname","pathname","third","decodeURIComponent","getPathFromURLPosix","urlToPath","assertNonEmpty","assertPart","stem","encoding","part","unified","transformers","fns","pipeline","middlewareIndex","callback","pop","middleware","called","fnExpectsCallback","done","Promise","then","use","middelware","trough","attachers","frozen","namespace","freezeIndex","assertUnfrozen","Parser","freeze","attacher","transformer","addPlugin","addList","addPreset","add","plugin","plugins","entry","vfile","assertParser","newable","assertCompiler","assertNode","executor","reject","runSync","complete","assertDone","process","processSync","asyncName","looksLikeAVFile","preserveTagAndConvertContents","fragment","_file","isStyled","weight","verticalAlign","decorationLine","startsWith","childrenCount","convertInlineStylesToElements","_index","_parent","newChildren","activeNode","mergeConsecutiveInlineStyles","nextIndex","startSpace","endSpace","fixNestedLists","childAlignment","detectTableColumnAlignment","spaceToken","preserveInitialSpaces","endsWith","forEach","recreateSpaces","markdownTree","convertDocsHtmlToMarkdown","breaks","inputElement","getElementById","outputElement","inputInstructions","querySelector","outputInstructions","addEventListener","hasContent","markdown","catch","window","copyButton","navigator","clipboard","writeText","alert"],"sourceRoot":""}